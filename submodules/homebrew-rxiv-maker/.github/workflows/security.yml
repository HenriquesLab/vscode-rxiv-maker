name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scans weekly on Tuesdays at 7 AM UTC
    - cron: '0 7 * * 2'
  workflow_dispatch:

# Cancel in-progress runs when a new run is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python
          queries: security-extended,security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:python"

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history for better secret detection
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}

  formula-security-check:
    name: Formula Security Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for security issues in formula
        run: |
          echo "🔍 Checking formula for security issues..."
          
          # Check for insecure URLs (HTTP instead of HTTPS)
          if grep -n "http://" Formula/rxiv-maker.rb; then
            echo "❌ Found insecure HTTP URLs in formula"
            exit 1
          fi
          
          # Check for hardcoded secrets or tokens
          if grep -E "(password|token|secret|key)" Formula/rxiv-maker.rb | grep -v "# "; then
            echo "❌ Potential secrets found in formula"
            exit 1
          fi
          
          # Check that SHA256 checksums are present and not placeholders
          if ! grep -q 'sha256 "[a-f0-9]\{64\}"' Formula/rxiv-maker.rb; then
            echo "❌ Missing or invalid SHA256 checksum in formula"
            exit 1
          fi
          
          # Check for suspicious system commands
          if grep -E "(sudo|rm -rf|chmod 777)" Formula/rxiv-maker.rb; then
            echo "⚠️ Found potentially dangerous system commands"
            # Don't exit here as these might be legitimate in some contexts
          fi
          
          echo "✅ Formula security check passed"

      - name: Validate download URLs are HTTPS
        run: |
          echo "🔍 Validating URL security..."
          
          # Extract URLs from formula
          URLS=$(grep -E '^\s*url\s+' Formula/rxiv-maker.rb | sed 's/.*"\(.*\)".*/\1/')
          
          for url in $URLS; do
            if [[ $url != https://* ]]; then
              echo "❌ Insecure URL found: $url"
              exit 1
            fi
            echo "✅ Secure URL: $url"
          done
          
          echo "✅ All URLs use HTTPS"

  workflow-security:
    name: Workflow Security Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check workflow security
        run: |
          echo "🔍 Checking workflow security..."
          
          # Check for workflows that might expose secrets
          if grep -r "secrets\." .github/workflows/ | grep -v "GITHUB_TOKEN"; then
            echo "⚠️ Found custom secrets usage in workflows"
            # Don't fail here as this might be legitimate
          fi
          
          # Check for workflows with write permissions
          if grep -r "permissions:" .github/workflows/ | grep -q "write"; then
            echo "ℹ️ Found workflows with write permissions (review recommended)"
          fi
          
          # Check for third-party actions (review needed)
          THIRD_PARTY_ACTIONS=$(grep -r "uses:" .github/workflows/ | grep -v "actions/" | grep -v "github/" | grep -v "Homebrew/")
          if [ ! -z "$THIRD_PARTY_ACTIONS" ]; then
            echo "ℹ️ Third-party actions found (review recommended):"
            echo "$THIRD_PARTY_ACTIONS"
          fi
          
          echo "✅ Workflow security check completed"

  security-summary:
    name: Security Summary
    needs: [codeql-analysis, secret-scanning, formula-security-check, workflow-security]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Generate security summary
        run: |
          echo "# 🔒 Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Scan Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # CodeQL results
          if [ "${{ needs.codeql-analysis.result }}" = "success" ]; then
            echo "✅ **CodeQL Analysis**: No issues found" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.codeql-analysis.result }}" = "failure" ]; then
            echo "❌ **CodeQL Analysis**: Issues detected" >> $GITHUB_STEP_SUMMARY
          else
            echo "⏭️ **CodeQL Analysis**: Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Secret scanning results
          if [ "${{ needs.secret-scanning.result }}" = "success" ]; then
            echo "✅ **Secret Scanning**: No secrets found" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.secret-scanning.result }}" = "failure" ]; then
            echo "❌ **Secret Scanning**: Secrets detected" >> $GITHUB_STEP_SUMMARY
          else
            echo "⏭️ **Secret Scanning**: Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Formula security results
          if [ "${{ needs.formula-security-check.result }}" = "success" ]; then
            echo "✅ **Formula Security**: No issues found" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.formula-security-check.result }}" = "failure" ]; then
            echo "❌ **Formula Security**: Issues detected" >> $GITHUB_STEP_SUMMARY
          else
            echo "⏭️ **Formula Security**: Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Workflow security results
          if [ "${{ needs.workflow-security.result }}" = "success" ]; then
            echo "✅ **Workflow Security**: Check completed" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.workflow-security.result }}" = "failure" ]; then
            echo "❌ **Workflow Security**: Issues detected" >> $GITHUB_STEP_SUMMARY
          else
            echo "⏭️ **Workflow Security**: Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Overall Security Status**: " >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.codeql-analysis.result }}" = "success" ] && [ "${{ needs.secret-scanning.result }}" = "success" ] && [ "${{ needs.formula-security-check.result }}" = "success" ]; then
            echo "🟢 **PASSED** - No critical security issues detected" >> $GITHUB_STEP_SUMMARY
          else
            echo "🟡 **REVIEW NEEDED** - Some security checks require attention" >> $GITHUB_STEP_SUMMARY
          fi