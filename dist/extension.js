"use strict";var xe=Object.create;var j=Object.defineProperty;var ke=Object.getOwnPropertyDescriptor;var De=Object.getOwnPropertyNames;var Ee=Object.getPrototypeOf,Se=Object.prototype.hasOwnProperty;var P=(b,e)=>j(b,"name",{value:e,configurable:!0});var Pe=(b,e)=>{for(var t in e)j(b,t,{get:e[t],enumerable:!0})},te=(b,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of De(e))!Se.call(b,i)&&i!==t&&j(b,i,{get:()=>e[i],enumerable:!(n=ke(e,i))||n.enumerable});return b};var I=(b,e,t)=>(t=b!=null?xe(Ee(b)):{},te(e||!b||!b.__esModule?j(t,"default",{value:b,enumerable:!0}):t,b)),Ce=b=>te(j({},"__esModule",{value:!0}),b);var Me={};Pe(Me,{activate:()=>Re,deactivate:()=>Ie});module.exports=Ce(Me);var l=I(require("vscode")),N=I(require("fs")),C=I(require("path")),se=require("child_process");var B=I(require("vscode"));var M=I(require("vscode")),z=I(require("fs")),q=I(require("path"));var V=class{static{P(this,"CitationValidator")}bibEntriesCache=new Map;CACHE_DURATION=5e3;async validate(e){let t=[],i=e.getText().split(`
`);try{let s=await this.getBibEntries(e),a=new Set(s.map(o=>o.key)),r=!1;for(let o=0;o<i.length;o++){let d=i[o];if(d.trim().startsWith("```")){r=!r;continue}if(r)continue;let m=d.matchAll(/(?<!\\)\[(@[^\]]+)\]/g);for(let y of m){if(this.isPositionInCodeSpan(d,y.index))continue;let h=y[1].match(/(?<!\\)@([a-zA-Z0-9_-]+)/g);if(h)for(let S of h){let E=S.substring(1),F=d.indexOf(S,y.index);this.validateCitationKey(E,o,d,F,a,t)}}let f=d.matchAll(/(?<!\\)@(?!fig:|eq:|table:|tbl:|sfig:|stable:|snote:)([a-zA-Z0-9_-]+)/g);for(let y of f){if(this.isPositionInCodeSpan(d,y.index))continue;let h=y[1];h&&this.isValidCitationKey(h)&&this.validateCitationKey(h,o,d,y.index,a,t)}}}catch{let a=new M.Diagnostic(new M.Range(0,0,0,0),"No bibliography file (03_REFERENCES.bib) found. Citation validation disabled.",M.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="missing-bibliography",t.push(a)}return t}validateCitationKey(e,t,n,i,s,a){if(!s.has(e)){let r=n.indexOf("@"+e,i),o=new M.Range(t,r,t,r+e.length+1),d=new M.Diagnostic(o,`Citation '@${e}' not found in bibliography`,M.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="unknown-citation",a.push(d)}}isValidCitationKey(e){return/^[a-zA-Z0-9_-]+$/.test(e)}isPositionInCodeSpan(e,t){let n=[],i=-1;for(let s=0;s<e.length;s++)e[s]==="`"&&(i===-1?i=s:(n.push({start:i,end:s}),i=-1));for(let s of n)if(t>=s.start&&t<=s.end)return!0;return!1}async getBibEntries(e){let t=this.getBibliographySearchPaths(e),n=null;for(let a of t)try{await z.promises.access(a,z.constants.F_OK|z.constants.R_OK),n=a;break}catch{}if(!n)throw new Error("No bibliography file found");let i=this.bibEntriesCache.get(n),s=Date.now();if(i&&s-i.timestamp<this.CACHE_DURATION)return i.entries;try{let a=await z.promises.readFile(n,"utf8"),r=this.parseBibFile(a);return this.bibEntriesCache.set(n,{entries:r,timestamp:s}),r}catch(a){throw new Error(`Error reading bibliography file: ${a}`)}}getBibliographySearchPaths(e){let t=[],n=q.dirname(e.fileName);if(t.push(q.join(n,"03_REFERENCES.bib")),M.workspace.workspaceFolders)for(let i of M.workspace.workspaceFolders){let s=q.join(i.uri.fsPath,"03_REFERENCES.bib");t.includes(s)||t.push(s)}return t}parseBibFile(e){let t=[],n=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,i;for(;(i=n.exec(e))!==null;){let s=i[1],a=i[2],r=i.index,o=this.findMatchingBrace(e,r),d=e.substring(r,o),m=d.match(/title\s*=\s*[{"](.*?)["}]/),f=d.match(/author\s*=\s*[{"](.*?)["}]/),y=d.match(/year\s*=\s*[{"](.*?)["}]/);t.push({key:a,type:s,title:m?.[1],author:f?.[1],year:y?.[1]})}return t}findMatchingBrace(e,t){let n=0,i=!1,s="";for(let a=t;a<e.length;a++){let r=e[a];if(i)r===s&&e[a-1]!=="\\"&&(i=!1);else if(r==='"'||r==="'")i=!0,s=r;else if(r==="{")n++;else if(r==="}"&&(n--,n===0))return a+1}return e.length}};var A=I(require("vscode")),W=I(require("fs")),$=I(require("path"));var Y=class{static{P(this,"CrossReferenceValidator")}labelsCache=new Map;CACHE_DURATION=5e3;async validate(e){let t=[],i=e.getText().split(`
`);try{let s=await this.getDefinedLabels(e),a=this.createLabelMap(s),r={fig:/(?<!\\)@fig:([a-zA-Z0-9_-]+)/g,sfig:/(?<!\\)@sfig:([a-zA-Z0-9_-]+)/g,table:/(?<!\\)@table:([a-zA-Z0-9_-]+)/g,stable:/(?<!\\)@stable:([a-zA-Z0-9_-]+)/g,eq:/(?<!\\)@eq:([a-zA-Z0-9_-]+)/g,snote:/(?<!\\)@snote:([a-zA-Z0-9_-]+)/g},o=!1;for(let m=0;m<i.length;m++){let f=i[m];if(f.trim().startsWith("```")){o=!o;continue}if(!o)for(let[y,h]of Object.entries(r)){let S=f.matchAll(h);for(let E of S){if(this.isPositionInCodeSpan(f,E.index))continue;let F=E[1],Z=`${y}:${F}`;if(!a.has(Z)){let U=new A.Range(m,E.index,m,E.index+E[0].length),O=new A.Diagnostic(U,`Reference '${E[0]}' not found. No matching label defined.`,A.DiagnosticSeverity.Error);O.source="rxiv-markdown",O.code="undefined-reference",t.push(O)}}}}let d=this.findDuplicateLabels(s);for(let m of d)if(m.file===e.fileName){let f=new A.Range(m.line,0,m.line,0),y=new A.Diagnostic(f,`Duplicate label '${m.type}:${m.label}' defined multiple times`,A.DiagnosticSeverity.Warning);y.source="rxiv-markdown",y.code="duplicate-label",t.push(y)}}catch(s){console.error("Error validating cross-references:",s)}return t}async getDefinedLabels(e){let t=await this.getManuscriptFiles(e),n=[];for(let i of t)try{let s=this.labelsCache.get(i),a=Date.now();if(s&&a-s.timestamp<this.CACHE_DURATION){n.push(...s.labels);continue}let r=await W.promises.readFile(i,"utf8"),o=this.extractLabelsFromContent(r,i);this.labelsCache.set(i,{labels:o,timestamp:a}),n.push(...o)}catch{continue}return n}extractLabelsFromContent(e,t){let n=[],i=e.split(`
`),s={fig:/\{#fig:([a-zA-Z0-9_:-]+)([^}]*)\}/g,sfig:/\{#sfig:([a-zA-Z0-9_:-]+)([^}]*)\}/g,table:/\{#table:([a-zA-Z0-9_:-]+)([^}]*)\}/g,stable:/\{#stable:([a-zA-Z0-9_:-]+)([^}]*)\}/g,eq:/\$\$.*?\$\$\s*\{[^}]*#eq:([a-zA-Z0-9_:-]+)[^}]*\}/g,snote:/\{#snote:([a-zA-Z0-9_:-]+)\}/g};for(let a=0;a<i.length;a++){let r=i[a];for(let[o,d]of Object.entries(s)){let m=r.matchAll(d);for(let f of m){let y=f[1];n.push({type:o,label:y,line:a,file:t})}}}return n}async getManuscriptFiles(e){let t=[],n=$.dirname(e.fileName);if(t.push($.join(n,"01_MAIN.md")),t.push($.join(n,"02_SUPPLEMENTARY_INFO.md")),t.push($.join(n,"01_MAIN.rxm")),t.push($.join(n,"02_SUPPLEMENTARY_INFO.rxm")),A.workspace.workspaceFolders)for(let s of A.workspace.workspaceFolders){let a=s.uri.fsPath,r=$.join(a,"01_MAIN.md"),o=$.join(a,"02_SUPPLEMENTARY_INFO.md"),d=$.join(a,"01_MAIN.rxm"),m=$.join(a,"02_SUPPLEMENTARY_INFO.rxm");t.includes(r)||t.push(r),t.includes(o)||t.push(o),t.includes(d)||t.push(d),t.includes(m)||t.push(m)}let i=[];for(let s of t)try{await W.promises.access(s,W.constants.F_OK),i.push(s)}catch{}return i}createLabelMap(e){let t=new Map;for(let n of e){let i=`${n.type}:${n.label}`;t.set(i,n)}return t}findDuplicateLabels(e){let t=new Map,n=[];for(let i of e){let s=`${i.type}:${i.label}`;if(t.has(s)){n.push(i);let a=t.get(s);n.includes(a)||n.push(a)}else t.set(s,i)}return n}isPositionInCodeSpan(e,t){let n=[],i=-1;for(let s=0;s<e.length;s++)e[s]==="`"&&(i===-1?i=s:(n.push({start:i,end:s}),i=-1));for(let s of n)if(t>=s.start&&t<=s.end)return!0;return!1}};var k=I(require("vscode"));var H=class{static{P(this,"PythonBlockValidator")}async validate(e){let t=[],i=e.getText().split(`
`),s=!1,a=-1,r="";for(let o=0;o<i.length;o++){let d=i[o],m=d.match(/^\s*\{\{py:\s*(.*)$/),f=d.match(/^\s*\}\}\s*$/),y=d.match(/\{py:\s*([^}]+)\}/g);if(m&&!s){s=!0,a=o,r=d.match(/^\s*/)?.[0]||"";let h=m[1].trim();h&&!h.endsWith("}}")&&this.validatePythonSyntax(h,o,m.index,t)}else if(f&&s)s=!1,a=-1;else if(s&&a!==-1){let h=d.replace(/^\s*/,"");h.trim()&&!h.includes("}}")&&this.validatePythonSyntax(h,o,0,t)}if(y)for(let h of y){let S=h.match(/\{py:\s*([^}]+)\}/);if(S){let E=S[1],F=d.indexOf(h);this.validateInlinePython(E,o,F,t)}}this.validatePythonVariableOperations(d,o,t)}if(s){let o=new k.Diagnostic(new k.Range(a,0,a,i[a].length),'Unclosed Python block - missing "}}"',k.DiagnosticSeverity.Error);o.source="rxiv-markdown",o.code="unclosed-python-block",t.push(o)}return t}validatePythonSyntax(e,t,n,i){let s=e.trim();if(!s)return;let a=this.findBasicSyntaxIssues(s);for(let r of a){let o=new k.Diagnostic(new k.Range(t,n,t,n+e.length),r.message,r.severity);o.source="rxiv-markdown",o.code=r.code,i.push(o)}}validateInlinePython(e,t,n,i){let s=e.trim();if(s.includes(`
`)){let a=new k.Diagnostic(new k.Range(t,n,t,n+e.length+6),"Inline Python expressions cannot contain newlines",k.DiagnosticSeverity.Error);a.source="rxiv-markdown",a.code="multiline-inline-python",i.push(a)}this.validatePythonSyntax(s,t,n+4,i)}validatePythonVariableOperations(e,t,n){let i=[{pattern:/\{py:set\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(.+)\}/,type:"set"},{pattern:/\{py:get\s+([a-zA-Z_][a-zA-Z0-9_]*)\}/,type:"get"},{pattern:/\{py:global\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(.+)\}/,type:"global"},{pattern:/\{py:format="([^"]+)"\s+(.+)\}/,type:"format"},{pattern:/\{py:context="([^"]+)"\s+(.+)\}/,type:"context"},{pattern:/\{py:if\s+(.+?):\s*"([^"]*?)"\s*else:\s*"([^"]*?)"\}/,type:"conditional"}];for(let r of i){let o=e.matchAll(new RegExp(r.pattern.source,"g"));for(let d of o)this.validatePythonOperation(d,r.type,t,n)}let s=e.matchAll(/\{py:import\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)\}/g);for(let r of s)this.validateImportStatement(r[1],t,r.index,n);let a=e.matchAll(/\{py:from\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)\s+import\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\s*,\s*[a-zA-Z_][a-zA-Z0-9_]*)*)\}/g);for(let r of a)this.validateFromImportStatement(r[1],r[2],t,r.index,n)}findBasicSyntaxIssues(e){let t=[],n=(e.match(/\(/g)||[]).length,i=(e.match(/\)/g)||[]).length;n!==i&&t.push({message:"Unmatched parentheses in Python code",severity:k.DiagnosticSeverity.Error,code:"unmatched-parentheses"});let s=(e.match(/\[/g)||[]).length,a=(e.match(/\]/g)||[]).length;s!==a&&t.push({message:"Unmatched brackets in Python code",severity:k.DiagnosticSeverity.Error,code:"unmatched-brackets"});let r=(e.match(/\{/g)||[]).length,o=(e.match(/\}/g)||[]).length;return r!==o&&t.push({message:"Unmatched braces in Python code",severity:k.DiagnosticSeverity.Error,code:"unmatched-braces"}),e.includes("	")&&e.includes("    ")&&t.push({message:"Mixed tabs and spaces in Python code",severity:k.DiagnosticSeverity.Warning,code:"mixed-indentation"}),e.match(/^\s*def\s+/)&&!e.includes(":")&&t.push({message:"Function definition missing colon",severity:k.DiagnosticSeverity.Error,code:"missing-colon"}),e.match(/^\s*(if|elif|else|for|while|try|except|finally|with)\s+/)&&!e.includes(":")&&t.push({message:"Control structure missing colon",severity:k.DiagnosticSeverity.Error,code:"missing-colon"}),t}validatePythonOperation(e,t,n,i){let s=e[0],a=e.index;switch(t){case"set":case"global":let r=e[1],o=e[2];if(!this.isValidVariableName(r)){let f=new k.Diagnostic(new k.Range(n,a,n,a+s.length),`Invalid variable name '${r}'`,k.DiagnosticSeverity.Error);f.source="rxiv-markdown",f.code="invalid-variable-name",i.push(f)}break;case"get":let d=e[1];if(!this.isValidVariableName(d)){let f=new k.Diagnostic(new k.Range(n,a,n,a+s.length),`Invalid variable name '${d}'`,k.DiagnosticSeverity.Error);f.source="rxiv-markdown",f.code="invalid-variable-name",i.push(f)}break;case"format":if(!e[1].trim()){let f=new k.Diagnostic(new k.Range(n,a,n,a+s.length),"Empty format specification",k.DiagnosticSeverity.Warning);f.source="rxiv-markdown",f.code="empty-format-spec",i.push(f)}break}}validateImportStatement(e,t,n,i){if(!this.isValidModuleName(e)){let s=new k.Diagnostic(new k.Range(t,n,t,n+e.length+12),`Invalid module name '${e}'`,k.DiagnosticSeverity.Error);s.source="rxiv-markdown",s.code="invalid-module-name",i.push(s)}}validateFromImportStatement(e,t,n,i,s){if(!this.isValidModuleName(e)){let r=new k.Diagnostic(new k.Range(n,i,n,i+20),`Invalid module name '${e}'`,k.DiagnosticSeverity.Error);r.source="rxiv-markdown",r.code="invalid-module-name",s.push(r)}let a=t.split(",").map(r=>r.trim());for(let r of a)if(!this.isValidVariableName(r)){let o=new k.Diagnostic(new k.Range(n,i,n,i+20),`Invalid import name '${r}'`,k.DiagnosticSeverity.Error);o.source="rxiv-markdown",o.code="invalid-import-name",s.push(o)}}isValidVariableName(e){return/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(e)}isValidModuleName(e){return/^[a-zA-Z_][a-zA-Z0-9_]*(\.[a-zA-Z_][a-zA-Z0-9_]*)*$/.test(e)}};var D=I(require("vscode"));var X=class{static{P(this,"LaTeXBlockValidator")}async validate(e){let t=[],i=e.getText().split(`
`),s=!1,a=-1,r="",o=[],d=[];for(let m=0;m<i.length;m++){let f=i[m],y=f.match(/^\s*\{\{tex:\s*(.*)$/),h=f.match(/^\s*\}\}\s*$/),S=f.match(/\{\{tex:\s*([^}]+)\}\}/g);if(y&&!s){s=!0,a=m,r="",o=[];let E=y[1].trim();E&&!E.endsWith("}}")&&(r+=E+`
`,o.push(E))}else if(h&&s)s=!1,r.trim()&&this.validateTexBlock(r,a,o,d,t),this.checkUnclosedenvironments(d,m,t),d=[],a=-1,r="",o=[];else if(s&&a!==-1){let E=f.trim();E&&!E.includes("}}")&&(r+=E+`
`,o.push(E))}if(S)for(let E of S){let F=E.match(/\{\{tex:\s*([^}]+)\}\}/);if(F){let Z=F[1],U=f.indexOf(E),O=[];this.validateLaTeXSyntax(Z,m,U,O,t)}}s||this.validateInlineLaTeXElements(f,m,t)}if(s){let m=new D.Diagnostic(new D.Range(a,0,a,i[a].length),'Unclosed TeX block - missing "}}"',D.DiagnosticSeverity.Error);m.source="rxiv-markdown",m.code="unclosed-tex-block",t.push(m)}return t}validateTexBlock(e,t,n,i,s){let a=this.findBraceIssues(e);for(let r of a){let o=new D.Diagnostic(new D.Range(t,0,t+n.length,0),r.message,r.severity);o.source="rxiv-markdown",o.code=r.code,s.push(o)}for(let r=0;r<n.length;r++){let o=n[r],d=t+r+(t===0?0:1);this.trackLaTeXEnvironments(o,d,i,s)}}findBraceIssues(e){let t=[],n=0,i=!1,s="";for(let a=0;a<e.length;a++){let r=e[a],o=a>0?e[a-1]:"";if(i){r===s&&o!=="\\"&&(i=!1);continue}if((r==='"'||r==="'")&&o!=="\\"){i=!0,s=r;continue}if(r==="{"&&o!=="\\"?n++:r==="}"&&o!=="\\"&&n--,n<0){t.push({message:"Unmatched closing brace in LaTeX code",severity:D.DiagnosticSeverity.Error,code:"unmatched-closing-brace"});break}}return n>0&&t.push({message:"Unmatched opening brace in LaTeX code",severity:D.DiagnosticSeverity.Error,code:"unmatched-opening-brace"}),t}validateLaTeXSyntax(e,t,n,i,s){if(!e.trim())return;this.trackLaTeXEnvironments(e,t,i,s);let a=this.findLaTeXSyntaxIssues(e);for(let r of a){let o=new D.Diagnostic(new D.Range(t,n+r.column,t,n+r.column+r.length),r.message,r.severity);o.source="rxiv-markdown",o.code=r.code,s.push(o)}}validateInlineLaTeXElements(e,t,n){let i=[...e.matchAll(/\$\$([^$]+)\$\$/g),...e.matchAll(/(?<!\$)\$([^$\n]+)\$(?!\$)/g)];for(let a of i){let r=a[1],o=a.index,d=this.findMathExpressionIssues(r);for(let m of d){let f=new D.Diagnostic(new D.Range(t,o,t,o+a[0].length),m.message,m.severity);f.source="rxiv-markdown",f.code=m.code,n.push(f)}}let s=e.matchAll(/\\([a-zA-Z]+)(\*?)\{([^}]*)\}/g);for(let a of s){let r=a[1],o=a[2],d=a[3],m=a.index;this.validateLaTeXCommand(r,o,d,t,m,n)}}trackLaTeXEnvironments(e,t,n,i){let s=[...e.matchAll(/\\begin\{([^}]+)\}/g)],a=[...e.matchAll(/\\end\{([^}]+)\}/g)],r=[...s.map(o=>({type:"begin",env:o[1],index:o.index})),...a.map(o=>({type:"end",env:o[1],index:o.index}))].sort((o,d)=>o.index-d.index);for(let o of r)if(o.type==="begin")n.push({name:o.env,line:t});else if(o.type==="end")if(n.length===0){let d=new D.Diagnostic(new D.Range(t,o.index,t,o.index+`\\end{${o.env}}`.length),`Unexpected \\end{${o.env}} - no matching \\begin`,D.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="unmatched-end-environment",i.push(d)}else{let d=n.pop();if(d.name!==o.env){let m=new D.Diagnostic(new D.Range(t,o.index,t,o.index+`\\end{${o.env}}`.length),`Environment mismatch: \\end{${o.env}} does not match \\begin{${d.name}} on line ${d.line+1}`,D.DiagnosticSeverity.Error);m.source="rxiv-markdown",m.code="mismatched-environment",i.push(m)}}}checkUnclosedenvironments(e,t,n){for(let i of e){let s=new D.Diagnostic(new D.Range(i.line,0,i.line,0),`Unclosed LaTeX environment '${i.name}' - missing \\end{${i.name}}`,D.DiagnosticSeverity.Error);s.source="rxiv-markdown",s.code="unclosed-environment",n.push(s)}}findLaTeXSyntaxIssues(e){let t=[];if(!e.includes(`
`)){let s=0,a=-1;for(let r=0;r<e.length;r++){let o=e[r];o==="{"&&(r===0||e[r-1]!=="\\")?(s++,s===1&&(a=r)):o==="}"&&(r===0||e[r-1]!=="\\")&&s--}s>0?t.push({message:"Unmatched opening brace in LaTeX code",severity:D.DiagnosticSeverity.Error,code:"unmatched-brace",column:a,length:1}):s<0&&t.push({message:"Unmatched closing brace in LaTeX code",severity:D.DiagnosticSeverity.Error,code:"unmatched-brace",column:0,length:e.length})}let i=e.match(/\\[0-9]/g);if(i)for(let s of i){let a=e.indexOf(s);t.push({message:`Invalid LaTeX command '${s}' - commands cannot start with numbers`,severity:D.DiagnosticSeverity.Error,code:"invalid-command",column:a,length:s.length})}return e.endsWith("\\")&&!e.endsWith("\\\\")&&t.push({message:"Incomplete LaTeX command at end of line",severity:D.DiagnosticSeverity.Error,code:"incomplete-command",column:e.length-1,length:1}),t}findMathExpressionIssues(e){let t=[];e.trim()||t.push({message:"Empty math expression",severity:D.DiagnosticSeverity.Warning,code:"empty-math"});let n=(e.match(/\\left[(\[\{|]/g)||[]).length,i=(e.match(/\\right[)\]\}|]/g)||[]).length;return n!==i&&t.push({message:"Unbalanced \\left and \\right delimiters in math expression",severity:D.DiagnosticSeverity.Error,code:"unbalanced-delimiters"}),t}validateLaTeXCommand(e,t,n,i,s,a){if(["textbf","textit","emph","caption","label"].includes(e)&&!n.trim()){let o=new D.Diagnostic(new D.Range(i,s,i,s+`\\${e}${t}{}`.length),`LaTeX command '\\${e}${t}' should not be empty`,D.DiagnosticSeverity.Warning);o.source="rxiv-markdown",o.code="empty-command-content",a.push(o)}if(e==="label"&&!n.match(/^(fig|table|eq|sfig|stable|snote):[a-zA-Z0-9_-]+$/)){let o=new D.Diagnostic(new D.Range(i,s,i,s+`\\label{${n}}`.length),`Invalid label format '${n}'. Expected format: type:name (e.g., fig:my-figure)`,D.DiagnosticSeverity.Warning);o.source="rxiv-markdown",o.code="invalid-label-format",a.push(o)}}};var w=I(require("vscode")),L=I(require("fs")),T=I(require("path"));var K=class{static{P(this,"StructureValidator")}async validate(e){let t=[],n=e.getText(),i=n.split(`
`);return await this.validateDocumentStructure(e,t),this.validateHeadingStructure(i,e,t),this.checkRequiredElements(n,e.fileName,t),await this.validateFigureFiles(i,e,t),await this.checkOrphanedElements(n,e,t),t}async validateDocumentStructure(e,t){let n=T.basename(e.fileName),i=T.dirname(e.fileName),s=[{name:"00_CONFIG.yml",description:"Configuration file"},{name:"03_REFERENCES.bib",description:"Bibliography file"}];for(let r of s){let o=T.join(i,r.name);try{await L.promises.access(o,L.constants.F_OK)}catch{if(n==="01_MAIN.md"||n==="01_MAIN.rxm"||n==="02_SUPPLEMENTARY_INFO.md"||n==="02_SUPPLEMENTARY_INFO.rxm"){let d=new w.Diagnostic(new w.Range(0,0,0,0),`Missing required file: ${r.name} (${r.description})`,w.DiagnosticSeverity.Warning);d.source="rxiv-markdown",d.code="missing-required-file",t.push(d)}}}let a=e.getText();if(a.includes("FIGURES/")||a.includes("![")){let r=T.join(i,"FIGURES");try{if(!(await L.promises.stat(r)).isDirectory()){let d=new w.Diagnostic(new w.Range(0,0,0,0),"FIGURES should be a directory, not a file",w.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="invalid-figures-path",t.push(d)}}catch{let o=new w.Diagnostic(new w.Range(0,0,0,0),"FIGURES directory not found. Create it to store figure files.",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="missing-figures-directory",t.push(o)}}}validateHeadingStructure(e,t,n){let i=0,s=!1;for(let o=0;o<e.length;o++){let d=e[o],m=d.match(/^(#{1,6})\s+(.+)$/);if(m){let f=m[1].length,y=m[2].trim();if(!s&&f===1&&(s=!0),!y){let h=new w.Diagnostic(new w.Range(o,0,o,d.length),"Empty heading - headings should have descriptive text",w.DiagnosticSeverity.Warning);h.source="rxiv-markdown",h.code="empty-heading",n.push(h)}if(f>i+1&&i>0){let h=new w.Diagnostic(new w.Range(o,0,o,m[1].length),`Heading level skipped. Level ${f} follows level ${i}. Consider using level ${i+1} instead.`,w.DiagnosticSeverity.Information);h.source="rxiv-markdown",h.code="heading-level-skip",n.push(h)}if(i=f,y.endsWith(".")){let h=new w.Diagnostic(new w.Range(o,d.lastIndexOf("."),o,d.length),"Headings typically should not end with periods",w.DiagnosticSeverity.Information);h.source="rxiv-markdown",h.code="heading-period",n.push(h)}}}let a=T.basename(t.fileName);if(!s&&!(a==="02_SUPPLEMENTARY_INFO.md"||a==="02_SUPPLEMENTARY_INFO.rxm")){let o=new w.Diagnostic(new w.Range(0,0,0,0),"Document should start with a main title (# Title)",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="missing-title",n.push(o)}}checkRequiredElements(e,t,n){let i=T.basename(t);if(i==="01_MAIN.md"||i==="01_MAIN.rxm"){let s=/!\[.*?\]\(.*?\)/.test(e)||/@fig:/.test(e),a=/@table:/.test(e)||e.includes("|")||e.includes("\\begin{table}");if(!s&&!a){let m=new w.Diagnostic(new w.Range(0,0,0,0),"Main manuscript typically should include figures or tables",w.DiagnosticSeverity.Information);m.source="rxiv-markdown",m.code="missing-figures-tables",n.push(m)}let r=/\[@[a-zA-Z0-9_-]+(?:;@[a-zA-Z0-9_-]+)*\]/.test(e),o=/(?<![@\w])@[a-zA-Z0-9_-]+(?![:\w])/.test(e)&&!e.match(/(?<![@\w])@(fig|table|eq|sfig|stable|snote)(?![:\w])/);if(!(r||o)){let m=new w.Diagnostic(new w.Range(0,0,0,0),"Main manuscript should typically include citations",w.DiagnosticSeverity.Information);m.source="rxiv-markdown",m.code="missing-citations",n.push(m)}}if((i==="01_MAIN.md"||i==="01_MAIN.rxm")&&e.length>1e3&&!/^#+\s*(abstract|summary)/mi.test(e)){let a=new w.Diagnostic(new w.Range(0,0,0,0),"Consider adding an Abstract section to your manuscript",w.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="missing-abstract",n.push(a)}}async validateFigureFiles(e,t,n){let i=T.dirname(t.fileName);for(let s=0;s<e.length;s++){let r=e[s].matchAll(/!\[([^\]]*)\]\(([^)]+)\)/g);for(let o of r){let d=o[1],m=o[2];if(m.startsWith("http://")||m.startsWith("https://"))continue;let f=T.resolve(i,m);try{await L.promises.access(f,L.constants.F_OK)}catch{let S=o.index+o[0].indexOf(m),E=new w.Diagnostic(new w.Range(s,S,s,S+m.length),`Figure file not found: ${m}`,w.DiagnosticSeverity.Error);E.source="rxiv-markdown",E.code="missing-figure-file",n.push(E)}let y=T.extname(m).toLowerCase(),h=[".png",".jpg",".jpeg",".pdf",".svg"];if(y&&!h.includes(y)){let S=o.index+o[0].indexOf(m),E=new w.Diagnostic(new w.Range(s,S,s,S+m.length),`Consider using recommended figure formats: ${h.join(", ")}`,w.DiagnosticSeverity.Information);E.source="rxiv-markdown",E.code="non-recommended-format",n.push(E)}}}}async checkOrphanedElements(e,t,n){let i=e.split(`
`),s=new Set,a=/\{#(s?(?:fig|table|eq|snote)):([a-zA-Z0-9_-]+)[^}]*\}/g,r;for(;(r=a.exec(e))!==null;){let d=r[1],m=r[2];s.add(`${d}:${m}`)}let o=await this.findAllReferencesInProject(t);for(let d of s)if(!o.has(d)){let m=e.match(new RegExp(`\\{#${d.replace(":",":")}[^}]*\\}`,"g"));if(m){let f=m[0],h=e.substring(0,e.indexOf(f)).split(`
`).length-1,S=new w.Diagnostic(new w.Range(h,0,h,i[h]?.length||0),`Label '${d}' is defined but never referenced in project`,w.DiagnosticSeverity.Information);S.source="rxiv-markdown",S.code="orphaned-label",n.push(S)}}this.checkUnusualPatterns(i,n)}async findAllReferencesInProject(e){let t=new Set,n=T.dirname(e.fileName),i=["01_MAIN.md","01_MAIN.rxm","02_SUPPLEMENTARY_INFO.md","02_SUPPLEMENTARY_INFO.rxm"],s=[];try{let a=await L.promises.readdir(n);for(let o of i)a.includes(o)&&s.push(o);let r=a.filter(o=>(o.endsWith(".rxm")||o.endsWith(".md"))&&!o.startsWith(".")&&!i.includes(o)&&o!=="README.md"&&o!=="CHANGELOG.md");s.push(...r);for(let o of s){let d=T.join(n,o);try{let m=await L.promises.readFile(d,"utf8"),f=/@(stable|sfig|fig|table|eq|snote):([a-zA-Z0-9_-]+)/g,y;for(;(y=f.exec(m))!==null;){let h=y[1],S=y[2];t.add(`${h}:${S}`)}}catch{continue}}}catch{let a=e.getText(),r=/@(stable|sfig|fig|table|eq|snote):([a-zA-Z0-9_-]+)/g,o;for(;(o=r.exec(a))!==null;){let d=o[1],m=o[2];t.add(`${d}:${m}`)}}return t}checkUnusualPatterns(e,t){for(let n=0;n<e.length;n++){let i=e[n];if(n<e.length-2){let s=!i.trim(),a=!e[n+1]?.trim(),r=!e[n+2]?.trim();if(s&&a&&r){let o=new w.Diagnostic(new w.Range(n,0,n+2,0),"Multiple consecutive empty lines - consider reducing for cleaner formatting",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="multiple-empty-lines",t.push(o)}}if(i.match(/\s+$/)){let s=i.search(/\s+$/),a=new w.Diagnostic(new w.Range(n,s,n,i.length),"Trailing whitespace",w.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="trailing-whitespace",t.push(a)}}}};var G=class{static{P(this,"RxivMarkdownDiagnosticsProvider")}diagnosticCollection;validators;disposables=[];constructor(){this.diagnosticCollection=B.languages.createDiagnosticCollection("rxiv-markdown"),this.validators=[new V,new Y,new H,new X,new K],this.setupEventHandlers()}setupEventHandlers(){let e=B.workspace.onDidChangeTextDocument(async s=>{this.isRxivMarkdownDocument(s.document)&&await this.validateDocument(s.document)}),t=B.workspace.onDidSaveTextDocument(async s=>{this.isRxivMarkdownDocument(s)&&await this.validateDocument(s)}),n=B.workspace.onDidOpenTextDocument(async s=>{this.isRxivMarkdownDocument(s)&&await this.validateDocument(s)}),i=B.workspace.onDidCloseTextDocument(s=>{this.isRxivMarkdownDocument(s)&&this.diagnosticCollection.delete(s.uri)});this.disposables.push(e,t,n,i)}isRxivMarkdownDocument(e){let t=e.fileName,n=t.endsWith(".rxm")||t.endsWith("01_MAIN.md")||t.endsWith("02_SUPPLEMENTARY_INFO.md");return e.languageId==="rxiv-markdown"||n}async validateDocument(e){if(this.isRxivMarkdownDocument(e))try{let t=[],n=await Promise.all(this.validators.map(i=>i.validate(e)));for(let i of n)t.push(...i);this.diagnosticCollection.set(e.uri,t)}catch(t){console.error("Error validating rxiv-markdown document:",t)}}async validateAllOpenDocuments(){let e=B.workspace.textDocuments.filter(t=>this.isRxivMarkdownDocument(t)).map(t=>this.validateDocument(t));await Promise.all(e)}clearAllDiagnostics(){this.diagnosticCollection.clear()}dispose(){this.diagnosticCollection.dispose(),this.disposables.forEach(e=>e.dispose()),this.disposables=[]}};function Re(b){console.log("Rxiv-Maker extension is now active!");let e=new G;b.subscriptions.push(e);let t=new Map,n,i=P(()=>{n&&n.dispose(),l.workspace.getConfiguration("rxiv-maker").get("showStatusBarButton",!0)&&(n=l.window.createStatusBarItem(l.StatusBarAlignment.Left,100),n.command="rxiv-maker.makePdf",n.text="\u{1F4C4} rxiv PDF",n.tooltip="Build PDF with rxiv-maker",b.subscriptions.push(n))},"createStatusBarItem"),s=P(async c=>{if(!n)return;if(c||(c=l.window.activeTextEditor?.document),!c){n.hide();return}let v=C.basename(c.fileName);if(c.fileName.endsWith(".rxm")||v==="01_MAIN.md"||v==="02_SUPPLEMENTARY_INFO.md"||c.languageId==="rxiv-markdown"){let g=l.workspace.getWorkspaceFolder(c.uri);if(g){let p=g.uri.fsPath,x=t.get(p);x===void 0&&(x=await ee(p),t.set(p,x)),x?n.show():n.hide()}else n.hide()}else n.hide()},"updateStatusBarVisibility");i(),l.window.onDidChangeActiveTextEditor(c=>{s(c?.document)},null,b.subscriptions),l.workspace.onDidOpenTextDocument(s,null,b.subscriptions),l.workspace.onDidChangeConfiguration(c=>{c.affectsConfiguration("rxiv-maker.showStatusBarButton")&&(i(),s())},null,b.subscriptions);let a=l.workspace.onDidOpenTextDocument(async c=>{let v=C.basename(c.fileName);if(c.fileName.endsWith(".rxm")||v==="01_MAIN.md"||v==="02_SUPPLEMENTARY_INFO.md"){let g=l.workspace.getWorkspaceFolder(c.uri);if(g){let p=g.uri.fsPath,x=t.get(p);x===void 0&&(x=await ee(p),t.set(p,x)),x&&(await l.languages.setTextDocumentLanguage(c,"rxiv-markdown"),await e.validateDocument(c),await s(c))}}});setTimeout(async()=>{for(let c of l.workspace.textDocuments){let v=C.basename(c.fileName);if(c.fileName.endsWith(".rxm")||v==="01_MAIN.md"||v==="02_SUPPLEMENTARY_INFO.md"){let g=l.workspace.getWorkspaceFolder(c.uri);if(g){let p=g.uri.fsPath,x=t.get(p);x===void 0&&(x=await ee(p),t.set(p,x)),x&&(await l.languages.setTextDocumentLanguage(c,"rxiv-markdown"),await e.validateDocument(c),await s(c))}}}},500);let r=l.languages.registerCompletionItemProvider({language:"rxiv-markdown"},{async provideCompletionItems(c,v){return c.lineAt(v).text.substr(0,v.character).endsWith("@")?(await ne()).map(p=>{let x=new l.CompletionItem(p.key,l.CompletionItemKind.Reference);return x.detail=p.title||p.type,x.documentation=p.author||"",x.insertText=p.key,x}):[]}},"@"),o=l.languages.registerCompletionItemProvider({language:"rxiv-markdown"},{async provideCompletionItems(c,v){return c.lineAt(v).text.substr(0,v.character).endsWith("@")?(await Q()).map(p=>{let x=p.supplementary?`s${p.type}:`:`${p.type}:`,R=new l.CompletionItem(`${x}${p.label}`,l.CompletionItemKind.Reference);return R.detail=`${p.type.toUpperCase()} reference`,R.documentation=`Line ${p.line+1}${p.supplementary?" (Supplementary)":""}`,R.insertText=`${x}${p.label}`,R}):[]}},"@"),d=l.commands.registerCommand("rxiv-maker.insertCitation",async()=>{let c=await ne();if(c.length===0){let g=[],p=l.window.activeTextEditor;if(p){let R=C.dirname(p.document.fileName);g.push(C.join(R,"03_REFERENCES.bib"))}if(l.workspace.workspaceFolders)for(let R of l.workspace.workspaceFolders){let _=C.join(R.uri.fsPath,"03_REFERENCES.bib");g.includes(_)||g.push(_)}let x=`No bibliography file (03_REFERENCES.bib) found.

Searched in:
${g.join(`
`)}

Please create 03_REFERENCES.bib in the same directory as your document.`;l.window.showWarningMessage(x);return}let v=c.map(g=>({label:g.key,description:g.title||g.type,detail:g.author||""})),u=await l.window.showQuickPick(v,{placeHolder:"Select citation to insert"});if(u){let g=l.window.activeTextEditor;if(g){let p=g.selection.active;await g.edit(x=>{x.insert(p,`@${u.label}`)})}}}),m=l.commands.registerCommand("rxiv-maker.insertFigureReference",async()=>{let v=(await Q()).filter(p=>p.type==="fig");if(v.length===0){l.window.showWarningMessage("No figure labels found in the document");return}let u=v.map(p=>({label:p.label,description:p.supplementary?"Supplementary Figure":"Figure",detail:`Line ${p.line+1}`})),g=await l.window.showQuickPick(u,{placeHolder:"Select figure reference to insert"});if(g){let p=l.window.activeTextEditor;if(p){let x=p.selection.active,R=v.find(_=>_.label===g.label)?.supplementary?"@sfig:":"@fig:";await p.edit(_=>{_.insert(x,`${R}${g.label}`)})}}}),f=l.commands.registerCommand("rxiv-maker.insertTableReference",async()=>{let v=(await Q()).filter(p=>p.type==="table");if(v.length===0){l.window.showWarningMessage("No table labels found in the document");return}let u=v.map(p=>({label:p.label,description:p.supplementary?"Supplementary Table":"Table",detail:`Line ${p.line+1}`})),g=await l.window.showQuickPick(u,{placeHolder:"Select table reference to insert"});if(g){let p=l.window.activeTextEditor;if(p){let x=p.selection.active,R=v.find(_=>_.label===g.label)?.supplementary?"@stable:":"@table:";await p.edit(_=>{_.insert(x,`${R}${g.label}`)})}}}),y=l.commands.registerCommand("rxiv-maker.insertEquationReference",async()=>{let v=(await Q()).filter(p=>p.type==="eq");if(v.length===0){l.window.showWarningMessage("No equation labels found in the document");return}let u=v.map(p=>({label:p.label,description:"Equation",detail:`Line ${p.line+1}`})),g=await l.window.showQuickPick(u,{placeHolder:"Select equation reference to insert"});if(g){let p=l.window.activeTextEditor;if(p){let x=p.selection.active;await p.edit(R=>{R.insert(x,`@eq:${g.label}`)})}}}),h=new Map,S=P(c=>{let v=h.get(c);if(v&&v.exitStatus===void 0)return v;let u=`rxiv-maker: ${C.basename(c)||c}`,g=l.window.createTerminal({name:u,cwd:c});return h.set(c,g),l.window.onDidCloseTerminal(p=>{for(let[x,R]of h.entries())if(R===p){h.delete(x);break}}),g},"getRxivMakerTerminal"),E=l.commands.registerCommand("rxiv-maker.makeValidate",async()=>{let c=await J();if(!c.success||!c.manuscriptPath){l.window.showErrorMessage(c.error||"Could not determine manuscript folder");return}let v=S(c.manuscriptPath);v.show(),v.sendText("rxiv validate .")}),F=l.commands.registerCommand("rxiv-maker.makePdf",async()=>{let c=await J();if(!c.success||!c.manuscriptPath){l.window.showErrorMessage(c.error||"Could not determine manuscript folder");return}let v=S(c.manuscriptPath);v.show(),v.sendText("rxiv pdf .")}),Z=l.commands.registerCommand("rxiv-maker.makeClean",async()=>{let c=await J();if(!c.success||!c.manuscriptPath){l.window.showErrorMessage(c.error||"Could not determine manuscript folder");return}let v=S(c.manuscriptPath);v.show(),v.sendText("rxiv clean .")}),U=l.commands.registerCommand("rxiv-maker.installRxivMaker",async()=>{await l.window.withProgress({location:l.ProgressLocation.Notification,title:"Checking installation prerequisites...",cancellable:!1},async c=>{c.report({increment:50,message:"Checking pipx availability..."});let v=!1;try{await new Promise((p,x)=>{(0,se.exec)("pipx --version",{timeout:5e3},(R,_,Ae)=>{R||(v=!0),p()})})}catch{}if(!v){if(await l.window.showWarningMessage("pipx is required to install rxiv-maker. Would you like to see installation instructions?",{modal:!0},"Show Installation Instructions","Cancel")==="Show Installation Instructions"){let R=await l.workspace.openTextDocument({content:"# Install pipx (Python Package Manager)\n\n## macOS:\n```bash\nbrew install pipx\n```\n\n## Linux (Ubuntu/Debian):\n```bash\nsudo apt update\nsudo apt install pipx\n```\n\n## Linux (Other):\n```bash\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\n```\n\n## Windows:\n```powershell\npip install --user pipx\n```\n\nAfter installing pipx, restart VS Code and try again.",language:"markdown"});await l.window.showTextDocument(R)}return}if(await l.window.showInformationMessage("Install rxiv-maker using pipx? This will install rxiv-maker globally and make it available from any terminal.",{modal:!0},"Yes, install rxiv-maker","No, cancel")!=="Yes, install rxiv-maker")return;let g=l.window.createTerminal({name:"rxiv-maker-install"});g.show(),g.sendText('echo "Installing rxiv-maker with pipx..."'),g.sendText("pipx install rxiv-maker"),g.sendText('echo "Installation complete! You can now use rxiv commands."'),g.sendText("rxiv --version")})}),O=l.commands.registerCommand("rxiv-maker.makeAddBibliography",async()=>{let c=await J();if(!c.success||!c.manuscriptPath){l.window.showErrorMessage(c.error||"Could not determine manuscript folder");return}let v=await l.window.showInputBox({prompt:"Enter DOI to add to bibliography",placeHolder:"e.g., 10.1000/example or https://doi.org/10.1000/example",validateInput:P(p=>{if(!p)return"DOI is required";if(!/^(https?:\/\/)?(dx\.)?doi\.org\/10\.|^10\./.test(p))return"Please enter a valid DOI (e.g., 10.1000/example)"},"validateInput")});if(!v)return;let u=v.replace(/^(https?:\/\/)?(dx\.)?doi\.org\//,""),g=S(c.manuscriptPath);g.show(),g.sendText(`rxiv bibliography add --manuscript-path . ${u}`)}),ie=l.commands.registerCommand("rxiv-maker.insertBlindtext",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active;await c.edit(u=>{u.insert(v,"{{blindtext}}")})}}),oe=l.commands.registerCommand("rxiv-maker.insertBlindtextParagraph",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active;await c.edit(u=>{u.insert(v,"{{Blindtext}}")})}}),ae=l.commands.registerCommand("rxiv-maker.insertPythonBlock",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active,u=c.selection;if(u.isEmpty){let g=new l.SnippetString(`{{py:
$1
}}`);await c.insertSnippet(g,v)}else{let g=c.document.getText(u);await c.edit(p=>{p.replace(u,`{{py:
${g}
}}`)})}}}),re=l.commands.registerCommand("rxiv-maker.insertPythonInline",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active,u=c.selection;if(u.isEmpty){let g=new l.SnippetString("{py: $1}");await c.insertSnippet(g,v)}else{let g=c.document.getText(u);await c.edit(p=>{p.replace(u,`{py: ${g}}`)})}}}),ce=l.commands.registerCommand("rxiv-maker.insertPythonImport",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active,u=[{label:"datetime",detail:"Date and time operations"},{label:"math",detail:"Mathematical functions"},{label:"statistics",detail:"Statistical functions"},{label:"json",detail:"JSON encoder/decoder"},{label:"csv",detail:"CSV file reading/writing"},{label:"random",detail:"Generate random numbers"},{label:"collections",detail:"Specialized container datatypes"},{label:"itertools",detail:"Iterator building blocks"},{label:"functools",detail:"Higher-order functions and operations on functions"}],g=await l.window.showQuickPick(u,{placeHolder:"Select a module to import (or type a custom module name)"});if(g){let p=new l.SnippetString(`{py:import ${g.label}}`);await c.insertSnippet(p,v)}else{let p=await l.window.showInputBox({prompt:"Enter module name to import",placeHolder:"e.g., datetime"});if(p){let x=new l.SnippetString(`{py:import ${p}}`);await c.insertSnippet(x,v)}}}}),le=l.commands.registerCommand("rxiv-maker.insertPythonFromImport",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active,u=new l.SnippetString("{py:from ${1:module} import ${2:item}}");await c.insertSnippet(u,v)}}),de=l.commands.registerCommand("rxiv-maker.insertPythonSet",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active,u=new l.SnippetString('{py:set ${1:variable_name} = ${2:"value"}}');await c.insertSnippet(u,v)}}),me=l.commands.registerCommand("rxiv-maker.insertPythonGet",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active,u=new l.SnippetString("{py:get ${1:variable_name}}");await c.insertSnippet(u,v)}}),pe=l.commands.registerCommand("rxiv-maker.insertPythonContext",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active,u=new l.SnippetString('{py:context="${1:context_name}" ${2:code}}');await c.insertSnippet(u,v)}}),ve=l.commands.registerCommand("rxiv-maker.insertPythonFormat",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active,u=[{label:"number,2",detail:"Format number with 2 decimal places"},{label:"percentage,1",detail:"Format as percentage with 1 decimal place"},{label:"currency",detail:"Format as currency"},{label:"scientific,3",detail:"Format in scientific notation with 3 decimal places"},{label:"date,%Y-%m-%d",detail:"Format date as YYYY-MM-DD"},{label:"date,%B %d, %Y",detail:'Format date as "Month DD, YYYY"'},{label:"comma",detail:"Add thousand separators"}],g=await l.window.showQuickPick(u,{placeHolder:"Select a format specification"});if(g){let p=new l.SnippetString(`{py:format="${g.label}" \${1:expression}}`);await c.insertSnippet(p,v)}else{let p=new l.SnippetString('{py:format="${1:format_spec}" ${2:expression}}');await c.insertSnippet(p,v)}}}),ge=l.commands.registerCommand("rxiv-maker.insertPythonGlobal",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active,u=new l.SnippetString('{py:global ${1:variable_name} = ${2:"value"}}');await c.insertSnippet(u,v)}}),fe=l.commands.registerCommand("rxiv-maker.insertPythonIf",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active,u=new l.SnippetString('{py:if ${1:condition}: "${2:true_value}" else: "${3:false_value}"}');await c.insertSnippet(u,v)}}),ue=l.commands.registerCommand("rxiv-maker.insertTexBlock",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active,u=c.selection;if(u.isEmpty){let g=new l.SnippetString(`{{tex:
$1
}}`);await c.insertSnippet(g,v)}else{let g=c.document.getText(u);await c.edit(p=>{p.replace(u,`{{tex:
${g}
}}`)})}}}),he=l.commands.registerCommand("rxiv-maker.insertTexInline",async()=>{let c=l.window.activeTextEditor;if(c){let v=c.selection.active,u=c.selection;if(u.isEmpty){let g=new l.SnippetString("{{tex: $1}}");await c.insertSnippet(g,v)}else{let g=c.document.getText(u);await c.edit(p=>{p.replace(u,`{{tex: ${g}}}`)})}}}),we=l.commands.registerCommand("rxiv-maker.validateDocument",async()=>{let c=l.window.activeTextEditor;c?(await e.validateDocument(c.document),l.window.showInformationMessage("Document validation completed")):l.window.showWarningMessage("No active document to validate")}),be=l.commands.registerCommand("rxiv-maker.clearDiagnostics",()=>{e.clearAllDiagnostics(),l.window.showInformationMessage("All diagnostics cleared")}),ye=l.commands.registerCommand("rxiv-maker.validateAllDocuments",async()=>{await e.validateAllOpenDocuments(),l.window.showInformationMessage("All documents validated")});b.subscriptions.push(a,r,o,d,m,f,y,U,E,F,Z,O,ie,oe,ae,re,ce,le,de,me,pe,ve,ge,fe,ue,he,we,be,ye)}P(Re,"activate");async function ne(){let b=[],e=l.window.activeTextEditor;if(e){let n=C.dirname(e.document.fileName),i=C.join(n,"03_REFERENCES.bib");b.push(i),console.log("Rxiv-Maker: Searching for bibliography in current document directory:",i)}if(l.workspace.workspaceFolders)for(let n of l.workspace.workspaceFolders){let i=C.join(n.uri.fsPath,"03_REFERENCES.bib");b.includes(i)||(b.push(i),console.log("Rxiv-Maker: Searching for bibliography in workspace folder:",i))}let t=null;for(let n of b)try{await N.promises.access(n,N.constants.F_OK|N.constants.R_OK),t=n,console.log("Rxiv-Maker: Found bibliography file at:",t);break}catch{console.log("Rxiv-Maker: Bibliography not found at:",n)}if(!t)return console.log("Rxiv-Maker: No bibliography file found in any search location"),[];try{let n=await N.promises.readFile(t,"utf8"),i=[],s=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,a;for(;(a=s.exec(n))!==null;){let r=a[1],o=a[2],d=a.index,m=Te(n,d),f=n.substring(d,m),y=f.match(/title\s*=\s*[{"](.*?)["}]/),h=f.match(/author\s*=\s*[{"](.*?)["}]/),S=f.match(/year\s*=\s*[{"](.*?)["}]/);i.push({key:o,type:r,title:y?.[1],author:h?.[1],year:S?.[1]})}return i}catch(n){return n.code==="ENOENT"?[]:(console.error("Error parsing bibliography:",n),[])}}P(ne,"getBibEntries");async function Q(){let b=[],e=[],t=l.window.activeTextEditor;if(t){let n=C.dirname(t.document.fileName);e.push(C.join(n,"01_MAIN.md")),e.push(C.join(n,"02_SUPPLEMENTARY_INFO.md"))}if(l.workspace.workspaceFolders)for(let n of l.workspace.workspaceFolders){let i=C.join(n.uri.fsPath,"01_MAIN.md"),s=C.join(n.uri.fsPath,"02_SUPPLEMENTARY_INFO.md");e.includes(i)||e.push(i),e.includes(s)||e.push(s)}for(let n of e)try{let s=(await N.promises.readFile(n,"utf8")).split(`
`),a=n.includes("02_SUPPLEMENTARY_INFO");for(let r=0;r<s.length;r++){let o=s[r],d=/\{#(s?)((fig|table|eq|snote)):([a-zA-Z0-9_-]+)(?:\s[^}]*)?\}/g,m;for(;(m=d.exec(o))!==null;){let f=m[1]==="s"||a,y=m[2],h=m[4];b.push({type:y,label:h,line:r,supplementary:f})}}}catch{continue}return b}P(Q,"getDocumentReferences");function Te(b,e){let t=0,n=!1,i="";for(let s=e;s<b.length;s++){let a=b[s];if(n)a===i&&b[s-1]!=="\\"&&(n=!1);else if(a==='"'||a==="'")n=!0,i=a;else if(a==="{")t++;else if(a==="}"&&(t--,t===0))return s+1}return b.length}P(Te,"findMatchingBrace");async function ee(b){try{let e=["00_CONFIG.yml","01_MAIN.rxm","01_MAIN.md","03_REFERENCES.bib"],t=["02_SUPPLEMENTARY_INFO.rxm","02_SUPPLEMENTARY_INFO.md"];return(await Promise.all(e.map(async s=>{try{return await N.promises.access(C.join(b,s)),!0}catch{return!1}}))).filter(Boolean).length>=2}catch(e){return console.error("Error checking rxiv-maker project:",e),!1}}P(ee,"isRxivMakerProject");async function J(){let b=l.window.activeTextEditor;if(!b)return{success:!1,error:"No active document. Please open a file in your manuscript folder."};let e=b.document.fileName,t=C.dirname(e),n=["00_CONFIG.yml","01_MAIN.md","01_MAIN.rxm","03_REFERENCES.bib"],i=await Promise.all(n.map(async a=>{try{return await N.promises.access(C.join(t,a)),!0}catch{return!1}})),s;if(i.some(a=>a))s=t;else{let a=l.workspace.workspaceFolders;if(!a)return{success:!1,error:"No workspace folder found. Please open the manuscript folder in VS Code."};let r=null;for(let o of a){let d=o.uri.fsPath;if((await Promise.all(n.map(async f=>{try{return await N.promises.access(C.join(d,f)),!0}catch{return!1}}))).some(f=>f)){r=d;break}}if(!r)return{success:!1,error:"No manuscript folder found. Please ensure your workspace contains a folder with rxiv-maker files (00_CONFIG.yml, 01_MAIN.md, etc.)"};s=r}return{success:!0,manuscriptPath:s}}P(J,"findManuscriptFolder");function Ie(){}P(Ie,"deactivate");0&&(module.exports={activate,deactivate});
