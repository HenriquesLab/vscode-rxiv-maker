"use strict";var xe=Object.create;var q=Object.defineProperty;var ke=Object.getOwnPropertyDescriptor;var De=Object.getOwnPropertyNames;var Ee=Object.getPrototypeOf,Se=Object.prototype.hasOwnProperty;var P=(y,e)=>q(y,"name",{value:e,configurable:!0});var Pe=(y,e)=>{for(var t in e)q(y,t,{get:e[t],enumerable:!0})},te=(y,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of De(e))!Se.call(y,s)&&s!==t&&q(y,s,{get:()=>e[s],enumerable:!(n=ke(e,s))||n.enumerable});return y};var M=(y,e,t)=>(t=y!=null?xe(Ee(y)):{},te(e||!y||!y.__esModule?q(t,"default",{value:y,enumerable:!0}):t,y)),Ce=y=>te(q({},"__esModule",{value:!0}),y);var Me={};Pe(Me,{activate:()=>Re,deactivate:()=>Ie});module.exports=Ce(Me);var l=M(require("vscode")),F=M(require("fs")),C=M(require("path")),ie=require("child_process");var O=M(require("vscode"));var A=M(require("vscode")),Z=M(require("fs")),W=M(require("path"));var V=class{static{P(this,"CitationValidator")}bibEntriesCache=new Map;CACHE_DURATION=5e3;async validate(e){let t=[],s=e.getText().split(`
`);try{let i=await this.getBibEntries(e),a=new Set(i.map(o=>o.key)),c=!1;for(let o=0;o<s.length;o++){let d=s[o];if(d.trim().startsWith("```")){c=!c;continue}if(c)continue;let m=d.matchAll(/(?<!\\)\[(@[^\]]+)\]/g);for(let b of m){if(this.isPositionInCodeSpan(d,b.index))continue;let h=b[1].match(/(?<!\\)@([a-zA-Z0-9_-]+)/g);if(h)for(let S of h){let E=S.substring(1),$=d.indexOf(S,b.index);this.validateCitationKey(E,o,d,$,a,t)}}let f=d.matchAll(/(?<!\\)@(?!fig:|eq:|table:|tbl:|sfig:|stable:|snote:)([a-zA-Z0-9_-]+)/g);for(let b of f){if(this.isPositionInCodeSpan(d,b.index))continue;let h=b[1];h&&this.isValidCitationKey(h)&&this.validateCitationKey(h,o,d,b.index,a,t)}}}catch{let a=new A.Diagnostic(new A.Range(0,0,0,0),"No bibliography file (03_REFERENCES.bib) found. Citation validation disabled.",A.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="missing-bibliography",t.push(a)}return t}validateCitationKey(e,t,n,s,i,a){if(!i.has(e)){let c=n.indexOf("@"+e,s),o=new A.Range(t,c,t,c+e.length+1),d=new A.Diagnostic(o,`Citation '@${e}' not found in bibliography`,A.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="unknown-citation",a.push(d)}}isValidCitationKey(e){return/^[a-zA-Z0-9_-]+$/.test(e)}isPositionInCodeSpan(e,t){let n=[],s=-1;for(let i=0;i<e.length;i++)e[i]==="`"&&(s===-1?s=i:(n.push({start:s,end:i}),s=-1));for(let i of n)if(t>=i.start&&t<=i.end)return!0;return!1}async getBibEntries(e){let t=this.getBibliographySearchPaths(e),n=null;for(let a of t)try{await Z.promises.access(a,Z.constants.F_OK|Z.constants.R_OK),n=a;break}catch{}if(!n)throw new Error("No bibliography file found");let s=this.bibEntriesCache.get(n),i=Date.now();if(s&&i-s.timestamp<this.CACHE_DURATION)return s.entries;try{let a=await Z.promises.readFile(n,"utf8"),c=this.parseBibFile(a);return this.bibEntriesCache.set(n,{entries:c,timestamp:i}),c}catch(a){throw new Error(`Error reading bibliography file: ${a}`)}}getBibliographySearchPaths(e){let t=[],n=W.dirname(e.fileName);if(t.push(W.join(n,"03_REFERENCES.bib")),A.workspace.workspaceFolders)for(let s of A.workspace.workspaceFolders){let i=W.join(s.uri.fsPath,"03_REFERENCES.bib");t.includes(i)||t.push(i)}return t}parseBibFile(e){let t=[],n=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,s;for(;(s=n.exec(e))!==null;){let i=s[1],a=s[2],c=s.index,o=this.findMatchingBrace(e,c),d=e.substring(c,o),m=d.match(/title\s*=\s*[{"](.*?)["}]/),f=d.match(/author\s*=\s*[{"](.*?)["}]/),b=d.match(/year\s*=\s*[{"](.*?)["}]/);t.push({key:a,type:i,title:m?.[1],author:f?.[1],year:b?.[1]})}return t}findMatchingBrace(e,t){let n=0,s=!1,i="";for(let a=t;a<e.length;a++){let c=e[a];if(s)c===i&&e[a-1]!=="\\"&&(s=!1);else if(c==='"'||c==="'")s=!0,i=c;else if(c==="{")n++;else if(c==="}"&&(n--,n===0))return a+1}return e.length}};var N=M(require("vscode")),z=M(require("fs")),T=M(require("path"));var Y=class{static{P(this,"CrossReferenceValidator")}labelsCache=new Map;CACHE_DURATION=5e3;async validate(e){let t=[],s=e.getText().split(`
`);try{let i=await this.getDefinedLabels(e),a=this.createLabelMap(i),c={fig:/(?<!\\)@fig:([a-zA-Z0-9_-]+)/g,sfig:/(?<!\\)@sfig:([a-zA-Z0-9_-]+)/g,table:/(?<!\\)@table:([a-zA-Z0-9_-]+)/g,stable:/(?<!\\)@stable:([a-zA-Z0-9_-]+)/g,eq:/(?<!\\)@eq:([a-zA-Z0-9_-]+)/g,snote:/(?<!\\)@snote:([a-zA-Z0-9_-]+)/g},o=!1;for(let m=0;m<s.length;m++){let f=s[m];if(f.trim().startsWith("```")){o=!o;continue}if(!o)for(let[b,h]of Object.entries(c)){let S=f.matchAll(h);for(let E of S){if(this.isPositionInCodeSpan(f,E.index))continue;let $=E[1],j=`${b}:${$}`;if(!a.has(j)){let U=new N.Range(m,E.index,m,E.index+E[0].length),B=new N.Diagnostic(U,`Reference '${E[0]}' not found. No matching label defined.`,N.DiagnosticSeverity.Error);B.source="rxiv-markdown",B.code="undefined-reference",t.push(B)}}}}let d=this.findDuplicateLabels(i);for(let m of d)if(m.file===e.fileName){let f=new N.Range(m.line,0,m.line,0),b=new N.Diagnostic(f,`Duplicate label '${m.type}:${m.label}' defined multiple times`,N.DiagnosticSeverity.Warning);b.source="rxiv-markdown",b.code="duplicate-label",t.push(b)}}catch(i){console.error("Error validating cross-references:",i)}return t}async getDefinedLabels(e){let t=await this.getManuscriptFiles(e),n=[];for(let s of t)try{let i=this.labelsCache.get(s),a=Date.now();if(i&&a-i.timestamp<this.CACHE_DURATION){n.push(...i.labels);continue}let c=await z.promises.readFile(s,"utf8"),o=this.extractLabelsFromContent(c,s);this.labelsCache.set(s,{labels:o,timestamp:a}),n.push(...o)}catch{continue}return n}extractLabelsFromContent(e,t){let n=[],s=e.split(`
`),i={fig:/\{#fig:([a-zA-Z0-9_:-]+)([^}]*)\}/g,sfig:/\{#sfig:([a-zA-Z0-9_:-]+)([^}]*)\}/g,table:/\{#table:([a-zA-Z0-9_:-]+)([^}]*)\}/g,stable:/\{#stable:([a-zA-Z0-9_:-]+)([^}]*)\}/g,eq:/\$\$.*?\$\$\s*\{[^}]*#eq:([a-zA-Z0-9_:-]+)[^}]*\}/g,snote:/\{#snote:([a-zA-Z0-9_:-]+)\}/g};for(let a=0;a<s.length;a++){let c=s[a];for(let[o,d]of Object.entries(i)){let m=c.matchAll(d);for(let f of m){let b=f[1];n.push({type:o,label:b,line:a,file:t})}}}return n}async getManuscriptFiles(e){let t=[],n=await this.findRxivMakerProjectRoot(e.fileName);if(n){let i=[T.join(n,"01_MAIN.md"),T.join(n,"02_SUPPLEMENTARY_INFO.md"),T.join(n,"01_MAIN.rxm"),T.join(n,"02_SUPPLEMENTARY_INFO.rxm")];for(let a of i)t.push(a)}else{let i=T.dirname(e.fileName);t.push(T.join(i,"01_MAIN.md")),t.push(T.join(i,"02_SUPPLEMENTARY_INFO.md")),t.push(T.join(i,"01_MAIN.rxm")),t.push(T.join(i,"02_SUPPLEMENTARY_INFO.rxm"))}let s=[];for(let i of t)try{await z.promises.access(i,z.constants.F_OK),s.push(i)}catch{}return s}async findRxivMakerProjectRoot(e){let t=T.dirname(e),n=T.parse(t).root;for(;t!==n;){let s=T.join(t,"00_CONFIG.yml"),i=await this.fileExists(T.join(t,"01_MAIN.md"))||await this.fileExists(T.join(t,"01_MAIN.rxm"));if(await this.fileExists(s)&&i)return t;let a=T.dirname(t);if(a===t)break;t=a}return null}async fileExists(e){try{return await z.promises.access(e,z.constants.F_OK),!0}catch{return!1}}createLabelMap(e){let t=new Map;for(let n of e){let s=`${n.type}:${n.label}`;t.set(s,n)}return t}findDuplicateLabels(e){let t=new Map,n=[];for(let s of e){let i=`${s.type}:${s.label}`;if(t.has(i)){n.push(s);let a=t.get(i);n.includes(a)||n.push(a)}else t.set(i,s)}return n}isPositionInCodeSpan(e,t){let n=[],s=-1;for(let i=0;i<e.length;i++)e[i]==="`"&&(s===-1?s=i:(n.push({start:s,end:i}),s=-1));for(let i of n)if(t>=i.start&&t<=i.end)return!0;return!1}};var k=M(require("vscode"));var H=class{static{P(this,"PythonBlockValidator")}async validate(e){let t=[],s=e.getText().split(`
`),i=!1,a=-1,c="";for(let o=0;o<s.length;o++){let d=s[o],m=d.match(/^\s*\{\{py:\s*(.*)$/),f=d.match(/^\s*\}\}\s*$/),b=d.match(/\{py:\s*([^}]+)\}/g);if(m&&!i){i=!0,a=o,c=d.match(/^\s*/)?.[0]||"";let h=m[1].trim();h&&!h.endsWith("}}")&&this.validatePythonSyntax(h,o,m.index,t)}else if(f&&i)i=!1,a=-1;else if(i&&a!==-1){let h=d.replace(/^\s*/,"");h.trim()&&!h.includes("}}")&&this.validatePythonSyntax(h,o,0,t)}if(b)for(let h of b){let S=h.match(/\{py:\s*([^}]+)\}/);if(S){let E=S[1],$=d.indexOf(h);this.validateInlinePython(E,o,$,t)}}this.validatePythonVariableOperations(d,o,t)}if(i){let o=new k.Diagnostic(new k.Range(a,0,a,s[a].length),'Unclosed Python block - missing "}}"',k.DiagnosticSeverity.Error);o.source="rxiv-markdown",o.code="unclosed-python-block",t.push(o)}return t}validatePythonSyntax(e,t,n,s){let i=e.trim();if(!i)return;let a=this.findBasicSyntaxIssues(i);for(let c of a){let o=new k.Diagnostic(new k.Range(t,n,t,n+e.length),c.message,c.severity);o.source="rxiv-markdown",o.code=c.code,s.push(o)}}validateInlinePython(e,t,n,s){let i=e.trim();if(i.includes(`
`)){let a=new k.Diagnostic(new k.Range(t,n,t,n+e.length+6),"Inline Python expressions cannot contain newlines",k.DiagnosticSeverity.Error);a.source="rxiv-markdown",a.code="multiline-inline-python",s.push(a)}this.validatePythonSyntax(i,t,n+4,s)}validatePythonVariableOperations(e,t,n){let s=[{pattern:/\{py:set\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(.+)\}/,type:"set"},{pattern:/\{py:get\s+([a-zA-Z_][a-zA-Z0-9_]*)\}/,type:"get"},{pattern:/\{py:global\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(.+)\}/,type:"global"},{pattern:/\{py:format="([^"]+)"\s+(.+)\}/,type:"format"},{pattern:/\{py:context="([^"]+)"\s+(.+)\}/,type:"context"},{pattern:/\{py:if\s+(.+?):\s*"([^"]*?)"\s*else:\s*"([^"]*?)"\}/,type:"conditional"}];for(let c of s){let o=e.matchAll(new RegExp(c.pattern.source,"g"));for(let d of o)this.validatePythonOperation(d,c.type,t,n)}let i=e.matchAll(/\{py:import\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)\}/g);for(let c of i)this.validateImportStatement(c[1],t,c.index,n);let a=e.matchAll(/\{py:from\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)\s+import\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\s*,\s*[a-zA-Z_][a-zA-Z0-9_]*)*)\}/g);for(let c of a)this.validateFromImportStatement(c[1],c[2],t,c.index,n)}findBasicSyntaxIssues(e){let t=[],n=(e.match(/\(/g)||[]).length,s=(e.match(/\)/g)||[]).length;n!==s&&t.push({message:"Unmatched parentheses in Python code",severity:k.DiagnosticSeverity.Error,code:"unmatched-parentheses"});let i=(e.match(/\[/g)||[]).length,a=(e.match(/\]/g)||[]).length;i!==a&&t.push({message:"Unmatched brackets in Python code",severity:k.DiagnosticSeverity.Error,code:"unmatched-brackets"});let c=(e.match(/\{/g)||[]).length,o=(e.match(/\}/g)||[]).length;return c!==o&&t.push({message:"Unmatched braces in Python code",severity:k.DiagnosticSeverity.Error,code:"unmatched-braces"}),e.includes("	")&&e.includes("    ")&&t.push({message:"Mixed tabs and spaces in Python code",severity:k.DiagnosticSeverity.Warning,code:"mixed-indentation"}),e.match(/^\s*def\s+/)&&!e.includes(":")&&t.push({message:"Function definition missing colon",severity:k.DiagnosticSeverity.Error,code:"missing-colon"}),e.match(/^\s*(if|elif|else|for|while|try|except|finally|with)\s+/)&&!e.includes(":")&&t.push({message:"Control structure missing colon",severity:k.DiagnosticSeverity.Error,code:"missing-colon"}),t}validatePythonOperation(e,t,n,s){let i=e[0],a=e.index;switch(t){case"set":case"global":let c=e[1],o=e[2];if(!this.isValidVariableName(c)){let f=new k.Diagnostic(new k.Range(n,a,n,a+i.length),`Invalid variable name '${c}'`,k.DiagnosticSeverity.Error);f.source="rxiv-markdown",f.code="invalid-variable-name",s.push(f)}break;case"get":let d=e[1];if(!this.isValidVariableName(d)){let f=new k.Diagnostic(new k.Range(n,a,n,a+i.length),`Invalid variable name '${d}'`,k.DiagnosticSeverity.Error);f.source="rxiv-markdown",f.code="invalid-variable-name",s.push(f)}break;case"format":if(!e[1].trim()){let f=new k.Diagnostic(new k.Range(n,a,n,a+i.length),"Empty format specification",k.DiagnosticSeverity.Warning);f.source="rxiv-markdown",f.code="empty-format-spec",s.push(f)}break}}validateImportStatement(e,t,n,s){if(!this.isValidModuleName(e)){let i=new k.Diagnostic(new k.Range(t,n,t,n+e.length+12),`Invalid module name '${e}'`,k.DiagnosticSeverity.Error);i.source="rxiv-markdown",i.code="invalid-module-name",s.push(i)}}validateFromImportStatement(e,t,n,s,i){if(!this.isValidModuleName(e)){let c=new k.Diagnostic(new k.Range(n,s,n,s+20),`Invalid module name '${e}'`,k.DiagnosticSeverity.Error);c.source="rxiv-markdown",c.code="invalid-module-name",i.push(c)}let a=t.split(",").map(c=>c.trim());for(let c of a)if(!this.isValidVariableName(c)){let o=new k.Diagnostic(new k.Range(n,s,n,s+20),`Invalid import name '${c}'`,k.DiagnosticSeverity.Error);o.source="rxiv-markdown",o.code="invalid-import-name",i.push(o)}}isValidVariableName(e){return/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(e)}isValidModuleName(e){return/^[a-zA-Z_][a-zA-Z0-9_]*(\.[a-zA-Z_][a-zA-Z0-9_]*)*$/.test(e)}};var D=M(require("vscode"));var K=class{static{P(this,"LaTeXBlockValidator")}async validate(e){let t=[],s=e.getText().split(`
`),i=!1,a=-1,c="",o=[],d=[];for(let m=0;m<s.length;m++){let f=s[m],b=f.match(/^\s*\{\{tex:\s*(.*)$/),h=f.match(/^\s*\}\}\s*$/),S=f.match(/\{\{tex:\s*([^}]+)\}\}/g);if(b&&!i){i=!0,a=m,c="",o=[];let E=b[1].trim();E&&!E.endsWith("}}")&&(c+=E+`
`,o.push(E))}else if(h&&i)i=!1,c.trim()&&this.validateTexBlock(c,a,o,d,t),this.checkUnclosedenvironments(d,m,t),d=[],a=-1,c="",o=[];else if(i&&a!==-1){let E=f.trim();E&&!E.includes("}}")&&(c+=E+`
`,o.push(E))}if(S)for(let E of S){let $=E.match(/\{\{tex:\s*([^}]+)\}\}/);if($){let j=$[1],U=f.indexOf(E),B=[];this.validateLaTeXSyntax(j,m,U,B,t)}}i||this.validateInlineLaTeXElements(f,m,t)}if(i){let m=new D.Diagnostic(new D.Range(a,0,a,s[a].length),'Unclosed TeX block - missing "}}"',D.DiagnosticSeverity.Error);m.source="rxiv-markdown",m.code="unclosed-tex-block",t.push(m)}return t}validateTexBlock(e,t,n,s,i){let a=this.findBraceIssues(e);for(let c of a){let o=new D.Diagnostic(new D.Range(t,0,t+n.length,0),c.message,c.severity);o.source="rxiv-markdown",o.code=c.code,i.push(o)}for(let c=0;c<n.length;c++){let o=n[c],d=t+c+(t===0?0:1);this.trackLaTeXEnvironments(o,d,s,i)}}findBraceIssues(e){let t=[],n=0,s=!1,i="";for(let a=0;a<e.length;a++){let c=e[a],o=a>0?e[a-1]:"";if(s){c===i&&o!=="\\"&&(s=!1);continue}if((c==='"'||c==="'")&&o!=="\\"){s=!0,i=c;continue}if(c==="{"&&o!=="\\"?n++:c==="}"&&o!=="\\"&&n--,n<0){t.push({message:"Unmatched closing brace in LaTeX code",severity:D.DiagnosticSeverity.Error,code:"unmatched-closing-brace"});break}}return n>0&&t.push({message:"Unmatched opening brace in LaTeX code",severity:D.DiagnosticSeverity.Error,code:"unmatched-opening-brace"}),t}validateLaTeXSyntax(e,t,n,s,i){if(!e.trim())return;this.trackLaTeXEnvironments(e,t,s,i);let a=this.findLaTeXSyntaxIssues(e);for(let c of a){let o=new D.Diagnostic(new D.Range(t,n+c.column,t,n+c.column+c.length),c.message,c.severity);o.source="rxiv-markdown",o.code=c.code,i.push(o)}}validateInlineLaTeXElements(e,t,n){let s=[...e.matchAll(/\$\$([^$]+)\$\$/g),...e.matchAll(/(?<!\$)\$([^$\n]+)\$(?!\$)/g)];for(let a of s){let c=a[1],o=a.index,d=this.findMathExpressionIssues(c);for(let m of d){let f=new D.Diagnostic(new D.Range(t,o,t,o+a[0].length),m.message,m.severity);f.source="rxiv-markdown",f.code=m.code,n.push(f)}}let i=e.matchAll(/\\([a-zA-Z]+)(\*?)\{([^}]*)\}/g);for(let a of i){let c=a[1],o=a[2],d=a[3],m=a.index;this.validateLaTeXCommand(c,o,d,t,m,n)}}trackLaTeXEnvironments(e,t,n,s){let i=[...e.matchAll(/\\begin\{([^}]+)\}/g)],a=[...e.matchAll(/\\end\{([^}]+)\}/g)],c=[...i.map(o=>({type:"begin",env:o[1],index:o.index})),...a.map(o=>({type:"end",env:o[1],index:o.index}))].sort((o,d)=>o.index-d.index);for(let o of c)if(o.type==="begin")n.push({name:o.env,line:t});else if(o.type==="end")if(n.length===0){let d=new D.Diagnostic(new D.Range(t,o.index,t,o.index+`\\end{${o.env}}`.length),`Unexpected \\end{${o.env}} - no matching \\begin`,D.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="unmatched-end-environment",s.push(d)}else{let d=n.pop();if(d.name!==o.env){let m=new D.Diagnostic(new D.Range(t,o.index,t,o.index+`\\end{${o.env}}`.length),`Environment mismatch: \\end{${o.env}} does not match \\begin{${d.name}} on line ${d.line+1}`,D.DiagnosticSeverity.Error);m.source="rxiv-markdown",m.code="mismatched-environment",s.push(m)}}}checkUnclosedenvironments(e,t,n){for(let s of e){let i=new D.Diagnostic(new D.Range(s.line,0,s.line,0),`Unclosed LaTeX environment '${s.name}' - missing \\end{${s.name}}`,D.DiagnosticSeverity.Error);i.source="rxiv-markdown",i.code="unclosed-environment",n.push(i)}}findLaTeXSyntaxIssues(e){let t=[];if(!e.includes(`
`)){let i=0,a=-1;for(let c=0;c<e.length;c++){let o=e[c];o==="{"&&(c===0||e[c-1]!=="\\")?(i++,i===1&&(a=c)):o==="}"&&(c===0||e[c-1]!=="\\")&&i--}i>0?t.push({message:"Unmatched opening brace in LaTeX code",severity:D.DiagnosticSeverity.Error,code:"unmatched-brace",column:a,length:1}):i<0&&t.push({message:"Unmatched closing brace in LaTeX code",severity:D.DiagnosticSeverity.Error,code:"unmatched-brace",column:0,length:e.length})}let s=e.match(/\\[0-9]/g);if(s)for(let i of s){let a=e.indexOf(i);t.push({message:`Invalid LaTeX command '${i}' - commands cannot start with numbers`,severity:D.DiagnosticSeverity.Error,code:"invalid-command",column:a,length:i.length})}return e.endsWith("\\")&&!e.endsWith("\\\\")&&t.push({message:"Incomplete LaTeX command at end of line",severity:D.DiagnosticSeverity.Error,code:"incomplete-command",column:e.length-1,length:1}),t}findMathExpressionIssues(e){let t=[];e.trim()||t.push({message:"Empty math expression",severity:D.DiagnosticSeverity.Warning,code:"empty-math"});let n=(e.match(/\\left[(\[\{|]/g)||[]).length,s=(e.match(/\\right[)\]\}|]/g)||[]).length;return n!==s&&t.push({message:"Unbalanced \\left and \\right delimiters in math expression",severity:D.DiagnosticSeverity.Error,code:"unbalanced-delimiters"}),t}validateLaTeXCommand(e,t,n,s,i,a){if(["textbf","textit","emph","caption","label"].includes(e)&&!n.trim()){let o=new D.Diagnostic(new D.Range(s,i,s,i+`\\${e}${t}{}`.length),`LaTeX command '\\${e}${t}' should not be empty`,D.DiagnosticSeverity.Warning);o.source="rxiv-markdown",o.code="empty-command-content",a.push(o)}if(e==="label"&&!n.match(/^(fig|table|eq|sfig|stable|snote):[a-zA-Z0-9_-]+$/)){let o=new D.Diagnostic(new D.Range(s,i,s,i+`\\label{${n}}`.length),`Invalid label format '${n}'. Expected format: type:name (e.g., fig:my-figure)`,D.DiagnosticSeverity.Warning);o.source="rxiv-markdown",o.code="invalid-label-format",a.push(o)}}};var w=M(require("vscode")),L=M(require("fs")),I=M(require("path"));var X=class{static{P(this,"StructureValidator")}async validate(e){let t=[],n=e.getText(),s=n.split(`
`);return await this.validateDocumentStructure(e,t),this.validateHeadingStructure(s,e,t),this.checkRequiredElements(n,e.fileName,t),await this.validateFigureFiles(s,e,t),await this.checkOrphanedElements(n,e,t),t}async validateDocumentStructure(e,t){let n=I.basename(e.fileName),s=I.dirname(e.fileName),i=[{name:"00_CONFIG.yml",description:"Configuration file"},{name:"03_REFERENCES.bib",description:"Bibliography file"}];for(let c of i){let o=I.join(s,c.name);try{await L.promises.access(o,L.constants.F_OK)}catch{if(n==="01_MAIN.md"||n==="01_MAIN.rxm"||n==="02_SUPPLEMENTARY_INFO.md"||n==="02_SUPPLEMENTARY_INFO.rxm"){let d=new w.Diagnostic(new w.Range(0,0,0,0),`Missing required file: ${c.name} (${c.description})`,w.DiagnosticSeverity.Warning);d.source="rxiv-markdown",d.code="missing-required-file",t.push(d)}}}let a=e.getText();if(a.includes("FIGURES/")||a.includes("![")){let c=I.join(s,"FIGURES");try{if(!(await L.promises.stat(c)).isDirectory()){let d=new w.Diagnostic(new w.Range(0,0,0,0),"FIGURES should be a directory, not a file",w.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="invalid-figures-path",t.push(d)}}catch{let o=new w.Diagnostic(new w.Range(0,0,0,0),"FIGURES directory not found. Create it to store figure files.",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="missing-figures-directory",t.push(o)}}}validateHeadingStructure(e,t,n){let s=0,i=!1;for(let o=0;o<e.length;o++){let d=e[o],m=d.match(/^(#{1,6})\s+(.+)$/);if(m){let f=m[1].length,b=m[2].trim();if(!i&&f===1&&(i=!0),!b){let h=new w.Diagnostic(new w.Range(o,0,o,d.length),"Empty heading - headings should have descriptive text",w.DiagnosticSeverity.Warning);h.source="rxiv-markdown",h.code="empty-heading",n.push(h)}if(f>s+1&&s>0){let h=new w.Diagnostic(new w.Range(o,0,o,m[1].length),`Heading level skipped. Level ${f} follows level ${s}. Consider using level ${s+1} instead.`,w.DiagnosticSeverity.Information);h.source="rxiv-markdown",h.code="heading-level-skip",n.push(h)}if(s=f,b.endsWith(".")){let h=new w.Diagnostic(new w.Range(o,d.lastIndexOf("."),o,d.length),"Headings typically should not end with periods",w.DiagnosticSeverity.Information);h.source="rxiv-markdown",h.code="heading-period",n.push(h)}}}let a=I.basename(t.fileName);if(!i&&!(a==="02_SUPPLEMENTARY_INFO.md"||a==="02_SUPPLEMENTARY_INFO.rxm")){let o=new w.Diagnostic(new w.Range(0,0,0,0),"Document should start with a main title (# Title)",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="missing-title",n.push(o)}}checkRequiredElements(e,t,n){let s=I.basename(t);if(s==="01_MAIN.md"||s==="01_MAIN.rxm"){let i=/!\[.*?\]\(.*?\)/.test(e)||/@fig:/.test(e),a=/@table:/.test(e)||e.includes("|")||e.includes("\\begin{table}");if(!i&&!a){let m=new w.Diagnostic(new w.Range(0,0,0,0),"Main manuscript typically should include figures or tables",w.DiagnosticSeverity.Information);m.source="rxiv-markdown",m.code="missing-figures-tables",n.push(m)}let c=/\[@[a-zA-Z0-9_-]+(?:;@[a-zA-Z0-9_-]+)*\]/.test(e),o=/(?<![@\w])@[a-zA-Z0-9_-]+(?![:\w])/.test(e)&&!e.match(/(?<![@\w])@(fig|table|eq|sfig|stable|snote)(?![:\w])/);if(!(c||o)){let m=new w.Diagnostic(new w.Range(0,0,0,0),"Main manuscript should typically include citations",w.DiagnosticSeverity.Information);m.source="rxiv-markdown",m.code="missing-citations",n.push(m)}}if((s==="01_MAIN.md"||s==="01_MAIN.rxm")&&e.length>1e3&&!/^#+\s*(abstract|summary)/mi.test(e)){let a=new w.Diagnostic(new w.Range(0,0,0,0),"Consider adding an Abstract section to your manuscript",w.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="missing-abstract",n.push(a)}}async validateFigureFiles(e,t,n){let s=I.dirname(t.fileName);for(let i=0;i<e.length;i++){let c=e[i].matchAll(/!\[([^\]]*)\]\(([^)]+)\)/g);for(let o of c){let d=o[1],m=o[2];if(m.startsWith("http://")||m.startsWith("https://"))continue;let f=I.resolve(s,m);try{await L.promises.access(f,L.constants.F_OK)}catch{let S=o.index+o[0].indexOf(m),E=new w.Diagnostic(new w.Range(i,S,i,S+m.length),`Figure file not found: ${m}`,w.DiagnosticSeverity.Error);E.source="rxiv-markdown",E.code="missing-figure-file",n.push(E)}let b=I.extname(m).toLowerCase(),h=[".png",".jpg",".jpeg",".pdf",".svg"];if(b&&!h.includes(b)){let S=o.index+o[0].indexOf(m),E=new w.Diagnostic(new w.Range(i,S,i,S+m.length),`Consider using recommended figure formats: ${h.join(", ")}`,w.DiagnosticSeverity.Information);E.source="rxiv-markdown",E.code="non-recommended-format",n.push(E)}}}}async checkOrphanedElements(e,t,n){let s=e.split(`
`),i=new Set,a=/\{#(s?(?:fig|table|eq|snote)):([a-zA-Z0-9_-]+)[^}]*\}/g,c;for(;(c=a.exec(e))!==null;){let d=c[1],m=c[2];i.add(`${d}:${m}`)}let o=await this.findAllReferencesInProject(t);for(let d of i)if(!o.has(d)){let m=e.match(new RegExp(`\\{#${d.replace(":",":")}[^}]*\\}`,"g"));if(m){let f=m[0],h=e.substring(0,e.indexOf(f)).split(`
`).length-1,S=new w.Diagnostic(new w.Range(h,0,h,s[h]?.length||0),`Label '${d}' is defined but never referenced in project`,w.DiagnosticSeverity.Information);S.source="rxiv-markdown",S.code="orphaned-label",n.push(S)}}this.checkUnusualPatterns(s,n)}async findAllReferencesInProject(e){let t=new Set,n=I.dirname(e.fileName),s=["01_MAIN.md","01_MAIN.rxm","02_SUPPLEMENTARY_INFO.md","02_SUPPLEMENTARY_INFO.rxm"],i=[];try{let a=await L.promises.readdir(n);for(let o of s)a.includes(o)&&i.push(o);let c=a.filter(o=>(o.endsWith(".rxm")||o.endsWith(".md"))&&!o.startsWith(".")&&!s.includes(o)&&o!=="README.md"&&o!=="CHANGELOG.md");i.push(...c);for(let o of i){let d=I.join(n,o);try{let m=await L.promises.readFile(d,"utf8"),f=/@(stable|sfig|fig|table|eq|snote):([a-zA-Z0-9_-]+)/g,b;for(;(b=f.exec(m))!==null;){let h=b[1],S=b[2];t.add(`${h}:${S}`)}}catch{continue}}}catch{let a=e.getText(),c=/@(stable|sfig|fig|table|eq|snote):([a-zA-Z0-9_-]+)/g,o;for(;(o=c.exec(a))!==null;){let d=o[1],m=o[2];t.add(`${d}:${m}`)}}return t}checkUnusualPatterns(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(n<e.length-2){let i=!s.trim(),a=!e[n+1]?.trim(),c=!e[n+2]?.trim();if(i&&a&&c){let o=new w.Diagnostic(new w.Range(n,0,n+2,0),"Multiple consecutive empty lines - consider reducing for cleaner formatting",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="multiple-empty-lines",t.push(o)}}if(s.match(/\s+$/)){let i=s.search(/\s+$/),a=new w.Diagnostic(new w.Range(n,i,n,s.length),"Trailing whitespace",w.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="trailing-whitespace",t.push(a)}}}};var G=class{static{P(this,"RxivMarkdownDiagnosticsProvider")}diagnosticCollection;validators;disposables=[];constructor(){this.diagnosticCollection=O.languages.createDiagnosticCollection("rxiv-markdown"),this.validators=[new V,new Y,new H,new K,new X],this.setupEventHandlers()}setupEventHandlers(){let e=O.workspace.onDidChangeTextDocument(async i=>{this.isRxivMarkdownDocument(i.document)&&await this.validateDocument(i.document)}),t=O.workspace.onDidSaveTextDocument(async i=>{this.isRxivMarkdownDocument(i)&&await this.validateDocument(i)}),n=O.workspace.onDidOpenTextDocument(async i=>{this.isRxivMarkdownDocument(i)&&await this.validateDocument(i)}),s=O.workspace.onDidCloseTextDocument(i=>{this.isRxivMarkdownDocument(i)&&this.diagnosticCollection.delete(i.uri)});this.disposables.push(e,t,n,s)}isRxivMarkdownDocument(e){let t=e.fileName,n=t.endsWith(".rxm")||t.endsWith("01_MAIN.md")||t.endsWith("02_SUPPLEMENTARY_INFO.md");return e.languageId==="rxiv-markdown"||n}async validateDocument(e){if(this.isRxivMarkdownDocument(e))try{let t=[],n=await Promise.all(this.validators.map(s=>s.validate(e)));for(let s of n)t.push(...s);this.diagnosticCollection.set(e.uri,t)}catch(t){console.error("Error validating rxiv-markdown document:",t)}}async validateAllOpenDocuments(){let e=O.workspace.textDocuments.filter(t=>this.isRxivMarkdownDocument(t)).map(t=>this.validateDocument(t));await Promise.all(e)}clearAllDiagnostics(){this.diagnosticCollection.clear()}dispose(){this.diagnosticCollection.dispose(),this.disposables.forEach(e=>e.dispose()),this.disposables=[]}};function Re(y){console.log("Rxiv-Maker extension is now active!");let e=new G;y.subscriptions.push(e);let t=new Map,n,s=P(()=>{n&&n.dispose(),l.workspace.getConfiguration("rxiv-maker").get("showStatusBarButton",!0)&&(n=l.window.createStatusBarItem(l.StatusBarAlignment.Left,100),n.command="rxiv-maker.makePdf",n.text="\u{1F4C4} rxiv PDF",n.tooltip="Build PDF with rxiv-maker",y.subscriptions.push(n))},"createStatusBarItem"),i=P(async r=>{if(!n)return;if(r||(r=l.window.activeTextEditor?.document),!r){n.hide();return}let v=C.basename(r.fileName);if(r.fileName.endsWith(".rxm")||v==="01_MAIN.md"||v==="02_SUPPLEMENTARY_INFO.md"||r.languageId==="rxiv-markdown"){let g=l.workspace.getWorkspaceFolder(r.uri);if(g){let p=g.uri.fsPath,x=t.get(p);x===void 0&&(x=await ee(p),t.set(p,x)),x?n.show():n.hide()}else n.hide()}else n.hide()},"updateStatusBarVisibility");s(),l.window.onDidChangeActiveTextEditor(r=>{i(r?.document)},null,y.subscriptions),l.workspace.onDidOpenTextDocument(i,null,y.subscriptions),l.workspace.onDidChangeConfiguration(r=>{r.affectsConfiguration("rxiv-maker.showStatusBarButton")&&(s(),i())},null,y.subscriptions);let a=l.workspace.onDidOpenTextDocument(async r=>{let v=C.basename(r.fileName);if(r.fileName.endsWith(".rxm")||v==="01_MAIN.md"||v==="02_SUPPLEMENTARY_INFO.md"){let g=l.workspace.getWorkspaceFolder(r.uri);if(g){let p=g.uri.fsPath,x=t.get(p);x===void 0&&(x=await ee(p),t.set(p,x)),x&&(await l.languages.setTextDocumentLanguage(r,"rxiv-markdown"),await e.validateDocument(r),await i(r))}}});setTimeout(async()=>{for(let r of l.workspace.textDocuments){let v=C.basename(r.fileName);if(r.fileName.endsWith(".rxm")||v==="01_MAIN.md"||v==="02_SUPPLEMENTARY_INFO.md"){let g=l.workspace.getWorkspaceFolder(r.uri);if(g){let p=g.uri.fsPath,x=t.get(p);x===void 0&&(x=await ee(p),t.set(p,x)),x&&(await l.languages.setTextDocumentLanguage(r,"rxiv-markdown"),await e.validateDocument(r),await i(r))}}}},500);let c=l.languages.registerCompletionItemProvider({language:"rxiv-markdown"},{async provideCompletionItems(r,v){return r.lineAt(v).text.substr(0,v.character).endsWith("@")?(await ne()).map(p=>{let x=new l.CompletionItem(p.key,l.CompletionItemKind.Reference);return x.detail=p.title||p.type,x.documentation=p.author||"",x.insertText=p.key,x}):[]}},"@"),o=l.languages.registerCompletionItemProvider({language:"rxiv-markdown"},{async provideCompletionItems(r,v){return r.lineAt(v).text.substr(0,v.character).endsWith("@")?(await Q()).map(p=>{let x=p.supplementary?`s${p.type}:`:`${p.type}:`,R=new l.CompletionItem(`${x}${p.label}`,l.CompletionItemKind.Reference);return R.detail=`${p.type.toUpperCase()} reference`,R.documentation=`Line ${p.line+1}${p.supplementary?" (Supplementary)":""}`,R.insertText=`${x}${p.label}`,R}):[]}},"@"),d=l.commands.registerCommand("rxiv-maker.insertCitation",async()=>{let r=await ne();if(r.length===0){let g=[],p=l.window.activeTextEditor;if(p){let R=C.dirname(p.document.fileName);g.push(C.join(R,"03_REFERENCES.bib"))}if(l.workspace.workspaceFolders)for(let R of l.workspace.workspaceFolders){let _=C.join(R.uri.fsPath,"03_REFERENCES.bib");g.includes(_)||g.push(_)}let x=`No bibliography file (03_REFERENCES.bib) found.

Searched in:
${g.join(`
`)}

Please create 03_REFERENCES.bib in the same directory as your document.`;l.window.showWarningMessage(x);return}let v=r.map(g=>({label:g.key,description:g.title||g.type,detail:g.author||""})),u=await l.window.showQuickPick(v,{placeHolder:"Select citation to insert"});if(u){let g=l.window.activeTextEditor;if(g){let p=g.selection.active;await g.edit(x=>{x.insert(p,`@${u.label}`)})}}}),m=l.commands.registerCommand("rxiv-maker.insertFigureReference",async()=>{let v=(await Q()).filter(p=>p.type==="fig");if(v.length===0){l.window.showWarningMessage("No figure labels found in the document");return}let u=v.map(p=>({label:p.label,description:p.supplementary?"Supplementary Figure":"Figure",detail:`Line ${p.line+1}`})),g=await l.window.showQuickPick(u,{placeHolder:"Select figure reference to insert"});if(g){let p=l.window.activeTextEditor;if(p){let x=p.selection.active,R=v.find(_=>_.label===g.label)?.supplementary?"@sfig:":"@fig:";await p.edit(_=>{_.insert(x,`${R}${g.label}`)})}}}),f=l.commands.registerCommand("rxiv-maker.insertTableReference",async()=>{let v=(await Q()).filter(p=>p.type==="table");if(v.length===0){l.window.showWarningMessage("No table labels found in the document");return}let u=v.map(p=>({label:p.label,description:p.supplementary?"Supplementary Table":"Table",detail:`Line ${p.line+1}`})),g=await l.window.showQuickPick(u,{placeHolder:"Select table reference to insert"});if(g){let p=l.window.activeTextEditor;if(p){let x=p.selection.active,R=v.find(_=>_.label===g.label)?.supplementary?"@stable:":"@table:";await p.edit(_=>{_.insert(x,`${R}${g.label}`)})}}}),b=l.commands.registerCommand("rxiv-maker.insertEquationReference",async()=>{let v=(await Q()).filter(p=>p.type==="eq");if(v.length===0){l.window.showWarningMessage("No equation labels found in the document");return}let u=v.map(p=>({label:p.label,description:"Equation",detail:`Line ${p.line+1}`})),g=await l.window.showQuickPick(u,{placeHolder:"Select equation reference to insert"});if(g){let p=l.window.activeTextEditor;if(p){let x=p.selection.active;await p.edit(R=>{R.insert(x,`@eq:${g.label}`)})}}}),h=new Map,S=P(r=>{let v=h.get(r);if(v&&v.exitStatus===void 0)return v;let u=`rxiv-maker: ${C.basename(r)||r}`,g=l.window.createTerminal({name:u,cwd:r});return h.set(r,g),l.window.onDidCloseTerminal(p=>{for(let[x,R]of h.entries())if(R===p){h.delete(x);break}}),g},"getRxivMakerTerminal"),E=l.commands.registerCommand("rxiv-maker.makeValidate",async()=>{let r=await J();if(!r.success||!r.manuscriptPath){l.window.showErrorMessage(r.error||"Could not determine manuscript folder");return}let v=S(r.manuscriptPath);v.show(),v.sendText("rxiv validate .")}),$=l.commands.registerCommand("rxiv-maker.makePdf",async()=>{let r=await J();if(!r.success||!r.manuscriptPath){l.window.showErrorMessage(r.error||"Could not determine manuscript folder");return}let v=S(r.manuscriptPath);v.show(),v.sendText("rxiv pdf .")}),j=l.commands.registerCommand("rxiv-maker.makeClean",async()=>{let r=await J();if(!r.success||!r.manuscriptPath){l.window.showErrorMessage(r.error||"Could not determine manuscript folder");return}let v=S(r.manuscriptPath);v.show(),v.sendText("rxiv clean .")}),U=l.commands.registerCommand("rxiv-maker.installRxivMaker",async()=>{await l.window.withProgress({location:l.ProgressLocation.Notification,title:"Checking installation prerequisites...",cancellable:!1},async r=>{r.report({increment:50,message:"Checking pipx availability..."});let v=!1;try{await new Promise((p,x)=>{(0,ie.exec)("pipx --version",{timeout:5e3},(R,_,Ae)=>{R||(v=!0),p()})})}catch{}if(!v){if(await l.window.showWarningMessage("pipx is required to install rxiv-maker. Would you like to see installation instructions?",{modal:!0},"Show Installation Instructions","Cancel")==="Show Installation Instructions"){let R=await l.workspace.openTextDocument({content:"# Install pipx (Python Package Manager)\n\n## macOS:\n```bash\nbrew install pipx\n```\n\n## Linux (Ubuntu/Debian):\n```bash\nsudo apt update\nsudo apt install pipx\n```\n\n## Linux (Other):\n```bash\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\n```\n\n## Windows:\n```powershell\npip install --user pipx\n```\n\nAfter installing pipx, restart VS Code and try again.",language:"markdown"});await l.window.showTextDocument(R)}return}if(await l.window.showInformationMessage("Install rxiv-maker using pipx? This will install rxiv-maker globally and make it available from any terminal.",{modal:!0},"Yes, install rxiv-maker","No, cancel")!=="Yes, install rxiv-maker")return;let g=l.window.createTerminal({name:"rxiv-maker-install"});g.show(),g.sendText('echo "Installing rxiv-maker with pipx..."'),g.sendText("pipx install rxiv-maker"),g.sendText('echo "Installation complete! You can now use rxiv commands."'),g.sendText("rxiv --version")})}),B=l.commands.registerCommand("rxiv-maker.makeAddBibliography",async()=>{let r=await J();if(!r.success||!r.manuscriptPath){l.window.showErrorMessage(r.error||"Could not determine manuscript folder");return}let v=await l.window.showInputBox({prompt:"Enter DOI to add to bibliography",placeHolder:"e.g., 10.1000/example or https://doi.org/10.1000/example",validateInput:P(p=>{if(!p)return"DOI is required";if(!/^(https?:\/\/)?(dx\.)?doi\.org\/10\.|^10\./.test(p))return"Please enter a valid DOI (e.g., 10.1000/example)"},"validateInput")});if(!v)return;let u=v.replace(/^(https?:\/\/)?(dx\.)?doi\.org\//,""),g=S(r.manuscriptPath);g.show(),g.sendText(`rxiv bibliography add --manuscript-path . ${u}`)}),se=l.commands.registerCommand("rxiv-maker.insertBlindtext",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active;await r.edit(u=>{u.insert(v,"{{blindtext}}")})}}),oe=l.commands.registerCommand("rxiv-maker.insertBlindtextParagraph",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active;await r.edit(u=>{u.insert(v,"{{Blindtext}}")})}}),ae=l.commands.registerCommand("rxiv-maker.insertPythonBlock",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active,u=r.selection;if(u.isEmpty){let g=new l.SnippetString(`{{py:
$1
}}`);await r.insertSnippet(g,v)}else{let g=r.document.getText(u);await r.edit(p=>{p.replace(u,`{{py:
${g}
}}`)})}}}),re=l.commands.registerCommand("rxiv-maker.insertPythonInline",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active,u=r.selection;if(u.isEmpty){let g=new l.SnippetString("{py: $1}");await r.insertSnippet(g,v)}else{let g=r.document.getText(u);await r.edit(p=>{p.replace(u,`{py: ${g}}`)})}}}),ce=l.commands.registerCommand("rxiv-maker.insertPythonImport",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active,u=[{label:"datetime",detail:"Date and time operations"},{label:"math",detail:"Mathematical functions"},{label:"statistics",detail:"Statistical functions"},{label:"json",detail:"JSON encoder/decoder"},{label:"csv",detail:"CSV file reading/writing"},{label:"random",detail:"Generate random numbers"},{label:"collections",detail:"Specialized container datatypes"},{label:"itertools",detail:"Iterator building blocks"},{label:"functools",detail:"Higher-order functions and operations on functions"}],g=await l.window.showQuickPick(u,{placeHolder:"Select a module to import (or type a custom module name)"});if(g){let p=new l.SnippetString(`{py:import ${g.label}}`);await r.insertSnippet(p,v)}else{let p=await l.window.showInputBox({prompt:"Enter module name to import",placeHolder:"e.g., datetime"});if(p){let x=new l.SnippetString(`{py:import ${p}}`);await r.insertSnippet(x,v)}}}}),le=l.commands.registerCommand("rxiv-maker.insertPythonFromImport",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active,u=new l.SnippetString("{py:from ${1:module} import ${2:item}}");await r.insertSnippet(u,v)}}),de=l.commands.registerCommand("rxiv-maker.insertPythonSet",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active,u=new l.SnippetString('{py:set ${1:variable_name} = ${2:"value"}}');await r.insertSnippet(u,v)}}),me=l.commands.registerCommand("rxiv-maker.insertPythonGet",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active,u=new l.SnippetString("{py:get ${1:variable_name}}");await r.insertSnippet(u,v)}}),pe=l.commands.registerCommand("rxiv-maker.insertPythonContext",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active,u=new l.SnippetString('{py:context="${1:context_name}" ${2:code}}');await r.insertSnippet(u,v)}}),ve=l.commands.registerCommand("rxiv-maker.insertPythonFormat",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active,u=[{label:"number,2",detail:"Format number with 2 decimal places"},{label:"percentage,1",detail:"Format as percentage with 1 decimal place"},{label:"currency",detail:"Format as currency"},{label:"scientific,3",detail:"Format in scientific notation with 3 decimal places"},{label:"date,%Y-%m-%d",detail:"Format date as YYYY-MM-DD"},{label:"date,%B %d, %Y",detail:'Format date as "Month DD, YYYY"'},{label:"comma",detail:"Add thousand separators"}],g=await l.window.showQuickPick(u,{placeHolder:"Select a format specification"});if(g){let p=new l.SnippetString(`{py:format="${g.label}" \${1:expression}}`);await r.insertSnippet(p,v)}else{let p=new l.SnippetString('{py:format="${1:format_spec}" ${2:expression}}');await r.insertSnippet(p,v)}}}),ge=l.commands.registerCommand("rxiv-maker.insertPythonGlobal",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active,u=new l.SnippetString('{py:global ${1:variable_name} = ${2:"value"}}');await r.insertSnippet(u,v)}}),fe=l.commands.registerCommand("rxiv-maker.insertPythonIf",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active,u=new l.SnippetString('{py:if ${1:condition}: "${2:true_value}" else: "${3:false_value}"}');await r.insertSnippet(u,v)}}),ue=l.commands.registerCommand("rxiv-maker.insertTexBlock",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active,u=r.selection;if(u.isEmpty){let g=new l.SnippetString(`{{tex:
$1
}}`);await r.insertSnippet(g,v)}else{let g=r.document.getText(u);await r.edit(p=>{p.replace(u,`{{tex:
${g}
}}`)})}}}),he=l.commands.registerCommand("rxiv-maker.insertTexInline",async()=>{let r=l.window.activeTextEditor;if(r){let v=r.selection.active,u=r.selection;if(u.isEmpty){let g=new l.SnippetString("{{tex: $1}}");await r.insertSnippet(g,v)}else{let g=r.document.getText(u);await r.edit(p=>{p.replace(u,`{{tex: ${g}}}`)})}}}),we=l.commands.registerCommand("rxiv-maker.validateDocument",async()=>{let r=l.window.activeTextEditor;r?(await e.validateDocument(r.document),l.window.showInformationMessage("Document validation completed")):l.window.showWarningMessage("No active document to validate")}),ye=l.commands.registerCommand("rxiv-maker.clearDiagnostics",()=>{e.clearAllDiagnostics(),l.window.showInformationMessage("All diagnostics cleared")}),be=l.commands.registerCommand("rxiv-maker.validateAllDocuments",async()=>{await e.validateAllOpenDocuments(),l.window.showInformationMessage("All documents validated")});y.subscriptions.push(a,c,o,d,m,f,b,U,E,$,j,B,se,oe,ae,re,ce,le,de,me,pe,ve,ge,fe,ue,he,we,ye,be)}P(Re,"activate");async function ne(){let y=[],e=l.window.activeTextEditor;if(e){let n=C.dirname(e.document.fileName),s=C.join(n,"03_REFERENCES.bib");y.push(s),console.log("Rxiv-Maker: Searching for bibliography in current document directory:",s)}if(l.workspace.workspaceFolders)for(let n of l.workspace.workspaceFolders){let s=C.join(n.uri.fsPath,"03_REFERENCES.bib");y.includes(s)||(y.push(s),console.log("Rxiv-Maker: Searching for bibliography in workspace folder:",s))}let t=null;for(let n of y)try{await F.promises.access(n,F.constants.F_OK|F.constants.R_OK),t=n,console.log("Rxiv-Maker: Found bibliography file at:",t);break}catch{console.log("Rxiv-Maker: Bibliography not found at:",n)}if(!t)return console.log("Rxiv-Maker: No bibliography file found in any search location"),[];try{let n=await F.promises.readFile(t,"utf8"),s=[],i=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,a;for(;(a=i.exec(n))!==null;){let c=a[1],o=a[2],d=a.index,m=Te(n,d),f=n.substring(d,m),b=f.match(/title\s*=\s*[{"](.*?)["}]/),h=f.match(/author\s*=\s*[{"](.*?)["}]/),S=f.match(/year\s*=\s*[{"](.*?)["}]/);s.push({key:o,type:c,title:b?.[1],author:h?.[1],year:S?.[1]})}return s}catch(n){return n.code==="ENOENT"?[]:(console.error("Error parsing bibliography:",n),[])}}P(ne,"getBibEntries");async function Q(){let y=[],e=[],t=l.window.activeTextEditor;if(t){let n=C.dirname(t.document.fileName);e.push(C.join(n,"01_MAIN.md")),e.push(C.join(n,"02_SUPPLEMENTARY_INFO.md"))}if(l.workspace.workspaceFolders)for(let n of l.workspace.workspaceFolders){let s=C.join(n.uri.fsPath,"01_MAIN.md"),i=C.join(n.uri.fsPath,"02_SUPPLEMENTARY_INFO.md");e.includes(s)||e.push(s),e.includes(i)||e.push(i)}for(let n of e)try{let i=(await F.promises.readFile(n,"utf8")).split(`
`),a=n.includes("02_SUPPLEMENTARY_INFO");for(let c=0;c<i.length;c++){let o=i[c],d=/\{#(s?)((fig|table|eq|snote)):([a-zA-Z0-9_-]+)(?:\s[^}]*)?\}/g,m;for(;(m=d.exec(o))!==null;){let f=m[1]==="s"||a,b=m[2],h=m[4];y.push({type:b,label:h,line:c,supplementary:f})}}}catch{continue}return y}P(Q,"getDocumentReferences");function Te(y,e){let t=0,n=!1,s="";for(let i=e;i<y.length;i++){let a=y[i];if(n)a===s&&y[i-1]!=="\\"&&(n=!1);else if(a==='"'||a==="'")n=!0,s=a;else if(a==="{")t++;else if(a==="}"&&(t--,t===0))return i+1}return y.length}P(Te,"findMatchingBrace");async function ee(y){try{let e=["00_CONFIG.yml","01_MAIN.rxm","01_MAIN.md","03_REFERENCES.bib"],t=["02_SUPPLEMENTARY_INFO.rxm","02_SUPPLEMENTARY_INFO.md"];return(await Promise.all(e.map(async i=>{try{return await F.promises.access(C.join(y,i)),!0}catch{return!1}}))).filter(Boolean).length>=2}catch(e){return console.error("Error checking rxiv-maker project:",e),!1}}P(ee,"isRxivMakerProject");async function J(){let y=l.window.activeTextEditor;if(!y)return{success:!1,error:"No active document. Please open a file in your manuscript folder."};let e=y.document.fileName,t=C.dirname(e),n=["00_CONFIG.yml","01_MAIN.md","01_MAIN.rxm","03_REFERENCES.bib"],s=await Promise.all(n.map(async a=>{try{return await F.promises.access(C.join(t,a)),!0}catch{return!1}})),i;if(s.some(a=>a))i=t;else{let a=l.workspace.workspaceFolders;if(!a)return{success:!1,error:"No workspace folder found. Please open the manuscript folder in VS Code."};let c=null;for(let o of a){let d=o.uri.fsPath;if((await Promise.all(n.map(async f=>{try{return await F.promises.access(C.join(d,f)),!0}catch{return!1}}))).some(f=>f)){c=d;break}}if(!c)return{success:!1,error:"No manuscript folder found. Please ensure your workspace contains a folder with rxiv-maker files (00_CONFIG.yml, 01_MAIN.md, etc.)"};i=c}return{success:!0,manuscriptPath:i}}P(J,"findManuscriptFolder");function Ie(){}P(Ie,"deactivate");0&&(module.exports={activate,deactivate});
