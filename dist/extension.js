"use strict";var Re=Object.create;var X=Object.defineProperty;var Te=Object.getOwnPropertyDescriptor;var Me=Object.getOwnPropertyNames;var Ie=Object.getPrototypeOf,Ae=Object.prototype.hasOwnProperty;var C=(y,e)=>X(y,"name",{value:e,configurable:!0});var $e=(y,e)=>{for(var t in e)X(y,t,{get:e[t],enumerable:!0})},ce=(y,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of Me(e))!Ae.call(y,i)&&i!==t&&X(y,i,{get:()=>e[i],enumerable:!(s=Te(e,i))||s.enumerable});return y};var I=(y,e,t)=>(t=y!=null?Re(Ie(y)):{},ce(e||!y||!y.__esModule?X(t,"default",{value:y,enumerable:!0}):t,y)),_e=y=>ce(X({},"__esModule",{value:!0}),y);var Oe={};$e(Oe,{activate:()=>Fe,deactivate:()=>Le});module.exports=_e(Oe);var c=I(require("vscode")),$=I(require("fs")),E=I(require("path")),me=require("child_process"),B=I(require("os"));var U=I(require("vscode"));var F=I(require("vscode")),V=I(require("fs")),G=I(require("path"));var Q=class{static{C(this,"CitationValidator")}bibEntriesCache=new Map;CACHE_DURATION=5e3;async validate(e){let t=[],i=e.getText().split(`
`);try{let n=await this.getBibEntries(e),a=new Set(n.map(o=>o.key)),r=!1;for(let o=0;o<i.length;o++){let d=i[o];if(d.trim().startsWith("```")){r=!r;continue}if(r)continue;let m=d.matchAll(/(?<!\\)\[(@[^\]]+)\]/g);for(let b of m){if(this.isPositionInCodeSpan(d,b.index))continue;let f=b[1].match(/(?<!\\)@([a-zA-Z0-9_-]+)/g);if(f)for(let P of f){let D=P.substring(1),O=d.indexOf(P,b.index);this.validateCitationKey(D,o,d,O,a,t)}}let g=d.matchAll(/(?<!\\)@(?!fig:|eq:|table:|tbl:|sfig:|stable:|snote:)([a-zA-Z0-9_-]+)/g);for(let b of g){if(this.isPositionInCodeSpan(d,b.index))continue;let f=b[1];f&&this.isValidCitationKey(f)&&this.validateCitationKey(f,o,d,b.index,a,t)}}}catch{let a=new F.Diagnostic(new F.Range(0,0,0,0),"No bibliography file (03_REFERENCES.bib) found. Citation validation disabled.",F.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="missing-bibliography",t.push(a)}return t}validateCitationKey(e,t,s,i,n,a){if(!n.has(e)){let r=s.indexOf("@"+e,i),o=new F.Range(t,r,t,r+e.length+1),d=new F.Diagnostic(o,`Citation '@${e}' not found in bibliography`,F.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="unknown-citation",a.push(d)}}isValidCitationKey(e){return/^[a-zA-Z0-9_-]+$/.test(e)}isPositionInCodeSpan(e,t){let s=[],i=-1;for(let n=0;n<e.length;n++)e[n]==="`"&&(i===-1?i=n:(s.push({start:i,end:n}),i=-1));for(let n of s)if(t>=n.start&&t<=n.end)return!0;return!1}async getBibEntries(e){let t=this.getBibliographySearchPaths(e),s=null;for(let a of t)try{await V.promises.access(a,V.constants.F_OK|V.constants.R_OK),s=a;break}catch{}if(!s)throw new Error("No bibliography file found");let i=this.bibEntriesCache.get(s),n=Date.now();if(i&&n-i.timestamp<this.CACHE_DURATION)return i.entries;try{let a=await V.promises.readFile(s,"utf8"),r=this.parseBibFile(a);return this.bibEntriesCache.set(s,{entries:r,timestamp:n}),r}catch(a){throw new Error(`Error reading bibliography file: ${a}`)}}getBibliographySearchPaths(e){let t=[],s=G.dirname(e.fileName);if(t.push(G.join(s,"03_REFERENCES.bib")),F.workspace.workspaceFolders)for(let i of F.workspace.workspaceFolders){let n=G.join(i.uri.fsPath,"03_REFERENCES.bib");t.includes(n)||t.push(n)}return t}parseBibFile(e){let t=[],s=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,i;for(;(i=s.exec(e))!==null;){let n=i[1],a=i[2],r=i.index,o=this.findMatchingBrace(e,r),d=e.substring(r,o),m=d.match(/title\s*=\s*[{"](.*?)["}]/),g=d.match(/author\s*=\s*[{"](.*?)["}]/),b=d.match(/year\s*=\s*[{"](.*?)["}]/);t.push({key:a,type:n,title:m?.[1],author:g?.[1],year:b?.[1]})}return t}findMatchingBrace(e,t){let s=0,i=!1,n="";for(let a=t;a<e.length;a++){let r=e[a];if(i)r===n&&e[a-1]!=="\\"&&(i=!1);else if(r==='"'||r==="'")i=!0,n=r;else if(r==="{")s++;else if(r==="}"&&(s--,s===0))return a+1}return e.length}};var N=I(require("vscode")),K=I(require("fs")),L=I(require("path"));var J=class{static{C(this,"CrossReferenceValidator")}labelsCache=new Map;CACHE_DURATION=5e3;async validate(e){let t=[],i=e.getText().split(`
`);try{let n=await this.getDefinedLabels(e),a=this.createLabelMap(n),r={fig:/(?<!\\)@fig:([a-zA-Z0-9_-]+)/g,sfig:/(?<!\\)@sfig:([a-zA-Z0-9_-]+)/g,table:/(?<!\\)@table:([a-zA-Z0-9_-]+)/g,stable:/(?<!\\)@stable:([a-zA-Z0-9_-]+)/g,eq:/(?<!\\)@eq:([a-zA-Z0-9_-]+)/g,snote:/(?<!\\)@snote:([a-zA-Z0-9_-]+)/g},o=!1;for(let m=0;m<i.length;m++){let g=i[m];if(g.trim().startsWith("```")){o=!o;continue}if(!o)for(let[b,f]of Object.entries(r)){let P=g.matchAll(f);for(let D of P){if(this.isPositionInCodeSpan(g,D.index))continue;let O=D[1],H=`${b}:${O}`;if(!a.has(H)){let Y=new N.Range(m,D.index,m,D.index+D[0].length),z=new N.Diagnostic(Y,`Reference '${D[0]}' not found. No matching label defined.`,N.DiagnosticSeverity.Error);z.source="rxiv-markdown",z.code="undefined-reference",t.push(z)}}}}let d=this.findDuplicateLabels(n);for(let m of d)if(m.file===e.fileName){let g=new N.Range(m.line,0,m.line,0),b=new N.Diagnostic(g,`Duplicate label '${m.type}:${m.label}' defined multiple times`,N.DiagnosticSeverity.Warning);b.source="rxiv-markdown",b.code="duplicate-label",t.push(b)}}catch(n){console.error("Error validating cross-references:",n)}return t}async getDefinedLabels(e){let t=await this.getManuscriptFiles(e),s=[];for(let i of t)try{let n=this.labelsCache.get(i),a=Date.now();if(n&&a-n.timestamp<this.CACHE_DURATION){s.push(...n.labels);continue}let r=await K.promises.readFile(i,"utf8"),o=this.extractLabelsFromContent(r,i);this.labelsCache.set(i,{labels:o,timestamp:a}),s.push(...o)}catch{continue}return s}extractLabelsFromContent(e,t){let s=[],i=e.split(`
`),n={fig:/\{#fig:([a-zA-Z0-9_:-]+)([^}]*)\}/g,sfig:/\{#sfig:([a-zA-Z0-9_:-]+)([^}]*)\}/g,table:/\{#table:([a-zA-Z0-9_:-]+)([^}]*)\}/g,stable:/\{#stable:([a-zA-Z0-9_:-]+)([^}]*)\}/g,eq:/\$\$.*?\$\$\s*\{[^}]*#eq:([a-zA-Z0-9_:-]+)[^}]*\}/g,snote:/\{#snote:([a-zA-Z0-9_:-]+)\}/g};for(let a=0;a<i.length;a++){let r=i[a];for(let[o,d]of Object.entries(n)){let m=r.matchAll(d);for(let g of m){let b=g[1];s.push({type:o,label:b,line:a,file:t})}}}return s}async getManuscriptFiles(e){let t=[],s=L.dirname(e.fileName);if(t.push(L.join(s,"01_MAIN.md")),t.push(L.join(s,"02_SUPPLEMENTARY_INFO.md")),t.push(L.join(s,"01_MAIN.rxm")),t.push(L.join(s,"02_SUPPLEMENTARY_INFO.rxm")),N.workspace.workspaceFolders)for(let n of N.workspace.workspaceFolders){let a=n.uri.fsPath,r=L.join(a,"01_MAIN.md"),o=L.join(a,"02_SUPPLEMENTARY_INFO.md"),d=L.join(a,"01_MAIN.rxm"),m=L.join(a,"02_SUPPLEMENTARY_INFO.rxm");t.includes(r)||t.push(r),t.includes(o)||t.push(o),t.includes(d)||t.push(d),t.includes(m)||t.push(m)}let i=[];for(let n of t)try{await K.promises.access(n,K.constants.F_OK),i.push(n)}catch{}return i}createLabelMap(e){let t=new Map;for(let s of e){let i=`${s.type}:${s.label}`;t.set(i,s)}return t}findDuplicateLabels(e){let t=new Map,s=[];for(let i of e){let n=`${i.type}:${i.label}`;if(t.has(n)){s.push(i);let a=t.get(n);s.includes(a)||s.push(a)}else t.set(n,i)}return s}isPositionInCodeSpan(e,t){let s=[],i=-1;for(let n=0;n<e.length;n++)e[n]==="`"&&(i===-1?i=n:(s.push({start:i,end:n}),i=-1));for(let n of s)if(t>=n.start&&t<=n.end)return!0;return!1}};var x=I(require("vscode"));var ee=class{static{C(this,"PythonBlockValidator")}async validate(e){let t=[],i=e.getText().split(`
`),n=!1,a=-1,r="";for(let o=0;o<i.length;o++){let d=i[o],m=d.match(/^\s*\{\{py:\s*(.*)$/),g=d.match(/^\s*\}\}\s*$/),b=d.match(/\{py:\s*([^}]+)\}/g);if(m&&!n){n=!0,a=o,r=d.match(/^\s*/)?.[0]||"";let f=m[1].trim();f&&!f.endsWith("}}")&&this.validatePythonSyntax(f,o,m.index,t)}else if(g&&n)n=!1,a=-1;else if(n&&a!==-1){let f=d.replace(/^\s*/,"");f.trim()&&!f.includes("}}")&&this.validatePythonSyntax(f,o,0,t)}if(b)for(let f of b){let P=f.match(/\{py:\s*([^}]+)\}/);if(P){let D=P[1],O=d.indexOf(f);this.validateInlinePython(D,o,O,t)}}this.validatePythonVariableOperations(d,o,t)}if(n){let o=new x.Diagnostic(new x.Range(a,0,a,i[a].length),'Unclosed Python block - missing "}}"',x.DiagnosticSeverity.Error);o.source="rxiv-markdown",o.code="unclosed-python-block",t.push(o)}return t}validatePythonSyntax(e,t,s,i){let n=e.trim();if(!n)return;let a=this.findBasicSyntaxIssues(n);for(let r of a){let o=new x.Diagnostic(new x.Range(t,s,t,s+e.length),r.message,r.severity);o.source="rxiv-markdown",o.code=r.code,i.push(o)}}validateInlinePython(e,t,s,i){let n=e.trim();if(n.includes(`
`)){let a=new x.Diagnostic(new x.Range(t,s,t,s+e.length+6),"Inline Python expressions cannot contain newlines",x.DiagnosticSeverity.Error);a.source="rxiv-markdown",a.code="multiline-inline-python",i.push(a)}this.validatePythonSyntax(n,t,s+4,i)}validatePythonVariableOperations(e,t,s){let i=[{pattern:/\{py:set\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(.+)\}/,type:"set"},{pattern:/\{py:get\s+([a-zA-Z_][a-zA-Z0-9_]*)\}/,type:"get"},{pattern:/\{py:global\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(.+)\}/,type:"global"},{pattern:/\{py:format="([^"]+)"\s+(.+)\}/,type:"format"},{pattern:/\{py:context="([^"]+)"\s+(.+)\}/,type:"context"},{pattern:/\{py:if\s+(.+?):\s*"([^"]*?)"\s*else:\s*"([^"]*?)"\}/,type:"conditional"}];for(let r of i){let o=e.matchAll(new RegExp(r.pattern.source,"g"));for(let d of o)this.validatePythonOperation(d,r.type,t,s)}let n=e.matchAll(/\{py:import\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)\}/g);for(let r of n)this.validateImportStatement(r[1],t,r.index,s);let a=e.matchAll(/\{py:from\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)\s+import\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\s*,\s*[a-zA-Z_][a-zA-Z0-9_]*)*)\}/g);for(let r of a)this.validateFromImportStatement(r[1],r[2],t,r.index,s)}findBasicSyntaxIssues(e){let t=[],s=(e.match(/\(/g)||[]).length,i=(e.match(/\)/g)||[]).length;s!==i&&t.push({message:"Unmatched parentheses in Python code",severity:x.DiagnosticSeverity.Error,code:"unmatched-parentheses"});let n=(e.match(/\[/g)||[]).length,a=(e.match(/\]/g)||[]).length;n!==a&&t.push({message:"Unmatched brackets in Python code",severity:x.DiagnosticSeverity.Error,code:"unmatched-brackets"});let r=(e.match(/\{/g)||[]).length,o=(e.match(/\}/g)||[]).length;return r!==o&&t.push({message:"Unmatched braces in Python code",severity:x.DiagnosticSeverity.Error,code:"unmatched-braces"}),e.includes("	")&&e.includes("    ")&&t.push({message:"Mixed tabs and spaces in Python code",severity:x.DiagnosticSeverity.Warning,code:"mixed-indentation"}),e.match(/^\s*def\s+/)&&!e.includes(":")&&t.push({message:"Function definition missing colon",severity:x.DiagnosticSeverity.Error,code:"missing-colon"}),e.match(/^\s*(if|elif|else|for|while|try|except|finally|with)\s+/)&&!e.includes(":")&&t.push({message:"Control structure missing colon",severity:x.DiagnosticSeverity.Error,code:"missing-colon"}),t}validatePythonOperation(e,t,s,i){let n=e[0],a=e.index;switch(t){case"set":case"global":let r=e[1],o=e[2];if(!this.isValidVariableName(r)){let g=new x.Diagnostic(new x.Range(s,a,s,a+n.length),`Invalid variable name '${r}'`,x.DiagnosticSeverity.Error);g.source="rxiv-markdown",g.code="invalid-variable-name",i.push(g)}break;case"get":let d=e[1];if(!this.isValidVariableName(d)){let g=new x.Diagnostic(new x.Range(s,a,s,a+n.length),`Invalid variable name '${d}'`,x.DiagnosticSeverity.Error);g.source="rxiv-markdown",g.code="invalid-variable-name",i.push(g)}break;case"format":if(!e[1].trim()){let g=new x.Diagnostic(new x.Range(s,a,s,a+n.length),"Empty format specification",x.DiagnosticSeverity.Warning);g.source="rxiv-markdown",g.code="empty-format-spec",i.push(g)}break}}validateImportStatement(e,t,s,i){if(!this.isValidModuleName(e)){let n=new x.Diagnostic(new x.Range(t,s,t,s+e.length+12),`Invalid module name '${e}'`,x.DiagnosticSeverity.Error);n.source="rxiv-markdown",n.code="invalid-module-name",i.push(n)}}validateFromImportStatement(e,t,s,i,n){if(!this.isValidModuleName(e)){let r=new x.Diagnostic(new x.Range(s,i,s,i+20),`Invalid module name '${e}'`,x.DiagnosticSeverity.Error);r.source="rxiv-markdown",r.code="invalid-module-name",n.push(r)}let a=t.split(",").map(r=>r.trim());for(let r of a)if(!this.isValidVariableName(r)){let o=new x.Diagnostic(new x.Range(s,i,s,i+20),`Invalid import name '${r}'`,x.DiagnosticSeverity.Error);o.source="rxiv-markdown",o.code="invalid-import-name",n.push(o)}}isValidVariableName(e){return/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(e)}isValidModuleName(e){return/^[a-zA-Z_][a-zA-Z0-9_]*(\.[a-zA-Z_][a-zA-Z0-9_]*)*$/.test(e)}};var k=I(require("vscode"));var te=class{static{C(this,"LaTeXBlockValidator")}async validate(e){let t=[],i=e.getText().split(`
`),n=!1,a=-1,r="",o=[],d=[];for(let m=0;m<i.length;m++){let g=i[m],b=g.match(/^\s*\{\{tex:\s*(.*)$/),f=g.match(/^\s*\}\}\s*$/),P=g.match(/\{\{tex:\s*([^}]+)\}\}/g);if(b&&!n){n=!0,a=m,r="",o=[];let D=b[1].trim();D&&!D.endsWith("}}")&&(r+=D+`
`,o.push(D))}else if(f&&n)n=!1,r.trim()&&this.validateTexBlock(r,a,o,d,t),this.checkUnclosedenvironments(d,m,t),d=[],a=-1,r="",o=[];else if(n&&a!==-1){let D=g.trim();D&&!D.includes("}}")&&(r+=D+`
`,o.push(D))}if(P)for(let D of P){let O=D.match(/\{\{tex:\s*([^}]+)\}\}/);if(O){let H=O[1],Y=g.indexOf(D),z=[];this.validateLaTeXSyntax(H,m,Y,z,t)}}n||this.validateInlineLaTeXElements(g,m,t)}if(n){let m=new k.Diagnostic(new k.Range(a,0,a,i[a].length),'Unclosed TeX block - missing "}}"',k.DiagnosticSeverity.Error);m.source="rxiv-markdown",m.code="unclosed-tex-block",t.push(m)}return t}validateTexBlock(e,t,s,i,n){let a=this.findBraceIssues(e);for(let r of a){let o=new k.Diagnostic(new k.Range(t,0,t+s.length,0),r.message,r.severity);o.source="rxiv-markdown",o.code=r.code,n.push(o)}for(let r=0;r<s.length;r++){let o=s[r],d=t+r+(t===0?0:1);this.trackLaTeXEnvironments(o,d,i,n)}}findBraceIssues(e){let t=[],s=0,i=!1,n="";for(let a=0;a<e.length;a++){let r=e[a],o=a>0?e[a-1]:"";if(i){r===n&&o!=="\\"&&(i=!1);continue}if((r==='"'||r==="'")&&o!=="\\"){i=!0,n=r;continue}if(r==="{"&&o!=="\\"?s++:r==="}"&&o!=="\\"&&s--,s<0){t.push({message:"Unmatched closing brace in LaTeX code",severity:k.DiagnosticSeverity.Error,code:"unmatched-closing-brace"});break}}return s>0&&t.push({message:"Unmatched opening brace in LaTeX code",severity:k.DiagnosticSeverity.Error,code:"unmatched-opening-brace"}),t}validateLaTeXSyntax(e,t,s,i,n){if(!e.trim())return;this.trackLaTeXEnvironments(e,t,i,n);let a=this.findLaTeXSyntaxIssues(e);for(let r of a){let o=new k.Diagnostic(new k.Range(t,s+r.column,t,s+r.column+r.length),r.message,r.severity);o.source="rxiv-markdown",o.code=r.code,n.push(o)}}validateInlineLaTeXElements(e,t,s){let i=[...e.matchAll(/\$\$([^$]+)\$\$/g),...e.matchAll(/(?<!\$)\$([^$\n]+)\$(?!\$)/g)];for(let a of i){let r=a[1],o=a.index,d=this.findMathExpressionIssues(r);for(let m of d){let g=new k.Diagnostic(new k.Range(t,o,t,o+a[0].length),m.message,m.severity);g.source="rxiv-markdown",g.code=m.code,s.push(g)}}let n=e.matchAll(/\\([a-zA-Z]+)(\*?)\{([^}]*)\}/g);for(let a of n){let r=a[1],o=a[2],d=a[3],m=a.index;this.validateLaTeXCommand(r,o,d,t,m,s)}}trackLaTeXEnvironments(e,t,s,i){let n=[...e.matchAll(/\\begin\{([^}]+)\}/g)],a=[...e.matchAll(/\\end\{([^}]+)\}/g)],r=[...n.map(o=>({type:"begin",env:o[1],index:o.index})),...a.map(o=>({type:"end",env:o[1],index:o.index}))].sort((o,d)=>o.index-d.index);for(let o of r)if(o.type==="begin")s.push({name:o.env,line:t});else if(o.type==="end")if(s.length===0){let d=new k.Diagnostic(new k.Range(t,o.index,t,o.index+`\\end{${o.env}}`.length),`Unexpected \\end{${o.env}} - no matching \\begin`,k.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="unmatched-end-environment",i.push(d)}else{let d=s.pop();if(d.name!==o.env){let m=new k.Diagnostic(new k.Range(t,o.index,t,o.index+`\\end{${o.env}}`.length),`Environment mismatch: \\end{${o.env}} does not match \\begin{${d.name}} on line ${d.line+1}`,k.DiagnosticSeverity.Error);m.source="rxiv-markdown",m.code="mismatched-environment",i.push(m)}}}checkUnclosedenvironments(e,t,s){for(let i of e){let n=new k.Diagnostic(new k.Range(i.line,0,i.line,0),`Unclosed LaTeX environment '${i.name}' - missing \\end{${i.name}}`,k.DiagnosticSeverity.Error);n.source="rxiv-markdown",n.code="unclosed-environment",s.push(n)}}findLaTeXSyntaxIssues(e){let t=[];if(!e.includes(`
`)){let n=0,a=-1;for(let r=0;r<e.length;r++){let o=e[r];o==="{"&&(r===0||e[r-1]!=="\\")?(n++,n===1&&(a=r)):o==="}"&&(r===0||e[r-1]!=="\\")&&n--}n>0?t.push({message:"Unmatched opening brace in LaTeX code",severity:k.DiagnosticSeverity.Error,code:"unmatched-brace",column:a,length:1}):n<0&&t.push({message:"Unmatched closing brace in LaTeX code",severity:k.DiagnosticSeverity.Error,code:"unmatched-brace",column:0,length:e.length})}let i=e.match(/\\[0-9]/g);if(i)for(let n of i){let a=e.indexOf(n);t.push({message:`Invalid LaTeX command '${n}' - commands cannot start with numbers`,severity:k.DiagnosticSeverity.Error,code:"invalid-command",column:a,length:n.length})}return e.endsWith("\\")&&!e.endsWith("\\\\")&&t.push({message:"Incomplete LaTeX command at end of line",severity:k.DiagnosticSeverity.Error,code:"incomplete-command",column:e.length-1,length:1}),t}findMathExpressionIssues(e){let t=[];e.trim()||t.push({message:"Empty math expression",severity:k.DiagnosticSeverity.Warning,code:"empty-math"});let s=(e.match(/\\left[(\[\{|]/g)||[]).length,i=(e.match(/\\right[)\]\}|]/g)||[]).length;return s!==i&&t.push({message:"Unbalanced \\left and \\right delimiters in math expression",severity:k.DiagnosticSeverity.Error,code:"unbalanced-delimiters"}),t}validateLaTeXCommand(e,t,s,i,n,a){if(["textbf","textit","emph","caption","label"].includes(e)&&!s.trim()){let o=new k.Diagnostic(new k.Range(i,n,i,n+`\\${e}${t}{}`.length),`LaTeX command '\\${e}${t}' should not be empty`,k.DiagnosticSeverity.Warning);o.source="rxiv-markdown",o.code="empty-command-content",a.push(o)}if(e==="label"&&!s.match(/^(fig|table|eq|sfig|stable|snote):[a-zA-Z0-9_-]+$/)){let o=new k.Diagnostic(new k.Range(i,n,i,n+`\\label{${s}}`.length),`Invalid label format '${s}'. Expected format: type:name (e.g., fig:my-figure)`,k.DiagnosticSeverity.Warning);o.source="rxiv-markdown",o.code="invalid-label-format",a.push(o)}}};var w=I(require("vscode")),j=I(require("fs")),A=I(require("path"));var ne=class{static{C(this,"StructureValidator")}async validate(e){let t=[],s=e.getText(),i=s.split(`
`);return await this.validateDocumentStructure(e,t),this.validateHeadingStructure(i,e,t),this.checkRequiredElements(s,e.fileName,t),await this.validateFigureFiles(i,e,t),await this.checkOrphanedElements(s,e,t),t}async validateDocumentStructure(e,t){let s=A.basename(e.fileName),i=A.dirname(e.fileName),n=[{name:"00_CONFIG.yml",description:"Configuration file"},{name:"03_REFERENCES.bib",description:"Bibliography file"}];for(let r of n){let o=A.join(i,r.name);try{await j.promises.access(o,j.constants.F_OK)}catch{if(s==="01_MAIN.md"||s==="01_MAIN.rxm"||s==="02_SUPPLEMENTARY_INFO.md"||s==="02_SUPPLEMENTARY_INFO.rxm"){let d=new w.Diagnostic(new w.Range(0,0,0,0),`Missing required file: ${r.name} (${r.description})`,w.DiagnosticSeverity.Warning);d.source="rxiv-markdown",d.code="missing-required-file",t.push(d)}}}let a=e.getText();if(a.includes("FIGURES/")||a.includes("![")){let r=A.join(i,"FIGURES");try{if(!(await j.promises.stat(r)).isDirectory()){let d=new w.Diagnostic(new w.Range(0,0,0,0),"FIGURES should be a directory, not a file",w.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="invalid-figures-path",t.push(d)}}catch{let o=new w.Diagnostic(new w.Range(0,0,0,0),"FIGURES directory not found. Create it to store figure files.",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="missing-figures-directory",t.push(o)}}}validateHeadingStructure(e,t,s){let i=0,n=!1;for(let o=0;o<e.length;o++){let d=e[o],m=d.match(/^(#{1,6})\s+(.+)$/);if(m){let g=m[1].length,b=m[2].trim();if(!n&&g===1&&(n=!0),!b){let f=new w.Diagnostic(new w.Range(o,0,o,d.length),"Empty heading - headings should have descriptive text",w.DiagnosticSeverity.Warning);f.source="rxiv-markdown",f.code="empty-heading",s.push(f)}if(g>i+1&&i>0){let f=new w.Diagnostic(new w.Range(o,0,o,m[1].length),`Heading level skipped. Level ${g} follows level ${i}. Consider using level ${i+1} instead.`,w.DiagnosticSeverity.Information);f.source="rxiv-markdown",f.code="heading-level-skip",s.push(f)}if(i=g,b.endsWith(".")){let f=new w.Diagnostic(new w.Range(o,d.lastIndexOf("."),o,d.length),"Headings typically should not end with periods",w.DiagnosticSeverity.Information);f.source="rxiv-markdown",f.code="heading-period",s.push(f)}}}let a=A.basename(t.fileName);if(!n&&!(a==="02_SUPPLEMENTARY_INFO.md"||a==="02_SUPPLEMENTARY_INFO.rxm")){let o=new w.Diagnostic(new w.Range(0,0,0,0),"Document should start with a main title (# Title)",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="missing-title",s.push(o)}}checkRequiredElements(e,t,s){let i=A.basename(t);if(i==="01_MAIN.md"||i==="01_MAIN.rxm"){let n=/!\[.*?\]\(.*?\)/.test(e)||/@fig:/.test(e),a=/@table:/.test(e)||e.includes("|")||e.includes("\\begin{table}");if(!n&&!a){let o=new w.Diagnostic(new w.Range(0,0,0,0),"Main manuscript typically should include figures or tables",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="missing-figures-tables",s.push(o)}if(!(/@[a-zA-Z]/.test(e)&&!e.match(/@(fig|table|eq|sfig|stable|snote):/))){let o=new w.Diagnostic(new w.Range(0,0,0,0),"Main manuscript should typically include citations",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="missing-citations",s.push(o)}}if((i==="01_MAIN.md"||i==="01_MAIN.rxm")&&e.length>1e3&&!/^#+\s*(abstract|summary)/mi.test(e)){let a=new w.Diagnostic(new w.Range(0,0,0,0),"Consider adding an Abstract section to your manuscript",w.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="missing-abstract",s.push(a)}}async validateFigureFiles(e,t,s){let i=A.dirname(t.fileName);for(let n=0;n<e.length;n++){let r=e[n].matchAll(/!\[([^\]]*)\]\(([^)]+)\)/g);for(let o of r){let d=o[1],m=o[2];if(m.startsWith("http://")||m.startsWith("https://"))continue;let g=A.resolve(i,m);try{await j.promises.access(g,j.constants.F_OK)}catch{let P=o.index+o[0].indexOf(m),D=new w.Diagnostic(new w.Range(n,P,n,P+m.length),`Figure file not found: ${m}`,w.DiagnosticSeverity.Error);D.source="rxiv-markdown",D.code="missing-figure-file",s.push(D)}let b=A.extname(m).toLowerCase(),f=[".png",".jpg",".jpeg",".pdf",".svg"];if(b&&!f.includes(b)){let P=o.index+o[0].indexOf(m),D=new w.Diagnostic(new w.Range(n,P,n,P+m.length),`Consider using recommended figure formats: ${f.join(", ")}`,w.DiagnosticSeverity.Information);D.source="rxiv-markdown",D.code="non-recommended-format",s.push(D)}}}}async checkOrphanedElements(e,t,s){let i=e.split(`
`),n=new Set,a=/\{#(s?(?:fig|table|eq|snote)):([a-zA-Z0-9_-]+)[^}]*\}/g,r;for(;(r=a.exec(e))!==null;){let d=r[1],m=r[2];n.add(`${d}:${m}`)}let o=await this.findAllReferencesInProject(t);for(let d of n)if(!o.has(d)){let m=e.match(new RegExp(`\\{#${d.replace(":",":")}[^}]*\\}`,"g"));if(m){let g=m[0],f=e.substring(0,e.indexOf(g)).split(`
`).length-1,P=new w.Diagnostic(new w.Range(f,0,f,i[f]?.length||0),`Label '${d}' is defined but never referenced in project`,w.DiagnosticSeverity.Information);P.source="rxiv-markdown",P.code="orphaned-label",s.push(P)}}this.checkUnusualPatterns(i,s)}async findAllReferencesInProject(e){let t=new Set,s=A.dirname(e.fileName),i=["01_MAIN.md","01_MAIN.rxm","02_SUPPLEMENTARY_INFO.md","02_SUPPLEMENTARY_INFO.rxm"],n=[];try{let a=await j.promises.readdir(s);for(let o of i)a.includes(o)&&n.push(o);let r=a.filter(o=>(o.endsWith(".rxm")||o.endsWith(".md"))&&!o.startsWith(".")&&!i.includes(o)&&o!=="README.md"&&o!=="CHANGELOG.md");n.push(...r);for(let o of n){let d=A.join(s,o);try{let m=await j.promises.readFile(d,"utf8"),g=/@(stable|sfig|fig|table|eq|snote):([a-zA-Z0-9_-]+)/g,b;for(;(b=g.exec(m))!==null;){let f=b[1],P=b[2];t.add(`${f}:${P}`)}}catch{continue}}}catch{let a=e.getText(),r=/@(stable|sfig|fig|table|eq|snote):([a-zA-Z0-9_-]+)/g,o;for(;(o=r.exec(a))!==null;){let d=o[1],m=o[2];t.add(`${d}:${m}`)}}return t}checkUnusualPatterns(e,t){for(let s=0;s<e.length;s++){let i=e[s];if(s<e.length-2){let n=!i.trim(),a=!e[s+1]?.trim(),r=!e[s+2]?.trim();if(n&&a&&r){let o=new w.Diagnostic(new w.Range(s,0,s+2,0),"Multiple consecutive empty lines - consider reducing for cleaner formatting",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="multiple-empty-lines",t.push(o)}}if(i.match(/\s+$/)){let n=i.search(/\s+$/),a=new w.Diagnostic(new w.Range(s,n,s,i.length),"Trailing whitespace",w.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="trailing-whitespace",t.push(a)}}}};var se=class{static{C(this,"RxivMarkdownDiagnosticsProvider")}diagnosticCollection;validators;disposables=[];constructor(){this.diagnosticCollection=U.languages.createDiagnosticCollection("rxiv-markdown"),this.validators=[new Q,new J,new ee,new te,new ne],this.setupEventHandlers()}setupEventHandlers(){let e=U.workspace.onDidChangeTextDocument(async n=>{this.isRxivMarkdownDocument(n.document)&&await this.validateDocument(n.document)}),t=U.workspace.onDidSaveTextDocument(async n=>{this.isRxivMarkdownDocument(n)&&await this.validateDocument(n)}),s=U.workspace.onDidOpenTextDocument(async n=>{this.isRxivMarkdownDocument(n)&&await this.validateDocument(n)}),i=U.workspace.onDidCloseTextDocument(n=>{this.isRxivMarkdownDocument(n)&&this.diagnosticCollection.delete(n.uri)});this.disposables.push(e,t,s,i)}isRxivMarkdownDocument(e){let t=e.fileName,s=t.endsWith(".rxm")||t.endsWith("01_MAIN.md")||t.endsWith("02_SUPPLEMENTARY_INFO.md");return e.languageId==="rxiv-markdown"||s}async validateDocument(e){if(this.isRxivMarkdownDocument(e))try{let t=[],s=await Promise.all(this.validators.map(i=>i.validate(e)));for(let i of s)t.push(...i);this.diagnosticCollection.set(e.uri,t)}catch(t){console.error("Error validating rxiv-markdown document:",t)}}async validateAllOpenDocuments(){let e=U.workspace.textDocuments.filter(t=>this.isRxivMarkdownDocument(t)).map(t=>this.validateDocument(t));await Promise.all(e)}clearAllDiagnostics(){this.diagnosticCollection.clear()}dispose(){this.diagnosticCollection.dispose(),this.disposables.forEach(e=>e.dispose()),this.disposables=[]}};function Fe(y){console.log("Rxiv-Maker extension is now active!");let e=new se;y.subscriptions.push(e);let t=new Map,s=c.workspace.onDidOpenTextDocument(async l=>{let v=E.basename(l.fileName);if(l.fileName.endsWith(".rxm")||v==="01_MAIN.md"||v==="02_SUPPLEMENTARY_INFO.md"){let u=c.workspace.getWorkspaceFolder(l.uri);if(u){let p=u.uri.fsPath,S=t.get(p);S===void 0&&(S=await de(p),t.set(p,S)),S&&(await c.languages.setTextDocumentLanguage(l,"rxiv-markdown"),await e.validateDocument(l))}}});setTimeout(async()=>{for(let l of c.workspace.textDocuments){let v=E.basename(l.fileName);if(l.fileName.endsWith(".rxm")||v==="01_MAIN.md"||v==="02_SUPPLEMENTARY_INFO.md"){let u=c.workspace.getWorkspaceFolder(l.uri);if(u){let p=u.uri.fsPath,S=t.get(p);S===void 0&&(S=await de(p),t.set(p,S)),S&&(await c.languages.setTextDocumentLanguage(l,"rxiv-markdown"),await e.validateDocument(l))}}}},500);let i=c.languages.registerCompletionItemProvider({language:"rxiv-markdown"},{async provideCompletionItems(l,v){return l.lineAt(v).text.substr(0,v.character).endsWith("@")?(await le()).map(p=>{let S=new c.CompletionItem(p.key,c.CompletionItemKind.Reference);return S.detail=p.title||p.type,S.documentation=p.author||"",S.insertText=p.key,S}):[]}},"@"),n=c.languages.registerCompletionItemProvider({language:"rxiv-markdown"},{async provideCompletionItems(l,v){return l.lineAt(v).text.substr(0,v.character).endsWith("@")?(await ie()).map(p=>{let S=p.supplementary?`s${p.type}:`:`${p.type}:`,R=new c.CompletionItem(`${S}${p.label}`,c.CompletionItemKind.Reference);return R.detail=`${p.type.toUpperCase()} reference`,R.documentation=`Line ${p.line+1}${p.supplementary?" (Supplementary)":""}`,R.insertText=`${S}${p.label}`,R}):[]}},"@"),a=c.commands.registerCommand("rxiv-maker.insertCitation",async()=>{let l=await le();if(l.length===0){let u=[],p=c.window.activeTextEditor;if(p){let R=E.dirname(p.document.fileName);u.push(E.join(R,"03_REFERENCES.bib"))}if(c.workspace.workspaceFolders)for(let R of c.workspace.workspaceFolders){let M=E.join(R.uri.fsPath,"03_REFERENCES.bib");u.includes(M)||u.push(M)}let S=`No bibliography file (03_REFERENCES.bib) found.

Searched in:
${u.join(`
`)}

Please create 03_REFERENCES.bib in the same directory as your document.`;c.window.showWarningMessage(S);return}let v=l.map(u=>({label:u.key,description:u.title||u.type,detail:u.author||""})),h=await c.window.showQuickPick(v,{placeHolder:"Select citation to insert"});if(h){let u=c.window.activeTextEditor;if(u){let p=u.selection.active;await u.edit(S=>{S.insert(p,`@${h.label}`)})}}}),r=c.commands.registerCommand("rxiv-maker.insertFigureReference",async()=>{let v=(await ie()).filter(p=>p.type==="fig");if(v.length===0){c.window.showWarningMessage("No figure labels found in the document");return}let h=v.map(p=>({label:p.label,description:p.supplementary?"Supplementary Figure":"Figure",detail:`Line ${p.line+1}`})),u=await c.window.showQuickPick(h,{placeHolder:"Select figure reference to insert"});if(u){let p=c.window.activeTextEditor;if(p){let S=p.selection.active,R=v.find(M=>M.label===u.label)?.supplementary?"@sfig:":"@fig:";await p.edit(M=>{M.insert(S,`${R}${u.label}`)})}}}),o=c.commands.registerCommand("rxiv-maker.insertTableReference",async()=>{let v=(await ie()).filter(p=>p.type==="table");if(v.length===0){c.window.showWarningMessage("No table labels found in the document");return}let h=v.map(p=>({label:p.label,description:p.supplementary?"Supplementary Table":"Table",detail:`Line ${p.line+1}`})),u=await c.window.showQuickPick(h,{placeHolder:"Select table reference to insert"});if(u){let p=c.window.activeTextEditor;if(p){let S=p.selection.active,R=v.find(M=>M.label===u.label)?.supplementary?"@stable:":"@table:";await p.edit(M=>{M.insert(S,`${R}${u.label}`)})}}}),d=c.commands.registerCommand("rxiv-maker.insertEquationReference",async()=>{let v=(await ie()).filter(p=>p.type==="eq");if(v.length===0){c.window.showWarningMessage("No equation labels found in the document");return}let h=v.map(p=>({label:p.label,description:"Equation",detail:`Line ${p.line+1}`})),u=await c.window.showQuickPick(h,{placeHolder:"Select equation reference to insert"});if(u){let p=c.window.activeTextEditor;if(p){let S=p.selection.active;await p.edit(R=>{R.insert(S,`@eq:${u.label}`)})}}}),m,g=C(l=>(m&&m.exitStatus===void 0||(m=c.window.createTerminal({name:"rxiv-maker",cwd:l}),c.window.onDidCloseTerminal(v=>{v===m&&(m=void 0)})),m),"getRxivMakerTerminal"),b=c.commands.registerCommand("rxiv-maker.makeValidate",async()=>{let l=await oe();if(!l.success||!l.rxivMakerRoot){c.window.showErrorMessage(l.error||"Could not determine manuscript folder");return}let v=g(l.rxivMakerRoot);v.show(),v.sendText(`make validate MANUSCRIPT_PATH="${l.manuscriptPath}"`)}),f=c.commands.registerCommand("rxiv-maker.makePdf",async()=>{let l=await oe();if(!l.success||!l.rxivMakerRoot){c.window.showErrorMessage(l.error||"Could not determine manuscript folder");return}let v=g(l.rxivMakerRoot);v.show(),v.sendText(`make pdf MANUSCRIPT_PATH="${l.manuscriptPath}"`)}),P=c.commands.registerCommand("rxiv-maker.makeClean",async()=>{let l=await oe();if(!l.success||!l.rxivMakerRoot){c.window.showErrorMessage(l.error||"Could not determine manuscript folder");return}let v=g(l.rxivMakerRoot);v.show(),v.sendText(`make clean MANUSCRIPT_PATH="${l.manuscriptPath}"`)}),D=c.commands.registerCommand("rxiv-maker.installRxivMaker",async()=>{await c.window.withProgress({location:c.ProgressLocation.Notification,title:"Checking dependencies...",cancellable:!1},async l=>{let v=[{name:"git",command:"git --version"},{name:"make",command:"make --version"},{name:"python",command:B.platform()==="win32"?"python --version":"python3 --version"},{name:"latex",command:"pdflatex --version"}],h=[],u=0;for(let T of v){l.report({increment:25,message:`Checking ${T.name}...`});try{await new Promise((Z,Ce)=>{(0,me.exec)(T.command,{timeout:5e3},(W,Be,je)=>{W&&h.push(T.name),Z()})})}catch{h.push(T.name)}u++}if(h.length>0){let T={git:"Install Git from https://git-scm.com/",make:B.platform()==="win32"?"Install Visual Studio Build Tools or Git Bash":B.platform()==="darwin"?"Run: xcode-select --install":"Run: sudo apt install build-essential",python:"Install Python from https://python.org/",latex:B.platform()==="win32"?"Install MiKTeX from https://miktex.org/":B.platform()==="darwin"?"Install MacTeX from https://tug.org/mactex/":"Run: sudo apt install texlive-full"},Z=`Missing dependencies: ${h.join(", ")}

Installation instructions:
${h.map(W=>`\u2022 ${W}: ${T[W]}`).join(`
`)}`;if(await c.window.showErrorMessage(`Cannot install rxiv-maker. Missing dependencies: ${h.join(", ")}`,"Show Instructions","Cancel")==="Show Instructions"){let W=await c.workspace.openTextDocument({content:Z,language:"markdown"});await c.window.showTextDocument(W)}return}if(await c.window.showInformationMessage(`All required dependencies are installed. Would you like to clone the rxiv-maker repository and run setup?

Note: The setup process will automatically create a Python virtual environment (.venv) if needed.`,{modal:!0},"Yes, install rxiv-maker","No, cancel")!=="Yes, install rxiv-maker")return;let R=[];if(c.workspace.workspaceFolders)for(let T of c.workspace.workspaceFolders)R.push({label:`$(folder) ${E.basename(T.uri.fsPath)}`,description:T.uri.fsPath,detail:"Install in this workspace folder"});let M=B.homedir(),Pe=[{path:E.join(M,"Documents","GitHub"),label:"Documents/GitHub"},{path:E.join(M,"Documents"),label:"Documents"},{path:E.join(M,"Desktop"),label:"Desktop"},{path:M,label:"Home directory"}];for(let T of Pe)R.some(Z=>Z.description===T.path)||R.push({label:`$(home) ${T.label}`,description:T.path,detail:"Common installation location"});R.push({label:"$(edit) Custom path...",description:"custom",detail:"Enter a custom installation path"});let ae=await c.window.showQuickPick(R,{placeHolder:"Select where to install rxiv-maker",matchOnDescription:!0});if(!ae)return;let q;if(ae.description==="custom"){let T=await c.window.showInputBox({prompt:"Enter custom directory where you want to install rxiv-maker",value:E.join(M,"Documents","GitHub"),validateInput:C(Z=>{if(!Z)return"Installation directory is required"},"validateInput")});if(!T)return;q=T}else q=ae.description;if(!q)return;let re=q.startsWith("~")?E.join(B.homedir(),q.slice(1)):q;try{await $.promises.mkdir(re,{recursive:!0})}catch(T){c.window.showErrorMessage(`Failed to create installation directory: ${re}
${T}`);return}let _=c.window.createTerminal({name:"rxiv-maker-install",cwd:re});_.show(),B.platform()==="win32"?(_.sendText("echo Installing rxiv-maker..."),_.sendText("git clone https://github.com/HenriquesLab/rxiv-maker.git"),_.sendText("cd rxiv-maker"),_.sendText("make setup"),_.sendText("echo rxiv-maker installation complete!")):(_.sendText('echo "Installing rxiv-maker..."'),_.sendText("git clone https://github.com/HenriquesLab/rxiv-maker.git"),_.sendText("cd rxiv-maker"),_.sendText("make setup"),_.sendText('echo "rxiv-maker installation complete!"'),_.sendText('echo "You can now create manuscripts using the rxiv-maker framework."'))})}),O=c.commands.registerCommand("rxiv-maker.makeAddBibliography",async()=>{let l=await oe();if(!l.success||!l.rxivMakerRoot){c.window.showErrorMessage(l.error||"Could not determine manuscript folder");return}let v=await c.window.showInputBox({prompt:"Enter DOI to add to bibliography",placeHolder:"e.g., 10.1000/example or https://doi.org/10.1000/example",validateInput:C(p=>{if(!p)return"DOI is required";if(!/^(https?:\/\/)?(dx\.)?doi\.org\/10\.|^10\./.test(p))return"Please enter a valid DOI (e.g., 10.1000/example)"},"validateInput")});if(!v)return;let h=v.replace(/^(https?:\/\/)?(dx\.)?doi\.org\//,""),u=g(l.rxivMakerRoot);u.show(),u.sendText(`make add-bibliography ${h} MANUSCRIPT_PATH="${l.manuscriptPath}"`)}),H=c.commands.registerCommand("rxiv-maker.insertBlindtext",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active;await l.edit(h=>{h.insert(v,"{{blindtext}}")})}}),Y=c.commands.registerCommand("rxiv-maker.insertBlindtextParagraph",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active;await l.edit(h=>{h.insert(v,"{{Blindtext}}")})}}),z=c.commands.registerCommand("rxiv-maker.insertPythonBlock",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active,h=l.selection;if(h.isEmpty){let u=new c.SnippetString(`{{py:
$1
}}`);await l.insertSnippet(u,v)}else{let u=l.document.getText(h);await l.edit(p=>{p.replace(h,`{{py:
${u}
}}`)})}}}),pe=c.commands.registerCommand("rxiv-maker.insertPythonInline",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active,h=l.selection;if(h.isEmpty){let u=new c.SnippetString("{py: $1}");await l.insertSnippet(u,v)}else{let u=l.document.getText(h);await l.edit(p=>{p.replace(h,`{py: ${u}}`)})}}}),ve=c.commands.registerCommand("rxiv-maker.insertPythonImport",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active,h=[{label:"datetime",detail:"Date and time operations"},{label:"math",detail:"Mathematical functions"},{label:"statistics",detail:"Statistical functions"},{label:"json",detail:"JSON encoder/decoder"},{label:"csv",detail:"CSV file reading/writing"},{label:"random",detail:"Generate random numbers"},{label:"collections",detail:"Specialized container datatypes"},{label:"itertools",detail:"Iterator building blocks"},{label:"functools",detail:"Higher-order functions and operations on functions"}],u=await c.window.showQuickPick(h,{placeHolder:"Select a module to import (or type a custom module name)"});if(u){let p=new c.SnippetString(`{py:import ${u.label}}`);await l.insertSnippet(p,v)}else{let p=await c.window.showInputBox({prompt:"Enter module name to import",placeHolder:"e.g., datetime"});if(p){let S=new c.SnippetString(`{py:import ${p}}`);await l.insertSnippet(S,v)}}}}),ge=c.commands.registerCommand("rxiv-maker.insertPythonFromImport",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active,h=new c.SnippetString("{py:from ${1:module} import ${2:item}}");await l.insertSnippet(h,v)}}),ue=c.commands.registerCommand("rxiv-maker.insertPythonSet",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active,h=new c.SnippetString('{py:set ${1:variable_name} = ${2:"value"}}');await l.insertSnippet(h,v)}}),he=c.commands.registerCommand("rxiv-maker.insertPythonGet",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active,h=new c.SnippetString("{py:get ${1:variable_name}}");await l.insertSnippet(h,v)}}),fe=c.commands.registerCommand("rxiv-maker.insertPythonContext",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active,h=new c.SnippetString('{py:context="${1:context_name}" ${2:code}}');await l.insertSnippet(h,v)}}),we=c.commands.registerCommand("rxiv-maker.insertPythonFormat",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active,h=[{label:"number,2",detail:"Format number with 2 decimal places"},{label:"percentage,1",detail:"Format as percentage with 1 decimal place"},{label:"currency",detail:"Format as currency"},{label:"scientific,3",detail:"Format in scientific notation with 3 decimal places"},{label:"date,%Y-%m-%d",detail:"Format date as YYYY-MM-DD"},{label:"date,%B %d, %Y",detail:'Format date as "Month DD, YYYY"'},{label:"comma",detail:"Add thousand separators"}],u=await c.window.showQuickPick(h,{placeHolder:"Select a format specification"});if(u){let p=new c.SnippetString(`{py:format="${u.label}" \${1:expression}}`);await l.insertSnippet(p,v)}else{let p=new c.SnippetString('{py:format="${1:format_spec}" ${2:expression}}');await l.insertSnippet(p,v)}}}),ye=c.commands.registerCommand("rxiv-maker.insertPythonGlobal",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active,h=new c.SnippetString('{py:global ${1:variable_name} = ${2:"value"}}');await l.insertSnippet(h,v)}}),be=c.commands.registerCommand("rxiv-maker.insertPythonIf",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active,h=new c.SnippetString('{py:if ${1:condition}: "${2:true_value}" else: "${3:false_value}"}');await l.insertSnippet(h,v)}}),xe=c.commands.registerCommand("rxiv-maker.insertTexBlock",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active,h=l.selection;if(h.isEmpty){let u=new c.SnippetString(`{{tex:
$1
}}`);await l.insertSnippet(u,v)}else{let u=l.document.getText(h);await l.edit(p=>{p.replace(h,`{{tex:
${u}
}}`)})}}}),ke=c.commands.registerCommand("rxiv-maker.insertTexInline",async()=>{let l=c.window.activeTextEditor;if(l){let v=l.selection.active,h=l.selection;if(h.isEmpty){let u=new c.SnippetString("{{tex: $1}}");await l.insertSnippet(u,v)}else{let u=l.document.getText(h);await l.edit(p=>{p.replace(h,`{{tex: ${u}}}`)})}}}),De=c.commands.registerCommand("rxiv-maker.validateDocument",async()=>{let l=c.window.activeTextEditor;l?(await e.validateDocument(l.document),c.window.showInformationMessage("Document validation completed")):c.window.showWarningMessage("No active document to validate")}),Ee=c.commands.registerCommand("rxiv-maker.clearDiagnostics",()=>{e.clearAllDiagnostics(),c.window.showInformationMessage("All diagnostics cleared")}),Se=c.commands.registerCommand("rxiv-maker.validateAllDocuments",async()=>{await e.validateAllOpenDocuments(),c.window.showInformationMessage("All documents validated")});y.subscriptions.push(s,i,n,a,r,o,d,D,b,f,P,O,H,Y,z,pe,ve,ge,ue,he,fe,we,ye,be,xe,ke,De,Ee,Se)}C(Fe,"activate");async function le(){let y=[],e=c.window.activeTextEditor;if(e){let s=E.dirname(e.document.fileName),i=E.join(s,"03_REFERENCES.bib");y.push(i),console.log("Rxiv-Maker: Searching for bibliography in current document directory:",i)}if(c.workspace.workspaceFolders)for(let s of c.workspace.workspaceFolders){let i=E.join(s.uri.fsPath,"03_REFERENCES.bib");y.includes(i)||(y.push(i),console.log("Rxiv-Maker: Searching for bibliography in workspace folder:",i))}let t=null;for(let s of y)try{await $.promises.access(s,$.constants.F_OK|$.constants.R_OK),t=s,console.log("Rxiv-Maker: Found bibliography file at:",t);break}catch{console.log("Rxiv-Maker: Bibliography not found at:",s)}if(!t)return console.log("Rxiv-Maker: No bibliography file found in any search location"),[];try{let s=await $.promises.readFile(t,"utf8"),i=[],n=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,a;for(;(a=n.exec(s))!==null;){let r=a[1],o=a[2],d=a.index,m=Ne(s,d),g=s.substring(d,m),b=g.match(/title\s*=\s*[{"](.*?)["}]/),f=g.match(/author\s*=\s*[{"](.*?)["}]/),P=g.match(/year\s*=\s*[{"](.*?)["}]/);i.push({key:o,type:r,title:b?.[1],author:f?.[1],year:P?.[1]})}return i}catch(s){return s.code==="ENOENT"?[]:(console.error("Error parsing bibliography:",s),[])}}C(le,"getBibEntries");async function ie(){let y=[],e=[],t=c.window.activeTextEditor;if(t){let s=E.dirname(t.document.fileName);e.push(E.join(s,"01_MAIN.md")),e.push(E.join(s,"02_SUPPLEMENTARY_INFO.md"))}if(c.workspace.workspaceFolders)for(let s of c.workspace.workspaceFolders){let i=E.join(s.uri.fsPath,"01_MAIN.md"),n=E.join(s.uri.fsPath,"02_SUPPLEMENTARY_INFO.md");e.includes(i)||e.push(i),e.includes(n)||e.push(n)}for(let s of e)try{let n=(await $.promises.readFile(s,"utf8")).split(`
`),a=s.includes("02_SUPPLEMENTARY_INFO");for(let r=0;r<n.length;r++){let o=n[r],d=/\{#(s?)((fig|table|eq|snote)):([a-zA-Z0-9_-]+)(?:\s[^}]*)?\}/g,m;for(;(m=d.exec(o))!==null;){let g=m[1]==="s"||a,b=m[2],f=m[4];y.push({type:b,label:f,line:r,supplementary:g})}}}catch{continue}return y}C(ie,"getDocumentReferences");function Ne(y,e){let t=0,s=!1,i="";for(let n=e;n<y.length;n++){let a=y[n];if(s)a===i&&y[n-1]!=="\\"&&(s=!1);else if(a==='"'||a==="'")s=!0,i=a;else if(a==="{")t++;else if(a==="}"&&(t--,t===0))return n+1}return y.length}C(Ne,"findMatchingBrace");async function de(y){try{let e=["00_CONFIG.yml","01_MAIN.rxm","01_MAIN.md","03_REFERENCES.bib"],t=["02_SUPPLEMENTARY_INFO.rxm","02_SUPPLEMENTARY_INFO.md"];return(await Promise.all(e.map(async n=>{try{return await $.promises.access(E.join(y,n)),!0}catch{return!1}}))).filter(Boolean).length>=2}catch(e){return console.error("Error checking rxiv-maker project:",e),!1}}C(de,"isRxivMakerProject");async function oe(){let y=c.window.activeTextEditor;if(!y)return{success:!1,error:"No active document. Please open a file in your manuscript folder."};let e=y.document.fileName,t=E.dirname(e),s=["00_CONFIG.yml","01_MAIN.md","01_MAIN.rxm","03_REFERENCES.bib"],i=await Promise.all(s.map(async d=>{try{return await $.promises.access(E.join(t,d)),!0}catch{return!1}})),n;if(i.some(d=>d))n=t;else{let d=c.workspace.workspaceFolders;if(!d)return{success:!1,error:"No workspace folder found. Please open the manuscript folder in VS Code."};let m=null;for(let g of d){let b=g.uri.fsPath;if((await Promise.all(s.map(async P=>{try{return await $.promises.access(E.join(b,P)),!0}catch{return!1}}))).some(P=>P)){m=b;break}}if(!m)return{success:!1,error:"No manuscript folder found. Please ensure your workspace contains a folder with rxiv-maker files (00_CONFIG.yml, 01_MAIN.md, etc.)"};n=m}let a=null,r=n;for(;r!==E.dirname(r);){try{await $.promises.access(E.join(r,"Makefile"));let d=await $.promises.readFile(E.join(r,"Makefile"),"utf8");if(d.includes("Rxiv-Maker")||d.includes("MANUSCRIPT_PATH")){a=r;break}}catch{}r=E.dirname(r)}return a?{success:!0,manuscriptPath:E.relative(a,n)||".",rxivMakerRoot:a}:{success:!1,error:"Could not find rxiv-maker root directory (no Makefile found). Please ensure you have the rxiv-maker repository cloned and accessible."}}C(oe,"findManuscriptFolder");function Le(){}C(Le,"deactivate");0&&(module.exports={activate,deactivate});
