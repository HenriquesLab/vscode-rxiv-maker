"use strict";var Z=Object.create;var $=Object.defineProperty;var J=Object.getOwnPropertyDescriptor;var ee=Object.getOwnPropertyNames;var te=Object.getPrototypeOf,oe=Object.prototype.hasOwnProperty;var E=(r,i)=>$(r,"name",{value:i,configurable:!0});var ne=(r,i)=>{for(var c in i)$(r,c,{get:i[c],enumerable:!0})},L=(r,i,c,a)=>{if(i&&typeof i=="object"||typeof i=="function")for(let d of ee(i))!oe.call(r,d)&&d!==c&&$(r,d,{get:()=>i[d],enumerable:!(a=J(i,d))||a.enumerable});return r};var _=(r,i,c)=>(c=r!=null?Z(te(r)):{},L(i||!r||!r.__esModule?$(c,"default",{value:r,enumerable:!0}):c,r)),se=r=>L($({},"__esModule",{value:!0}),r);var ce={};ne(ce,{activate:()=>ie,deactivate:()=>ae});module.exports=se(ce);var e=_(require("vscode")),C=_(require("fs")),l=_(require("path")),U=require("child_process"),R=_(require("os"));function ie(r){console.log("Rxiv-Maker extension is now active!");let i=new Map,c=e.workspace.onDidOpenTextDocument(async t=>{let s=l.basename(t.fileName);if(t.fileName.endsWith(".rxm")||s==="01_MAIN.md"||s==="02_SUPPLEMENTARY_INFO.md"){let n=e.workspace.getWorkspaceFolder(t.uri);if(n){let o=n.uri.fsPath,h=i.get(o);h===void 0&&(h=await H(o),i.set(o,h)),h&&await e.languages.setTextDocumentLanguage(t,"rxiv-markdown")}}});setTimeout(async()=>{for(let t of e.workspace.textDocuments){let s=l.basename(t.fileName);if(t.fileName.endsWith(".rxm")||s==="01_MAIN.md"||s==="02_SUPPLEMENTARY_INFO.md"){let n=e.workspace.getWorkspaceFolder(t.uri);if(n){let o=n.uri.fsPath,h=i.get(o);h===void 0&&(h=await H(o),i.set(o,h)),h&&await e.languages.setTextDocumentLanguage(t,"rxiv-markdown")}}}},500);let a=e.languages.registerCompletionItemProvider({language:"rxiv-markdown"},new q,"@"),d=e.languages.registerCompletionItemProvider({language:"rxiv-markdown"},new O,"@"),f=e.commands.registerCommand("rxiv-maker.insertCitation",async()=>{let t=await W();if(t.length===0){let n=[],o=e.window.activeTextEditor;if(o){let y=l.dirname(o.document.fileName);n.push(l.join(y,"03_REFERENCES.bib"))}if(e.workspace.workspaceFolders)for(let y of e.workspace.workspaceFolders){let b=l.join(y.uri.fsPath,"03_REFERENCES.bib");n.includes(b)||n.push(b)}let h=`No bibliography file (03_REFERENCES.bib) found.

Searched in:
${n.join(`
`)}

Please create 03_REFERENCES.bib in the same directory as your document.`;e.window.showWarningMessage(h);return}let s=t.map(n=>({label:n.key,description:n.title||n.type,detail:n.author||""})),m=await e.window.showQuickPick(s,{placeHolder:"Select citation to insert"});if(m){let n=e.window.activeTextEditor;if(n){let o=n.selection.active;await n.edit(h=>{h.insert(o,`@${m.label}`)})}}}),p=e.commands.registerCommand("rxiv-maker.insertFigureReference",async()=>{let s=(await A()).filter(o=>o.type==="fig");if(s.length===0){e.window.showWarningMessage("No figure labels found in the document");return}let m=s.map(o=>({label:o.label,description:o.supplementary?"Supplementary Figure":"Figure",detail:`Line ${o.line+1}`})),n=await e.window.showQuickPick(m,{placeHolder:"Select figure reference to insert"});if(n){let o=e.window.activeTextEditor;if(o){let h=o.selection.active,y=s.find(b=>b.label===n.label)?.supplementary?"@sfig:":"@fig:";await o.edit(b=>{b.insert(h,`${y}${n.label}`)})}}}),w=e.commands.registerCommand("rxiv-maker.insertTableReference",async()=>{let s=(await A()).filter(o=>o.type==="table");if(s.length===0){e.window.showWarningMessage("No table labels found in the document");return}let m=s.map(o=>({label:o.label,description:o.supplementary?"Supplementary Table":"Table",detail:`Line ${o.line+1}`})),n=await e.window.showQuickPick(m,{placeHolder:"Select table reference to insert"});if(n){let o=e.window.activeTextEditor;if(o){let h=o.selection.active,y=s.find(b=>b.label===n.label)?.supplementary?"@stable:":"@table:";await o.edit(b=>{b.insert(h,`${y}${n.label}`)})}}}),k=e.commands.registerCommand("rxiv-maker.insertEquationReference",async()=>{let s=(await A()).filter(o=>o.type==="eq");if(s.length===0){e.window.showWarningMessage("No equation labels found in the document");return}let m=s.map(o=>({label:o.label,description:"Equation",detail:`Line ${o.line+1}`})),n=await e.window.showQuickPick(m,{placeHolder:"Select equation reference to insert"});if(n){let o=e.window.activeTextEditor;if(o){let h=o.selection.active;await o.edit(y=>{y.insert(h,`@eq:${n.label}`)})}}}),u,x=E(t=>(u&&u.exitStatus===void 0||(u=e.window.createTerminal({name:"rxiv-maker",cwd:t}),e.window.onDidCloseTerminal(s=>{s===u&&(u=void 0)})),u),"getRxivMakerTerminal"),v=e.commands.registerCommand("rxiv-maker.makeValidate",async()=>{let t=await D();if(!t.success||!t.rxivMakerRoot){e.window.showErrorMessage(t.error||"Could not determine manuscript folder");return}let s=x(t.rxivMakerRoot);s.show(),s.sendText(`make validate MANUSCRIPT_PATH="${t.manuscriptPath}"`)}),P=e.commands.registerCommand("rxiv-maker.makePdf",async()=>{let t=await D();if(!t.success||!t.rxivMakerRoot){e.window.showErrorMessage(t.error||"Could not determine manuscript folder");return}let s=x(t.rxivMakerRoot);s.show(),s.sendText(`make pdf MANUSCRIPT_PATH="${t.manuscriptPath}"`)}),I=e.commands.registerCommand("rxiv-maker.makeClean",async()=>{let t=await D();if(!t.success||!t.rxivMakerRoot){e.window.showErrorMessage(t.error||"Could not determine manuscript folder");return}let s=x(t.rxivMakerRoot);s.show(),s.sendText(`make clean MANUSCRIPT_PATH="${t.manuscriptPath}"`)}),M=e.commands.registerCommand("rxiv-maker.installRxivMaker",async()=>{await e.window.withProgress({location:e.ProgressLocation.Notification,title:"Checking dependencies...",cancellable:!1},async t=>{let s=[{name:"git",command:"git --version"},{name:"make",command:"make --version"},{name:"python",command:R.platform()==="win32"?"python --version":"python3 --version"},{name:"latex",command:"pdflatex --version"}],m=[],n=0;for(let g of s){t.report({increment:25,message:`Checking ${g.name}...`});try{await new Promise((N,z)=>{(0,U.exec)(g.command,{timeout:5e3},(S,le,de)=>{S&&m.push(g.name),N()})})}catch{m.push(g.name)}n++}if(m.length>0){let g={git:"Install Git from https://git-scm.com/",make:R.platform()==="win32"?"Install Visual Studio Build Tools or Git Bash":R.platform()==="darwin"?"Run: xcode-select --install":"Run: sudo apt install build-essential",python:"Install Python from https://python.org/",latex:R.platform()==="win32"?"Install MiKTeX from https://miktex.org/":R.platform()==="darwin"?"Install MacTeX from https://tug.org/mactex/":"Run: sudo apt install texlive-full"},N=`Missing dependencies: ${m.join(", ")}

Installation instructions:
${m.map(S=>`\u2022 ${S}: ${g[S]}`).join(`
`)}`;if(await e.window.showErrorMessage(`Cannot install rxiv-maker. Missing dependencies: ${m.join(", ")}`,"Show Instructions","Cancel")==="Show Instructions"){let S=await e.workspace.openTextDocument({content:N,language:"markdown"});await e.window.showTextDocument(S)}return}if(await e.window.showInformationMessage(`All required dependencies are installed. Would you like to clone the rxiv-maker repository and run setup?

Note: The setup process will automatically create a Python virtual environment (.venv) if needed.`,{modal:!0},"Yes, install rxiv-maker","No, cancel")!=="Yes, install rxiv-maker")return;let y=[];if(e.workspace.workspaceFolders)for(let g of e.workspace.workspaceFolders)y.push({label:`$(folder) ${l.basename(g.uri.fsPath)}`,description:g.uri.fsPath,detail:"Install in this workspace folder"});let b=R.homedir(),X=[{path:l.join(b,"Documents","GitHub"),label:"Documents/GitHub"},{path:l.join(b,"Documents"),label:"Documents"},{path:l.join(b,"Desktop"),label:"Desktop"},{path:b,label:"Home directory"}];for(let g of X)y.some(N=>N.description===g.path)||y.push({label:`$(home) ${g.label}`,description:g.path,detail:"Common installation location"});y.push({label:"$(edit) Custom path...",description:"custom",detail:"Enter a custom installation path"});let j=await e.window.showQuickPick(y,{placeHolder:"Select where to install rxiv-maker",matchOnDescription:!0});if(!j)return;let F;if(j.description==="custom"){let g=await e.window.showInputBox({prompt:"Enter custom directory where you want to install rxiv-maker",value:l.join(b,"Documents","GitHub"),validateInput:E(N=>{if(!N)return"Installation directory is required"},"validateInput")});if(!g)return;F=g}else F=j.description;if(!F)return;let B=F.startsWith("~")?l.join(R.homedir(),F.slice(1)):F;try{await C.promises.mkdir(B,{recursive:!0})}catch(g){e.window.showErrorMessage(`Failed to create installation directory: ${B}
${g}`);return}let T=e.window.createTerminal({name:"rxiv-maker-install",cwd:B});T.show(),R.platform()==="win32"?(T.sendText("echo Installing rxiv-maker..."),T.sendText("git clone https://github.com/HenriquesLab/rxiv-maker.git"),T.sendText("cd rxiv-maker"),T.sendText("make setup"),T.sendText("echo rxiv-maker installation complete!")):(T.sendText('echo "Installing rxiv-maker..."'),T.sendText("git clone https://github.com/HenriquesLab/rxiv-maker.git"),T.sendText("cd rxiv-maker"),T.sendText("make setup"),T.sendText('echo "rxiv-maker installation complete!"'),T.sendText('echo "You can now create manuscripts using the rxiv-maker framework."'))})}),Y=e.commands.registerCommand("rxiv-maker.makeAddBibliography",async()=>{let t=await D();if(!t.success||!t.rxivMakerRoot){e.window.showErrorMessage(t.error||"Could not determine manuscript folder");return}let s=await e.window.showInputBox({prompt:"Enter DOI to add to bibliography",placeHolder:"e.g., 10.1000/example or https://doi.org/10.1000/example",validateInput:E(o=>{if(!o)return"DOI is required";if(!/^(https?:\/\/)?(dx\.)?doi\.org\/10\.|^10\./.test(o))return"Please enter a valid DOI (e.g., 10.1000/example)"},"validateInput")});if(!s)return;let m=s.replace(/^(https?:\/\/)?(dx\.)?doi\.org\//,""),n=x(t.rxivMakerRoot);n.show(),n.sendText(`make add-bibliography ${m} MANUSCRIPT_PATH="${t.manuscriptPath}"`)}),G=e.commands.registerCommand("rxiv-maker.insertBlindtext",async()=>{let t=e.window.activeTextEditor;if(t){let s=t.selection.active;await t.edit(m=>{m.insert(s,"{{blindtext}}")})}}),Q=e.commands.registerCommand("rxiv-maker.insertBlindtextParagraph",async()=>{let t=e.window.activeTextEditor;if(t){let s=t.selection.active;await t.edit(m=>{m.insert(s,"{{Blindtext}}")})}}),K=e.commands.registerCommand("rxiv-maker.insertPythonBlock",async()=>{let t=e.window.activeTextEditor;if(t){let s=t.selection.active,m=t.selection;if(m.isEmpty){let n=new e.SnippetString(`{{py:
$1
}}`);await t.insertSnippet(n,s)}else{let n=t.document.getText(m);await t.edit(o=>{o.replace(m,`{{py:
${n}
}}`)})}}}),V=e.commands.registerCommand("rxiv-maker.insertPythonInline",async()=>{let t=e.window.activeTextEditor;if(t){let s=t.selection.active,m=t.selection;if(m.isEmpty){let n=new e.SnippetString("{py: $1}");await t.insertSnippet(n,s)}else{let n=t.document.getText(m);await t.edit(o=>{o.replace(m,`{py: ${n}}`)})}}});r.subscriptions.push(c,a,d,f,p,w,k,M,v,P,I,Y,G,Q,K,V)}E(ie,"activate");var q=class{static{E(this,"CitationCompletionProvider")}async provideCompletionItems(i,c,a,d){let p=i.lineAt(c).text.substring(0,c.character);return!p.endsWith("@")&&!p.match(/\[@$/)?[]:(await W()).map(k=>{let u=new e.CompletionItem(k.key,e.CompletionItemKind.Reference);return u.detail=k.title||k.type,u.documentation=new e.MarkdownString(`**${k.type}**

${k.author||""}

${k.year||""}`),u.insertText=k.key,u})}},O=class{static{E(this,"ReferenceCompletionProvider")}async provideCompletionItems(i,c,a,d){let p=i.lineAt(c).text.substring(0,c.character);if(!p.match(/@s?fig:$|@s?table:$|@eq:$|@snote:$/))return[];let w=await A(),k=p.match(/@(s?)(fig|table|eq|snote):$/)?.[2],u=p.includes("@s");return k?w.filter(v=>v.type===k&&(u?v.supplementary:!v.supplementary)).map(v=>{let P=new e.CompletionItem(v.label,e.CompletionItemKind.Reference);return P.detail=`${v.supplementary?"Supplementary ":""}${v.type}`,P.documentation=new e.MarkdownString(`Line ${v.line+1}`),P.insertText=v.label,P}):[]}};async function W(){let r=[],i=e.window.activeTextEditor;if(i){let a=l.dirname(i.document.fileName),d=l.join(a,"03_REFERENCES.bib");r.push(d),console.log("Rxiv-Maker: Searching for bibliography in current document directory:",d)}if(e.workspace.workspaceFolders)for(let a of e.workspace.workspaceFolders){let d=l.join(a.uri.fsPath,"03_REFERENCES.bib");r.includes(d)||(r.push(d),console.log("Rxiv-Maker: Searching for bibliography in workspace folder:",d))}let c=null;for(let a of r)try{await C.promises.access(a,C.constants.F_OK|C.constants.R_OK),c=a,console.log("Rxiv-Maker: Found bibliography file at:",c);break}catch{console.log("Rxiv-Maker: Bibliography not found at:",a)}if(!c)return console.log("Rxiv-Maker: No bibliography file found in any search location"),[];try{let a=await C.promises.readFile(c,"utf8"),d=[],f=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,p;for(;(p=f.exec(a))!==null;){let w=p[1],k=p[2],u=p.index,x=re(a,u),v=a.substring(u,x),P=v.match(/title\s*=\s*[{"](.*?)["}]/),I=v.match(/author\s*=\s*[{"](.*?)["}]/),M=v.match(/year\s*=\s*[{"](.*?)["}]/);d.push({key:k,type:w,title:P?.[1],author:I?.[1],year:M?.[1]})}return d}catch(a){return a.code==="ENOENT"?[]:(console.error("Error parsing bibliography:",a),[])}}E(W,"getBibEntries");async function A(){let r=[],i=[],c=e.window.activeTextEditor;if(c){let a=l.dirname(c.document.fileName);i.push(l.join(a,"01_MAIN.md")),i.push(l.join(a,"02_SUPPLEMENTARY_INFO.md"))}if(e.workspace.workspaceFolders)for(let a of e.workspace.workspaceFolders){let d=l.join(a.uri.fsPath,"01_MAIN.md"),f=l.join(a.uri.fsPath,"02_SUPPLEMENTARY_INFO.md");i.includes(d)||i.push(d),i.includes(f)||i.push(f)}for(let a of i)try{let f=(await C.promises.readFile(a,"utf8")).split(`
`),p=a.includes("02_SUPPLEMENTARY_INFO");for(let w=0;w<f.length;w++){let k=f[w],u=/\{#(s?)((fig|table|eq|snote)):([a-zA-Z0-9_-]+)(?:\s[^}]*)?\}/g,x;for(;(x=u.exec(k))!==null;){let v=x[1]==="s"||p,P=x[2],I=x[4];r.push({type:P,label:I,line:w,supplementary:v})}}}catch{continue}return r}E(A,"getDocumentReferences");function re(r,i){let c=0,a=!1,d="";for(let f=i;f<r.length;f++){let p=r[f];if(a)p===d&&r[f-1]!=="\\"&&(a=!1);else if(p==='"'||p==="'")a=!0,d=p;else if(p==="{")c++;else if(p==="}"&&(c--,c===0))return f+1}return r.length}E(re,"findMatchingBrace");async function H(r){try{let i=["00_CONFIG.yml","01_MAIN.rxm","01_MAIN.md","03_REFERENCES.bib"],c=["02_SUPPLEMENTARY_INFO.rxm","02_SUPPLEMENTARY_INFO.md"];return(await Promise.all(i.map(async f=>{try{return await C.promises.access(l.join(r,f)),!0}catch{return!1}}))).filter(Boolean).length>=2}catch(i){return console.error("Error checking rxiv-maker project:",i),!1}}E(H,"isRxivMakerProject");async function D(){let r=e.window.activeTextEditor;if(!r)return{success:!1,error:"No active document. Please open a file in your manuscript folder."};let i=r.document.fileName,c=l.dirname(i),a=["00_CONFIG.yml","01_MAIN.md","01_MAIN.rxm","03_REFERENCES.bib"],d=await Promise.all(a.map(async u=>{try{return await C.promises.access(l.join(c,u)),!0}catch{return!1}})),f;if(d.some(u=>u))f=c;else{let u=e.workspace.workspaceFolders;if(!u)return{success:!1,error:"No workspace folder found. Please open the manuscript folder in VS Code."};let x=null;for(let v of u){let P=v.uri.fsPath;if((await Promise.all(a.map(async M=>{try{return await C.promises.access(l.join(P,M)),!0}catch{return!1}}))).some(M=>M)){x=P;break}}if(!x)return{success:!1,error:"No manuscript folder found. Please ensure your workspace contains a folder with rxiv-maker files (00_CONFIG.yml, 01_MAIN.md, etc.)"};f=x}let p=null,w=f;for(;w!==l.dirname(w);){try{await C.promises.access(l.join(w,"Makefile"));let u=await C.promises.readFile(l.join(w,"Makefile"),"utf8");if(u.includes("Rxiv-Maker")||u.includes("MANUSCRIPT_PATH")){p=w;break}}catch{}w=l.dirname(w)}return p?{success:!0,manuscriptPath:l.relative(p,f)||".",rxivMakerRoot:p}:{success:!1,error:"Could not find rxiv-maker root directory (no Makefile found). Please ensure you have the rxiv-maker repository cloned and accessible."}}E(D,"findManuscriptFolder");function ae(){}E(ae,"deactivate");0&&(module.exports={activate,deactivate});
