"use strict";var Re=Object.create;var Y=Object.defineProperty;var Te=Object.getOwnPropertyDescriptor;var Me=Object.getOwnPropertyNames;var Ie=Object.getPrototypeOf,$e=Object.prototype.hasOwnProperty;var P=(y,e)=>Y(y,"name",{value:e,configurable:!0});var Ae=(y,e)=>{for(var t in e)Y(y,t,{get:e[t],enumerable:!0})},ce=(y,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of Me(e))!$e.call(y,i)&&i!==t&&Y(y,i,{get:()=>e[i],enumerable:!(n=Te(e,i))||n.enumerable});return y};var I=(y,e,t)=>(t=y!=null?Re(Ie(y)):{},ce(e||!y||!y.__esModule?Y(t,"default",{value:y,enumerable:!0}):t,y)),_e=y=>ce(Y({},"__esModule",{value:!0}),y);var Oe={};Ae(Oe,{activate:()=>Fe,deactivate:()=>Le});module.exports=_e(Oe);var r=I(require("vscode")),A=I(require("fs")),k=I(require("path")),me=require("child_process"),O=I(require("os"));var U=I(require("vscode"));var F=I(require("vscode")),W=I(require("fs")),X=I(require("path"));var K=class{static{P(this,"CitationValidator")}bibEntriesCache=new Map;CACHE_DURATION=5e3;async validate(e){let t=[],i=e.getText().split(`
`);try{let s=await this.getBibEntries(e),a=new Set(s.map(o=>o.key)),l=!1;for(let o=0;o<i.length;o++){let d=i[o];if(d.trim().startsWith("```")){l=!l;continue}if(l)continue;let m=d.matchAll(/(?<!\\)\[(@[^\]]+)\]/g);for(let b of m){if(this.isPositionInCodeSpan(d,b.index))continue;let h=b[1].match(/(?<!\\)@([a-zA-Z0-9_-]+)/g);if(h)for(let S of h){let C=S.substring(1),B=d.indexOf(S,b.index);this.validateCitationKey(C,o,d,B,a,t)}}let u=d.matchAll(/(?<!\\)@(?!fig:|eq:|table:|tbl:|sfig:|stable:|snote:)([a-zA-Z0-9_-]+)/g);for(let b of u){if(this.isPositionInCodeSpan(d,b.index))continue;let h=b[1];h&&this.isValidCitationKey(h)&&this.validateCitationKey(h,o,d,b.index,a,t)}}}catch{let a=new F.Diagnostic(new F.Range(0,0,0,0),"No bibliography file (03_REFERENCES.bib) found. Citation validation disabled.",F.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="missing-bibliography",t.push(a)}return t}validateCitationKey(e,t,n,i,s,a){if(!s.has(e)){let l=n.indexOf("@"+e,i),o=new F.Range(t,l,t,l+e.length+1),d=new F.Diagnostic(o,`Citation '@${e}' not found in bibliography`,F.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="unknown-citation",a.push(d)}}isValidCitationKey(e){return/^[a-zA-Z0-9_-]+$/.test(e)}isPositionInCodeSpan(e,t){let n=[],i=-1;for(let s=0;s<e.length;s++)e[s]==="`"&&(i===-1?i=s:(n.push({start:i,end:s}),i=-1));for(let s of n)if(t>=s.start&&t<=s.end)return!0;return!1}async getBibEntries(e){let t=this.getBibliographySearchPaths(e),n=null;for(let a of t)try{await W.promises.access(a,W.constants.F_OK|W.constants.R_OK),n=a;break}catch{}if(!n)throw new Error("No bibliography file found");let i=this.bibEntriesCache.get(n),s=Date.now();if(i&&s-i.timestamp<this.CACHE_DURATION)return i.entries;try{let a=await W.promises.readFile(n,"utf8"),l=this.parseBibFile(a);return this.bibEntriesCache.set(n,{entries:l,timestamp:s}),l}catch(a){throw new Error(`Error reading bibliography file: ${a}`)}}getBibliographySearchPaths(e){let t=[],n=X.dirname(e.fileName);if(t.push(X.join(n,"03_REFERENCES.bib")),F.workspace.workspaceFolders)for(let i of F.workspace.workspaceFolders){let s=X.join(i.uri.fsPath,"03_REFERENCES.bib");t.includes(s)||t.push(s)}return t}parseBibFile(e){let t=[],n=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,i;for(;(i=n.exec(e))!==null;){let s=i[1],a=i[2],l=i.index,o=this.findMatchingBrace(e,l),d=e.substring(l,o),m=d.match(/title\s*=\s*[{"](.*?)["}]/),u=d.match(/author\s*=\s*[{"](.*?)["}]/),b=d.match(/year\s*=\s*[{"](.*?)["}]/);t.push({key:a,type:s,title:m?.[1],author:u?.[1],year:b?.[1]})}return t}findMatchingBrace(e,t){let n=0,i=!1,s="";for(let a=t;a<e.length;a++){let l=e[a];if(i)l===s&&e[a-1]!=="\\"&&(i=!1);else if(l==='"'||l==="'")i=!0,s=l;else if(l==="{")n++;else if(l==="}"&&(n--,n===0))return a+1}return e.length}};var N=I(require("vscode")),G=I(require("fs")),L=I(require("path"));var Q=class{static{P(this,"CrossReferenceValidator")}labelsCache=new Map;CACHE_DURATION=5e3;async validate(e){let t=[],i=e.getText().split(`
`);try{let s=await this.getDefinedLabels(e),a=this.createLabelMap(s),l={fig:/(?<!\\)@fig:([a-zA-Z0-9_-]+)/g,sfig:/(?<!\\)@sfig:([a-zA-Z0-9_-]+)/g,table:/(?<!\\)@table:([a-zA-Z0-9_-]+)/g,stable:/(?<!\\)@stable:([a-zA-Z0-9_-]+)/g,eq:/(?<!\\)@eq:([a-zA-Z0-9_-]+)/g,snote:/(?<!\\)@snote:([a-zA-Z0-9_-]+)/g},o=!1;for(let m=0;m<i.length;m++){let u=i[m];if(u.trim().startsWith("```")){o=!o;continue}if(!o)for(let[b,h]of Object.entries(l)){let S=u.matchAll(h);for(let C of S){if(this.isPositionInCodeSpan(u,C.index))continue;let B=C[1],V=`${b}:${B}`;if(!a.has(V)){let oe=new N.Range(m,C.index,m,C.index+C[0].length),H=new N.Diagnostic(oe,`Reference '${C[0]}' not found. No matching label defined.`,N.DiagnosticSeverity.Error);H.source="rxiv-markdown",H.code="undefined-reference",t.push(H)}}}}let d=this.findDuplicateLabels(s);for(let m of d)if(m.file===e.fileName){let u=new N.Range(m.line,0,m.line,0),b=new N.Diagnostic(u,`Duplicate label '${m.type}:${m.label}' defined multiple times`,N.DiagnosticSeverity.Warning);b.source="rxiv-markdown",b.code="duplicate-label",t.push(b)}}catch(s){console.error("Error validating cross-references:",s)}return t}async getDefinedLabels(e){let t=await this.getManuscriptFiles(e),n=[];for(let i of t)try{let s=this.labelsCache.get(i),a=Date.now();if(s&&a-s.timestamp<this.CACHE_DURATION){n.push(...s.labels);continue}let l=await G.promises.readFile(i,"utf8"),o=this.extractLabelsFromContent(l,i);this.labelsCache.set(i,{labels:o,timestamp:a}),n.push(...o)}catch{continue}return n}extractLabelsFromContent(e,t){let n=[],i=e.split(`
`),s={fig:/\{#fig:([a-zA-Z0-9_:-]+)([^}]*)\}/g,sfig:/\{#sfig:([a-zA-Z0-9_:-]+)([^}]*)\}/g,table:/\{#table:([a-zA-Z0-9_:-]+)([^}]*)\}/g,stable:/\{#stable:([a-zA-Z0-9_:-]+)([^}]*)\}/g,eq:/\$\$.*?\$\$\s*\{[^}]*#eq:([a-zA-Z0-9_:-]+)[^}]*\}/g,snote:/\{#snote:([a-zA-Z0-9_:-]+)\}/g};for(let a=0;a<i.length;a++){let l=i[a];for(let[o,d]of Object.entries(s)){let m=l.matchAll(d);for(let u of m){let b=u[1];n.push({type:o,label:b,line:a,file:t})}}}return n}async getManuscriptFiles(e){let t=[],n=L.dirname(e.fileName);if(t.push(L.join(n,"01_MAIN.md")),t.push(L.join(n,"02_SUPPLEMENTARY_INFO.md")),t.push(L.join(n,"01_MAIN.rxm")),t.push(L.join(n,"02_SUPPLEMENTARY_INFO.rxm")),N.workspace.workspaceFolders)for(let s of N.workspace.workspaceFolders){let a=s.uri.fsPath,l=L.join(a,"01_MAIN.md"),o=L.join(a,"02_SUPPLEMENTARY_INFO.md"),d=L.join(a,"01_MAIN.rxm"),m=L.join(a,"02_SUPPLEMENTARY_INFO.rxm");t.includes(l)||t.push(l),t.includes(o)||t.push(o),t.includes(d)||t.push(d),t.includes(m)||t.push(m)}let i=[];for(let s of t)try{await G.promises.access(s,G.constants.F_OK),i.push(s)}catch{}return i}createLabelMap(e){let t=new Map;for(let n of e){let i=`${n.type}:${n.label}`;t.set(i,n)}return t}findDuplicateLabels(e){let t=new Map,n=[];for(let i of e){let s=`${i.type}:${i.label}`;if(t.has(s)){n.push(i);let a=t.get(s);n.includes(a)||n.push(a)}else t.set(s,i)}return n}isPositionInCodeSpan(e,t){let n=[],i=-1;for(let s=0;s<e.length;s++)e[s]==="`"&&(i===-1?i=s:(n.push({start:i,end:s}),i=-1));for(let s of n)if(t>=s.start&&t<=s.end)return!0;return!1}};var x=I(require("vscode"));var J=class{static{P(this,"PythonBlockValidator")}async validate(e){let t=[],i=e.getText().split(`
`),s=!1,a=-1,l="";for(let o=0;o<i.length;o++){let d=i[o],m=d.match(/^\s*\{\{py:\s*(.*)$/),u=d.match(/^\s*\}\}\s*$/),b=d.match(/\{py:\s*([^}]+)\}/g);if(m&&!s){s=!0,a=o,l=d.match(/^\s*/)?.[0]||"";let h=m[1].trim();h&&!h.endsWith("}}")&&this.validatePythonSyntax(h,o,m.index,t)}else if(u&&s)s=!1,a=-1;else if(s&&a!==-1){let h=d.replace(/^\s*/,"");h.trim()&&!h.includes("}}")&&this.validatePythonSyntax(h,o,0,t)}if(b)for(let h of b){let S=h.match(/\{py:\s*([^}]+)\}/);if(S){let C=S[1],B=d.indexOf(h);this.validateInlinePython(C,o,B,t)}}this.validatePythonVariableOperations(d,o,t)}if(s){let o=new x.Diagnostic(new x.Range(a,0,a,i[a].length),'Unclosed Python block - missing "}}"',x.DiagnosticSeverity.Error);o.source="rxiv-markdown",o.code="unclosed-python-block",t.push(o)}return t}validatePythonSyntax(e,t,n,i){let s=e.trim();if(!s)return;let a=this.findBasicSyntaxIssues(s);for(let l of a){let o=new x.Diagnostic(new x.Range(t,n,t,n+e.length),l.message,l.severity);o.source="rxiv-markdown",o.code=l.code,i.push(o)}}validateInlinePython(e,t,n,i){let s=e.trim();if(s.includes(`
`)){let a=new x.Diagnostic(new x.Range(t,n,t,n+e.length+6),"Inline Python expressions cannot contain newlines",x.DiagnosticSeverity.Error);a.source="rxiv-markdown",a.code="multiline-inline-python",i.push(a)}this.validatePythonSyntax(s,t,n+4,i)}validatePythonVariableOperations(e,t,n){let i=[{pattern:/\{py:set\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(.+)\}/,type:"set"},{pattern:/\{py:get\s+([a-zA-Z_][a-zA-Z0-9_]*)\}/,type:"get"},{pattern:/\{py:global\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(.+)\}/,type:"global"},{pattern:/\{py:format="([^"]+)"\s+(.+)\}/,type:"format"},{pattern:/\{py:context="([^"]+)"\s+(.+)\}/,type:"context"},{pattern:/\{py:if\s+(.+?):\s*"([^"]*?)"\s*else:\s*"([^"]*?)"\}/,type:"conditional"}];for(let l of i){let o=e.matchAll(new RegExp(l.pattern.source,"g"));for(let d of o)this.validatePythonOperation(d,l.type,t,n)}let s=e.matchAll(/\{py:import\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)\}/g);for(let l of s)this.validateImportStatement(l[1],t,l.index,n);let a=e.matchAll(/\{py:from\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)\s+import\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\s*,\s*[a-zA-Z_][a-zA-Z0-9_]*)*)\}/g);for(let l of a)this.validateFromImportStatement(l[1],l[2],t,l.index,n)}findBasicSyntaxIssues(e){let t=[],n=(e.match(/\(/g)||[]).length,i=(e.match(/\)/g)||[]).length;n!==i&&t.push({message:"Unmatched parentheses in Python code",severity:x.DiagnosticSeverity.Error,code:"unmatched-parentheses"});let s=(e.match(/\[/g)||[]).length,a=(e.match(/\]/g)||[]).length;s!==a&&t.push({message:"Unmatched brackets in Python code",severity:x.DiagnosticSeverity.Error,code:"unmatched-brackets"});let l=(e.match(/\{/g)||[]).length,o=(e.match(/\}/g)||[]).length;return l!==o&&t.push({message:"Unmatched braces in Python code",severity:x.DiagnosticSeverity.Error,code:"unmatched-braces"}),e.includes("	")&&e.includes("    ")&&t.push({message:"Mixed tabs and spaces in Python code",severity:x.DiagnosticSeverity.Warning,code:"mixed-indentation"}),e.match(/^\s*def\s+/)&&!e.includes(":")&&t.push({message:"Function definition missing colon",severity:x.DiagnosticSeverity.Error,code:"missing-colon"}),e.match(/^\s*(if|elif|else|for|while|try|except|finally|with)\s+/)&&!e.includes(":")&&t.push({message:"Control structure missing colon",severity:x.DiagnosticSeverity.Error,code:"missing-colon"}),t}validatePythonOperation(e,t,n,i){let s=e[0],a=e.index;switch(t){case"set":case"global":let l=e[1],o=e[2];if(!this.isValidVariableName(l)){let u=new x.Diagnostic(new x.Range(n,a,n,a+s.length),`Invalid variable name '${l}'`,x.DiagnosticSeverity.Error);u.source="rxiv-markdown",u.code="invalid-variable-name",i.push(u)}break;case"get":let d=e[1];if(!this.isValidVariableName(d)){let u=new x.Diagnostic(new x.Range(n,a,n,a+s.length),`Invalid variable name '${d}'`,x.DiagnosticSeverity.Error);u.source="rxiv-markdown",u.code="invalid-variable-name",i.push(u)}break;case"format":if(!e[1].trim()){let u=new x.Diagnostic(new x.Range(n,a,n,a+s.length),"Empty format specification",x.DiagnosticSeverity.Warning);u.source="rxiv-markdown",u.code="empty-format-spec",i.push(u)}break}}validateImportStatement(e,t,n,i){if(!this.isValidModuleName(e)){let s=new x.Diagnostic(new x.Range(t,n,t,n+e.length+12),`Invalid module name '${e}'`,x.DiagnosticSeverity.Error);s.source="rxiv-markdown",s.code="invalid-module-name",i.push(s)}}validateFromImportStatement(e,t,n,i,s){if(!this.isValidModuleName(e)){let l=new x.Diagnostic(new x.Range(n,i,n,i+20),`Invalid module name '${e}'`,x.DiagnosticSeverity.Error);l.source="rxiv-markdown",l.code="invalid-module-name",s.push(l)}let a=t.split(",").map(l=>l.trim());for(let l of a)if(!this.isValidVariableName(l)){let o=new x.Diagnostic(new x.Range(n,i,n,i+20),`Invalid import name '${l}'`,x.DiagnosticSeverity.Error);o.source="rxiv-markdown",o.code="invalid-import-name",s.push(o)}}isValidVariableName(e){return/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(e)}isValidModuleName(e){return/^[a-zA-Z_][a-zA-Z0-9_]*(\.[a-zA-Z_][a-zA-Z0-9_]*)*$/.test(e)}};var E=I(require("vscode"));var ee=class{static{P(this,"LaTeXBlockValidator")}async validate(e){let t=[],i=e.getText().split(`
`),s=!1,a=-1,l=[];for(let o=0;o<i.length;o++){let d=i[o],m=d.match(/^\s*\{\{tex:\s*(.*)$/),u=d.match(/^\s*\}\}\s*$/),b=d.match(/\{\{tex:\s*([^}]+)\}\}/g);if(m&&!s){s=!0,a=o;let h=m[1].trim();h&&!h.endsWith("}}")&&this.validateLaTeXSyntax(h,o,m.index,l,t)}else if(u&&s)s=!1,a=-1,this.checkUnclosedenvironments(l,o,t),l=[];else if(s&&a!==-1){let h=d.trim();h&&!h.includes("}}")&&this.validateLaTeXSyntax(h,o,0,l,t)}if(b)for(let h of b){let S=h.match(/\{\{tex:\s*([^}]+)\}\}/);if(S){let C=S[1],B=d.indexOf(h),V=[];this.validateLaTeXSyntax(C,o,B,V,t)}}s||this.validateInlineLaTeXElements(d,o,t)}if(s){let o=new E.Diagnostic(new E.Range(a,0,a,i[a].length),'Unclosed TeX block - missing "}}"',E.DiagnosticSeverity.Error);o.source="rxiv-markdown",o.code="unclosed-tex-block",t.push(o)}return t}validateLaTeXSyntax(e,t,n,i,s){if(!e.trim())return;this.trackLaTeXEnvironments(e,t,i,s);let a=this.findLaTeXSyntaxIssues(e);for(let l of a){let o=new E.Diagnostic(new E.Range(t,n+l.column,t,n+l.column+l.length),l.message,l.severity);o.source="rxiv-markdown",o.code=l.code,s.push(o)}}validateInlineLaTeXElements(e,t,n){let i=[...e.matchAll(/\$\$([^$]+)\$\$/g),...e.matchAll(/(?<!\$)\$([^$\n]+)\$(?!\$)/g)];for(let a of i){let l=a[1],o=a.index,d=this.findMathExpressionIssues(l);for(let m of d){let u=new E.Diagnostic(new E.Range(t,o,t,o+a[0].length),m.message,m.severity);u.source="rxiv-markdown",u.code=m.code,n.push(u)}}let s=e.matchAll(/\\([a-zA-Z]+)(\*?)\{([^}]*)\}/g);for(let a of s){let l=a[1],o=a[2],d=a[3],m=a.index;this.validateLaTeXCommand(l,o,d,t,m,n)}}trackLaTeXEnvironments(e,t,n,i){let s=[...e.matchAll(/\\begin\{([^}]+)\}/g)],a=[...e.matchAll(/\\end\{([^}]+)\}/g)],l=[...s.map(o=>({type:"begin",env:o[1],index:o.index})),...a.map(o=>({type:"end",env:o[1],index:o.index}))].sort((o,d)=>o.index-d.index);for(let o of l)if(o.type==="begin")n.push({name:o.env,line:t});else if(o.type==="end")if(n.length===0){let d=new E.Diagnostic(new E.Range(t,o.index,t,o.index+`\\end{${o.env}}`.length),`Unexpected \\end{${o.env}} - no matching \\begin`,E.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="unmatched-end-environment",i.push(d)}else{let d=n.pop();if(d.name!==o.env){let m=new E.Diagnostic(new E.Range(t,o.index,t,o.index+`\\end{${o.env}}`.length),`Environment mismatch: \\end{${o.env}} does not match \\begin{${d.name}} on line ${d.line+1}`,E.DiagnosticSeverity.Error);m.source="rxiv-markdown",m.code="mismatched-environment",i.push(m)}}}checkUnclosedenvironments(e,t,n){for(let i of e){let s=new E.Diagnostic(new E.Range(i.line,0,i.line,0),`Unclosed LaTeX environment '${i.name}' - missing \\end{${i.name}}`,E.DiagnosticSeverity.Error);s.source="rxiv-markdown",s.code="unclosed-environment",n.push(s)}}findLaTeXSyntaxIssues(e){let t=[],n=0,i=-1;for(let a=0;a<e.length;a++){let l=e[a];l==="{"&&(a===0||e[a-1]!=="\\")?(n++,n===1&&(i=a)):l==="}"&&(a===0||e[a-1]!=="\\")&&n--}n>0?t.push({message:"Unmatched opening brace in LaTeX code",severity:E.DiagnosticSeverity.Error,code:"unmatched-brace",column:i,length:1}):n<0&&t.push({message:"Unmatched closing brace in LaTeX code",severity:E.DiagnosticSeverity.Error,code:"unmatched-brace",column:0,length:e.length});let s=e.match(/\\[0-9]/g);if(s)for(let a of s){let l=e.indexOf(a);t.push({message:`Invalid LaTeX command '${a}' - commands cannot start with numbers`,severity:E.DiagnosticSeverity.Error,code:"invalid-command",column:l,length:a.length})}return e.endsWith("\\")&&!e.endsWith("\\\\")&&t.push({message:"Incomplete LaTeX command at end of line",severity:E.DiagnosticSeverity.Error,code:"incomplete-command",column:e.length-1,length:1}),t}findMathExpressionIssues(e){let t=[];e.trim()||t.push({message:"Empty math expression",severity:E.DiagnosticSeverity.Warning,code:"empty-math"});let n=(e.match(/\\left[(\[\{|]/g)||[]).length,i=(e.match(/\\right[)\]\}|]/g)||[]).length;return n!==i&&t.push({message:"Unbalanced \\left and \\right delimiters in math expression",severity:E.DiagnosticSeverity.Error,code:"unbalanced-delimiters"}),t}validateLaTeXCommand(e,t,n,i,s,a){if(["textbf","textit","emph","caption","label"].includes(e)&&!n.trim()){let o=new E.Diagnostic(new E.Range(i,s,i,s+`\\${e}${t}{}`.length),`LaTeX command '\\${e}${t}' should not be empty`,E.DiagnosticSeverity.Warning);o.source="rxiv-markdown",o.code="empty-command-content",a.push(o)}if(e==="label"&&!n.match(/^(fig|table|eq|sfig|stable|snote):[a-zA-Z0-9_-]+$/)){let o=new E.Diagnostic(new E.Range(i,s,i,s+`\\label{${n}}`.length),`Invalid label format '${n}'. Expected format: type:name (e.g., fig:my-figure)`,E.DiagnosticSeverity.Warning);o.source="rxiv-markdown",o.code="invalid-label-format",a.push(o)}}};var w=I(require("vscode")),j=I(require("fs")),$=I(require("path"));var te=class{static{P(this,"StructureValidator")}async validate(e){let t=[],n=e.getText(),i=n.split(`
`);return await this.validateDocumentStructure(e,t),this.validateHeadingStructure(i,e,t),this.checkRequiredElements(n,e.fileName,t),await this.validateFigureFiles(i,e,t),await this.checkOrphanedElements(n,e,t),t}async validateDocumentStructure(e,t){let n=$.basename(e.fileName),i=$.dirname(e.fileName),s=[{name:"00_CONFIG.yml",description:"Configuration file"},{name:"03_REFERENCES.bib",description:"Bibliography file"}];for(let l of s){let o=$.join(i,l.name);try{await j.promises.access(o,j.constants.F_OK)}catch{if(n==="01_MAIN.md"||n==="01_MAIN.rxm"||n==="02_SUPPLEMENTARY_INFO.md"||n==="02_SUPPLEMENTARY_INFO.rxm"){let d=new w.Diagnostic(new w.Range(0,0,0,0),`Missing required file: ${l.name} (${l.description})`,w.DiagnosticSeverity.Warning);d.source="rxiv-markdown",d.code="missing-required-file",t.push(d)}}}let a=e.getText();if(a.includes("FIGURES/")||a.includes("![")){let l=$.join(i,"FIGURES");try{if(!(await j.promises.stat(l)).isDirectory()){let d=new w.Diagnostic(new w.Range(0,0,0,0),"FIGURES should be a directory, not a file",w.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="invalid-figures-path",t.push(d)}}catch{let o=new w.Diagnostic(new w.Range(0,0,0,0),"FIGURES directory not found. Create it to store figure files.",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="missing-figures-directory",t.push(o)}}}validateHeadingStructure(e,t,n){let i=0,s=!1;for(let o=0;o<e.length;o++){let d=e[o],m=d.match(/^(#{1,6})\s+(.+)$/);if(m){let u=m[1].length,b=m[2].trim();if(!s&&u===1&&(s=!0),!b){let h=new w.Diagnostic(new w.Range(o,0,o,d.length),"Empty heading - headings should have descriptive text",w.DiagnosticSeverity.Warning);h.source="rxiv-markdown",h.code="empty-heading",n.push(h)}if(u>i+1&&i>0){let h=new w.Diagnostic(new w.Range(o,0,o,m[1].length),`Heading level skipped. Level ${u} follows level ${i}. Consider using level ${i+1} instead.`,w.DiagnosticSeverity.Information);h.source="rxiv-markdown",h.code="heading-level-skip",n.push(h)}if(i=u,b.endsWith(".")){let h=new w.Diagnostic(new w.Range(o,d.lastIndexOf("."),o,d.length),"Headings typically should not end with periods",w.DiagnosticSeverity.Information);h.source="rxiv-markdown",h.code="heading-period",n.push(h)}}}let a=$.basename(t.fileName);if(!s&&!(a==="02_SUPPLEMENTARY_INFO.md"||a==="02_SUPPLEMENTARY_INFO.rxm")){let o=new w.Diagnostic(new w.Range(0,0,0,0),"Document should start with a main title (# Title)",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="missing-title",n.push(o)}}checkRequiredElements(e,t,n){let i=$.basename(t);if(i==="01_MAIN.md"||i==="01_MAIN.rxm"){let s=/!\[.*?\]\(.*?\)/.test(e)||/@fig:/.test(e),a=/@table:/.test(e)||e.includes("|")||e.includes("\\begin{table}");if(!s&&!a){let o=new w.Diagnostic(new w.Range(0,0,0,0),"Main manuscript typically should include figures or tables",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="missing-figures-tables",n.push(o)}if(!(/@[a-zA-Z]/.test(e)&&!e.match(/@(fig|table|eq|sfig|stable|snote):/))){let o=new w.Diagnostic(new w.Range(0,0,0,0),"Main manuscript should typically include citations",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="missing-citations",n.push(o)}}if((i==="01_MAIN.md"||i==="01_MAIN.rxm")&&e.length>1e3&&!/^#+\s*(abstract|summary)/mi.test(e)){let a=new w.Diagnostic(new w.Range(0,0,0,0),"Consider adding an Abstract section to your manuscript",w.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="missing-abstract",n.push(a)}}async validateFigureFiles(e,t,n){let i=$.dirname(t.fileName);for(let s=0;s<e.length;s++){let l=e[s].matchAll(/!\[([^\]]*)\]\(([^)]+)\)/g);for(let o of l){let d=o[1],m=o[2];if(m.startsWith("http://")||m.startsWith("https://"))continue;let u=$.resolve(i,m);try{await j.promises.access(u,j.constants.F_OK)}catch{let S=o.index+o[0].indexOf(m),C=new w.Diagnostic(new w.Range(s,S,s,S+m.length),`Figure file not found: ${m}`,w.DiagnosticSeverity.Error);C.source="rxiv-markdown",C.code="missing-figure-file",n.push(C)}let b=$.extname(m).toLowerCase(),h=[".png",".jpg",".jpeg",".pdf",".svg"];if(b&&!h.includes(b)){let S=o.index+o[0].indexOf(m),C=new w.Diagnostic(new w.Range(s,S,s,S+m.length),`Consider using recommended figure formats: ${h.join(", ")}`,w.DiagnosticSeverity.Information);C.source="rxiv-markdown",C.code="non-recommended-format",n.push(C)}}}}async checkOrphanedElements(e,t,n){let i=e.split(`
`),s=new Set,a=/\{#(s?(?:fig|table|eq|snote)):([a-zA-Z0-9_-]+)[^}]*\}/g,l;for(;(l=a.exec(e))!==null;){let d=l[1],m=l[2];s.add(`${d}:${m}`)}let o=await this.findAllReferencesInProject(t);for(let d of s)if(!o.has(d)){let m=e.match(new RegExp(`\\{#${d.replace(":",":")}[^}]*\\}`,"g"));if(m){let u=m[0],h=e.substring(0,e.indexOf(u)).split(`
`).length-1,S=new w.Diagnostic(new w.Range(h,0,h,i[h]?.length||0),`Label '${d}' is defined but never referenced in project`,w.DiagnosticSeverity.Information);S.source="rxiv-markdown",S.code="orphaned-label",n.push(S)}}this.checkUnusualPatterns(i,n)}async findAllReferencesInProject(e){let t=new Set,n=$.dirname(e.fileName),i=["01_MAIN.md","01_MAIN.rxm","02_SUPPLEMENTARY_INFO.md","02_SUPPLEMENTARY_INFO.rxm"],s=[];try{let a=await j.promises.readdir(n);for(let o of i)a.includes(o)&&s.push(o);let l=a.filter(o=>(o.endsWith(".rxm")||o.endsWith(".md"))&&!o.startsWith(".")&&!i.includes(o)&&o!=="README.md"&&o!=="CHANGELOG.md");s.push(...l);for(let o of s){let d=$.join(n,o);try{let m=await j.promises.readFile(d,"utf8"),u=/@(stable|sfig|fig|table|eq|snote):([a-zA-Z0-9_-]+)/g,b;for(;(b=u.exec(m))!==null;){let h=b[1],S=b[2];t.add(`${h}:${S}`)}}catch{continue}}}catch{let a=e.getText(),l=/@(stable|sfig|fig|table|eq|snote):([a-zA-Z0-9_-]+)/g,o;for(;(o=l.exec(a))!==null;){let d=o[1],m=o[2];t.add(`${d}:${m}`)}}return t}checkUnusualPatterns(e,t){for(let n=0;n<e.length;n++){let i=e[n];if(n<e.length-2){let s=!i.trim(),a=!e[n+1]?.trim(),l=!e[n+2]?.trim();if(s&&a&&l){let o=new w.Diagnostic(new w.Range(n,0,n+2,0),"Multiple consecutive empty lines - consider reducing for cleaner formatting",w.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="multiple-empty-lines",t.push(o)}}if(i.match(/\s+$/)){let s=i.search(/\s+$/),a=new w.Diagnostic(new w.Range(n,s,n,i.length),"Trailing whitespace",w.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="trailing-whitespace",t.push(a)}}}};var ne=class{static{P(this,"RxivMarkdownDiagnosticsProvider")}diagnosticCollection;validators;disposables=[];constructor(){this.diagnosticCollection=U.languages.createDiagnosticCollection("rxiv-markdown"),this.validators=[new K,new Q,new J,new ee,new te],this.setupEventHandlers()}setupEventHandlers(){let e=U.workspace.onDidChangeTextDocument(async s=>{this.isRxivMarkdownDocument(s.document)&&await this.validateDocument(s.document)}),t=U.workspace.onDidSaveTextDocument(async s=>{this.isRxivMarkdownDocument(s)&&await this.validateDocument(s)}),n=U.workspace.onDidOpenTextDocument(async s=>{this.isRxivMarkdownDocument(s)&&await this.validateDocument(s)}),i=U.workspace.onDidCloseTextDocument(s=>{this.isRxivMarkdownDocument(s)&&this.diagnosticCollection.delete(s.uri)});this.disposables.push(e,t,n,i)}isRxivMarkdownDocument(e){let t=e.fileName,n=t.endsWith(".rxm")||t.endsWith("01_MAIN.md")||t.endsWith("02_SUPPLEMENTARY_INFO.md");return e.languageId==="rxiv-markdown"||n}async validateDocument(e){if(this.isRxivMarkdownDocument(e))try{let t=[],n=await Promise.all(this.validators.map(i=>i.validate(e)));for(let i of n)t.push(...i);this.diagnosticCollection.set(e.uri,t)}catch(t){console.error("Error validating rxiv-markdown document:",t)}}async validateAllOpenDocuments(){let e=U.workspace.textDocuments.filter(t=>this.isRxivMarkdownDocument(t)).map(t=>this.validateDocument(t));await Promise.all(e)}clearAllDiagnostics(){this.diagnosticCollection.clear()}dispose(){this.diagnosticCollection.dispose(),this.disposables.forEach(e=>e.dispose()),this.disposables=[]}};function Fe(y){console.log("Rxiv-Maker extension is now active!");let e=new ne;y.subscriptions.push(e);let t=new Map,n=r.workspace.onDidOpenTextDocument(async c=>{let v=k.basename(c.fileName);if(c.fileName.endsWith(".rxm")||v==="01_MAIN.md"||v==="02_SUPPLEMENTARY_INFO.md"){let g=r.workspace.getWorkspaceFolder(c.uri);if(g){let p=g.uri.fsPath,D=t.get(p);D===void 0&&(D=await de(p),t.set(p,D)),D&&(await r.languages.setTextDocumentLanguage(c,"rxiv-markdown"),await e.validateDocument(c))}}});setTimeout(async()=>{for(let c of r.workspace.textDocuments){let v=k.basename(c.fileName);if(c.fileName.endsWith(".rxm")||v==="01_MAIN.md"||v==="02_SUPPLEMENTARY_INFO.md"){let g=r.workspace.getWorkspaceFolder(c.uri);if(g){let p=g.uri.fsPath,D=t.get(p);D===void 0&&(D=await de(p),t.set(p,D)),D&&(await r.languages.setTextDocumentLanguage(c,"rxiv-markdown"),await e.validateDocument(c))}}}},500);let i=r.languages.registerCompletionItemProvider({language:"rxiv-markdown"},{async provideCompletionItems(c,v){return c.lineAt(v).text.substr(0,v.character).endsWith("@")?(await le()).map(p=>{let D=new r.CompletionItem(p.key,r.CompletionItemKind.Reference);return D.detail=p.title||p.type,D.documentation=p.author||"",D.insertText=p.key,D}):[]}},"@"),s=r.languages.registerCompletionItemProvider({language:"rxiv-markdown"},{async provideCompletionItems(c,v){return c.lineAt(v).text.substr(0,v.character).endsWith("@")?(await se()).map(p=>{let D=p.supplementary?`s${p.type}:`:`${p.type}:`,R=new r.CompletionItem(`${D}${p.label}`,r.CompletionItemKind.Reference);return R.detail=`${p.type.toUpperCase()} reference`,R.documentation=`Line ${p.line+1}${p.supplementary?" (Supplementary)":""}`,R.insertText=`${D}${p.label}`,R}):[]}},"@"),a=r.commands.registerCommand("rxiv-maker.insertCitation",async()=>{let c=await le();if(c.length===0){let g=[],p=r.window.activeTextEditor;if(p){let R=k.dirname(p.document.fileName);g.push(k.join(R,"03_REFERENCES.bib"))}if(r.workspace.workspaceFolders)for(let R of r.workspace.workspaceFolders){let M=k.join(R.uri.fsPath,"03_REFERENCES.bib");g.includes(M)||g.push(M)}let D=`No bibliography file (03_REFERENCES.bib) found.

Searched in:
${g.join(`
`)}

Please create 03_REFERENCES.bib in the same directory as your document.`;r.window.showWarningMessage(D);return}let v=c.map(g=>({label:g.key,description:g.title||g.type,detail:g.author||""})),f=await r.window.showQuickPick(v,{placeHolder:"Select citation to insert"});if(f){let g=r.window.activeTextEditor;if(g){let p=g.selection.active;await g.edit(D=>{D.insert(p,`@${f.label}`)})}}}),l=r.commands.registerCommand("rxiv-maker.insertFigureReference",async()=>{let v=(await se()).filter(p=>p.type==="fig");if(v.length===0){r.window.showWarningMessage("No figure labels found in the document");return}let f=v.map(p=>({label:p.label,description:p.supplementary?"Supplementary Figure":"Figure",detail:`Line ${p.line+1}`})),g=await r.window.showQuickPick(f,{placeHolder:"Select figure reference to insert"});if(g){let p=r.window.activeTextEditor;if(p){let D=p.selection.active,R=v.find(M=>M.label===g.label)?.supplementary?"@sfig:":"@fig:";await p.edit(M=>{M.insert(D,`${R}${g.label}`)})}}}),o=r.commands.registerCommand("rxiv-maker.insertTableReference",async()=>{let v=(await se()).filter(p=>p.type==="table");if(v.length===0){r.window.showWarningMessage("No table labels found in the document");return}let f=v.map(p=>({label:p.label,description:p.supplementary?"Supplementary Table":"Table",detail:`Line ${p.line+1}`})),g=await r.window.showQuickPick(f,{placeHolder:"Select table reference to insert"});if(g){let p=r.window.activeTextEditor;if(p){let D=p.selection.active,R=v.find(M=>M.label===g.label)?.supplementary?"@stable:":"@table:";await p.edit(M=>{M.insert(D,`${R}${g.label}`)})}}}),d=r.commands.registerCommand("rxiv-maker.insertEquationReference",async()=>{let v=(await se()).filter(p=>p.type==="eq");if(v.length===0){r.window.showWarningMessage("No equation labels found in the document");return}let f=v.map(p=>({label:p.label,description:"Equation",detail:`Line ${p.line+1}`})),g=await r.window.showQuickPick(f,{placeHolder:"Select equation reference to insert"});if(g){let p=r.window.activeTextEditor;if(p){let D=p.selection.active;await p.edit(R=>{R.insert(D,`@eq:${g.label}`)})}}}),m,u=P(c=>(m&&m.exitStatus===void 0||(m=r.window.createTerminal({name:"rxiv-maker",cwd:c}),r.window.onDidCloseTerminal(v=>{v===m&&(m=void 0)})),m),"getRxivMakerTerminal"),b=r.commands.registerCommand("rxiv-maker.makeValidate",async()=>{let c=await ie();if(!c.success||!c.rxivMakerRoot){r.window.showErrorMessage(c.error||"Could not determine manuscript folder");return}let v=u(c.rxivMakerRoot);v.show(),v.sendText(`make validate MANUSCRIPT_PATH="${c.manuscriptPath}"`)}),h=r.commands.registerCommand("rxiv-maker.makePdf",async()=>{let c=await ie();if(!c.success||!c.rxivMakerRoot){r.window.showErrorMessage(c.error||"Could not determine manuscript folder");return}let v=u(c.rxivMakerRoot);v.show(),v.sendText(`make pdf MANUSCRIPT_PATH="${c.manuscriptPath}"`)}),S=r.commands.registerCommand("rxiv-maker.makeClean",async()=>{let c=await ie();if(!c.success||!c.rxivMakerRoot){r.window.showErrorMessage(c.error||"Could not determine manuscript folder");return}let v=u(c.rxivMakerRoot);v.show(),v.sendText(`make clean MANUSCRIPT_PATH="${c.manuscriptPath}"`)}),C=r.commands.registerCommand("rxiv-maker.installRxivMaker",async()=>{await r.window.withProgress({location:r.ProgressLocation.Notification,title:"Checking dependencies...",cancellable:!1},async c=>{let v=[{name:"git",command:"git --version"},{name:"make",command:"make --version"},{name:"python",command:O.platform()==="win32"?"python --version":"python3 --version"},{name:"latex",command:"pdflatex --version"}],f=[],g=0;for(let T of v){c.report({increment:25,message:`Checking ${T.name}...`});try{await new Promise((z,Ce)=>{(0,me.exec)(T.command,{timeout:5e3},(q,Be,je)=>{q&&f.push(T.name),z()})})}catch{f.push(T.name)}g++}if(f.length>0){let T={git:"Install Git from https://git-scm.com/",make:O.platform()==="win32"?"Install Visual Studio Build Tools or Git Bash":O.platform()==="darwin"?"Run: xcode-select --install":"Run: sudo apt install build-essential",python:"Install Python from https://python.org/",latex:O.platform()==="win32"?"Install MiKTeX from https://miktex.org/":O.platform()==="darwin"?"Install MacTeX from https://tug.org/mactex/":"Run: sudo apt install texlive-full"},z=`Missing dependencies: ${f.join(", ")}

Installation instructions:
${f.map(q=>`\u2022 ${q}: ${T[q]}`).join(`
`)}`;if(await r.window.showErrorMessage(`Cannot install rxiv-maker. Missing dependencies: ${f.join(", ")}`,"Show Instructions","Cancel")==="Show Instructions"){let q=await r.workspace.openTextDocument({content:z,language:"markdown"});await r.window.showTextDocument(q)}return}if(await r.window.showInformationMessage(`All required dependencies are installed. Would you like to clone the rxiv-maker repository and run setup?

Note: The setup process will automatically create a Python virtual environment (.venv) if needed.`,{modal:!0},"Yes, install rxiv-maker","No, cancel")!=="Yes, install rxiv-maker")return;let R=[];if(r.workspace.workspaceFolders)for(let T of r.workspace.workspaceFolders)R.push({label:`$(folder) ${k.basename(T.uri.fsPath)}`,description:T.uri.fsPath,detail:"Install in this workspace folder"});let M=O.homedir(),Pe=[{path:k.join(M,"Documents","GitHub"),label:"Documents/GitHub"},{path:k.join(M,"Documents"),label:"Documents"},{path:k.join(M,"Desktop"),label:"Desktop"},{path:M,label:"Home directory"}];for(let T of Pe)R.some(z=>z.description===T.path)||R.push({label:`$(home) ${T.label}`,description:T.path,detail:"Common installation location"});R.push({label:"$(edit) Custom path...",description:"custom",detail:"Enter a custom installation path"});let ae=await r.window.showQuickPick(R,{placeHolder:"Select where to install rxiv-maker",matchOnDescription:!0});if(!ae)return;let Z;if(ae.description==="custom"){let T=await r.window.showInputBox({prompt:"Enter custom directory where you want to install rxiv-maker",value:k.join(M,"Documents","GitHub"),validateInput:P(z=>{if(!z)return"Installation directory is required"},"validateInput")});if(!T)return;Z=T}else Z=ae.description;if(!Z)return;let re=Z.startsWith("~")?k.join(O.homedir(),Z.slice(1)):Z;try{await A.promises.mkdir(re,{recursive:!0})}catch(T){r.window.showErrorMessage(`Failed to create installation directory: ${re}
${T}`);return}let _=r.window.createTerminal({name:"rxiv-maker-install",cwd:re});_.show(),O.platform()==="win32"?(_.sendText("echo Installing rxiv-maker..."),_.sendText("git clone https://github.com/HenriquesLab/rxiv-maker.git"),_.sendText("cd rxiv-maker"),_.sendText("make setup"),_.sendText("echo rxiv-maker installation complete!")):(_.sendText('echo "Installing rxiv-maker..."'),_.sendText("git clone https://github.com/HenriquesLab/rxiv-maker.git"),_.sendText("cd rxiv-maker"),_.sendText("make setup"),_.sendText('echo "rxiv-maker installation complete!"'),_.sendText('echo "You can now create manuscripts using the rxiv-maker framework."'))})}),B=r.commands.registerCommand("rxiv-maker.makeAddBibliography",async()=>{let c=await ie();if(!c.success||!c.rxivMakerRoot){r.window.showErrorMessage(c.error||"Could not determine manuscript folder");return}let v=await r.window.showInputBox({prompt:"Enter DOI to add to bibliography",placeHolder:"e.g., 10.1000/example or https://doi.org/10.1000/example",validateInput:P(p=>{if(!p)return"DOI is required";if(!/^(https?:\/\/)?(dx\.)?doi\.org\/10\.|^10\./.test(p))return"Please enter a valid DOI (e.g., 10.1000/example)"},"validateInput")});if(!v)return;let f=v.replace(/^(https?:\/\/)?(dx\.)?doi\.org\//,""),g=u(c.rxivMakerRoot);g.show(),g.sendText(`make add-bibliography ${f} MANUSCRIPT_PATH="${c.manuscriptPath}"`)}),V=r.commands.registerCommand("rxiv-maker.insertBlindtext",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active;await c.edit(f=>{f.insert(v,"{{blindtext}}")})}}),oe=r.commands.registerCommand("rxiv-maker.insertBlindtextParagraph",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active;await c.edit(f=>{f.insert(v,"{{Blindtext}}")})}}),H=r.commands.registerCommand("rxiv-maker.insertPythonBlock",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active,f=c.selection;if(f.isEmpty){let g=new r.SnippetString(`{{py:
$1
}}`);await c.insertSnippet(g,v)}else{let g=c.document.getText(f);await c.edit(p=>{p.replace(f,`{{py:
${g}
}}`)})}}}),pe=r.commands.registerCommand("rxiv-maker.insertPythonInline",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active,f=c.selection;if(f.isEmpty){let g=new r.SnippetString("{py: $1}");await c.insertSnippet(g,v)}else{let g=c.document.getText(f);await c.edit(p=>{p.replace(f,`{py: ${g}}`)})}}}),ve=r.commands.registerCommand("rxiv-maker.insertPythonImport",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active,f=[{label:"datetime",detail:"Date and time operations"},{label:"math",detail:"Mathematical functions"},{label:"statistics",detail:"Statistical functions"},{label:"json",detail:"JSON encoder/decoder"},{label:"csv",detail:"CSV file reading/writing"},{label:"random",detail:"Generate random numbers"},{label:"collections",detail:"Specialized container datatypes"},{label:"itertools",detail:"Iterator building blocks"},{label:"functools",detail:"Higher-order functions and operations on functions"}],g=await r.window.showQuickPick(f,{placeHolder:"Select a module to import (or type a custom module name)"});if(g){let p=new r.SnippetString(`{py:import ${g.label}}`);await c.insertSnippet(p,v)}else{let p=await r.window.showInputBox({prompt:"Enter module name to import",placeHolder:"e.g., datetime"});if(p){let D=new r.SnippetString(`{py:import ${p}}`);await c.insertSnippet(D,v)}}}}),ge=r.commands.registerCommand("rxiv-maker.insertPythonFromImport",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active,f=new r.SnippetString("{py:from ${1:module} import ${2:item}}");await c.insertSnippet(f,v)}}),he=r.commands.registerCommand("rxiv-maker.insertPythonSet",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active,f=new r.SnippetString('{py:set ${1:variable_name} = ${2:"value"}}');await c.insertSnippet(f,v)}}),fe=r.commands.registerCommand("rxiv-maker.insertPythonGet",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active,f=new r.SnippetString("{py:get ${1:variable_name}}");await c.insertSnippet(f,v)}}),ue=r.commands.registerCommand("rxiv-maker.insertPythonContext",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active,f=new r.SnippetString('{py:context="${1:context_name}" ${2:code}}');await c.insertSnippet(f,v)}}),we=r.commands.registerCommand("rxiv-maker.insertPythonFormat",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active,f=[{label:"number,2",detail:"Format number with 2 decimal places"},{label:"percentage,1",detail:"Format as percentage with 1 decimal place"},{label:"currency",detail:"Format as currency"},{label:"scientific,3",detail:"Format in scientific notation with 3 decimal places"},{label:"date,%Y-%m-%d",detail:"Format date as YYYY-MM-DD"},{label:"date,%B %d, %Y",detail:'Format date as "Month DD, YYYY"'},{label:"comma",detail:"Add thousand separators"}],g=await r.window.showQuickPick(f,{placeHolder:"Select a format specification"});if(g){let p=new r.SnippetString(`{py:format="${g.label}" \${1:expression}}`);await c.insertSnippet(p,v)}else{let p=new r.SnippetString('{py:format="${1:format_spec}" ${2:expression}}');await c.insertSnippet(p,v)}}}),ye=r.commands.registerCommand("rxiv-maker.insertPythonGlobal",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active,f=new r.SnippetString('{py:global ${1:variable_name} = ${2:"value"}}');await c.insertSnippet(f,v)}}),be=r.commands.registerCommand("rxiv-maker.insertPythonIf",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active,f=new r.SnippetString('{py:if ${1:condition}: "${2:true_value}" else: "${3:false_value}"}');await c.insertSnippet(f,v)}}),xe=r.commands.registerCommand("rxiv-maker.insertTexBlock",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active,f=c.selection;if(f.isEmpty){let g=new r.SnippetString(`{{tex:
$1
}}`);await c.insertSnippet(g,v)}else{let g=c.document.getText(f);await c.edit(p=>{p.replace(f,`{{tex:
${g}
}}`)})}}}),ke=r.commands.registerCommand("rxiv-maker.insertTexInline",async()=>{let c=r.window.activeTextEditor;if(c){let v=c.selection.active,f=c.selection;if(f.isEmpty){let g=new r.SnippetString("{{tex: $1}}");await c.insertSnippet(g,v)}else{let g=c.document.getText(f);await c.edit(p=>{p.replace(f,`{{tex: ${g}}}`)})}}}),De=r.commands.registerCommand("rxiv-maker.validateDocument",async()=>{let c=r.window.activeTextEditor;c?(await e.validateDocument(c.document),r.window.showInformationMessage("Document validation completed")):r.window.showWarningMessage("No active document to validate")}),Ee=r.commands.registerCommand("rxiv-maker.clearDiagnostics",()=>{e.clearAllDiagnostics(),r.window.showInformationMessage("All diagnostics cleared")}),Se=r.commands.registerCommand("rxiv-maker.validateAllDocuments",async()=>{await e.validateAllOpenDocuments(),r.window.showInformationMessage("All documents validated")});y.subscriptions.push(n,i,s,a,l,o,d,C,b,h,S,B,V,oe,H,pe,ve,ge,he,fe,ue,we,ye,be,xe,ke,De,Ee,Se)}P(Fe,"activate");async function le(){let y=[],e=r.window.activeTextEditor;if(e){let n=k.dirname(e.document.fileName),i=k.join(n,"03_REFERENCES.bib");y.push(i),console.log("Rxiv-Maker: Searching for bibliography in current document directory:",i)}if(r.workspace.workspaceFolders)for(let n of r.workspace.workspaceFolders){let i=k.join(n.uri.fsPath,"03_REFERENCES.bib");y.includes(i)||(y.push(i),console.log("Rxiv-Maker: Searching for bibliography in workspace folder:",i))}let t=null;for(let n of y)try{await A.promises.access(n,A.constants.F_OK|A.constants.R_OK),t=n,console.log("Rxiv-Maker: Found bibliography file at:",t);break}catch{console.log("Rxiv-Maker: Bibliography not found at:",n)}if(!t)return console.log("Rxiv-Maker: No bibliography file found in any search location"),[];try{let n=await A.promises.readFile(t,"utf8"),i=[],s=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,a;for(;(a=s.exec(n))!==null;){let l=a[1],o=a[2],d=a.index,m=Ne(n,d),u=n.substring(d,m),b=u.match(/title\s*=\s*[{"](.*?)["}]/),h=u.match(/author\s*=\s*[{"](.*?)["}]/),S=u.match(/year\s*=\s*[{"](.*?)["}]/);i.push({key:o,type:l,title:b?.[1],author:h?.[1],year:S?.[1]})}return i}catch(n){return n.code==="ENOENT"?[]:(console.error("Error parsing bibliography:",n),[])}}P(le,"getBibEntries");async function se(){let y=[],e=[],t=r.window.activeTextEditor;if(t){let n=k.dirname(t.document.fileName);e.push(k.join(n,"01_MAIN.md")),e.push(k.join(n,"02_SUPPLEMENTARY_INFO.md"))}if(r.workspace.workspaceFolders)for(let n of r.workspace.workspaceFolders){let i=k.join(n.uri.fsPath,"01_MAIN.md"),s=k.join(n.uri.fsPath,"02_SUPPLEMENTARY_INFO.md");e.includes(i)||e.push(i),e.includes(s)||e.push(s)}for(let n of e)try{let s=(await A.promises.readFile(n,"utf8")).split(`
`),a=n.includes("02_SUPPLEMENTARY_INFO");for(let l=0;l<s.length;l++){let o=s[l],d=/\{#(s?)((fig|table|eq|snote)):([a-zA-Z0-9_-]+)(?:\s[^}]*)?\}/g,m;for(;(m=d.exec(o))!==null;){let u=m[1]==="s"||a,b=m[2],h=m[4];y.push({type:b,label:h,line:l,supplementary:u})}}}catch{continue}return y}P(se,"getDocumentReferences");function Ne(y,e){let t=0,n=!1,i="";for(let s=e;s<y.length;s++){let a=y[s];if(n)a===i&&y[s-1]!=="\\"&&(n=!1);else if(a==='"'||a==="'")n=!0,i=a;else if(a==="{")t++;else if(a==="}"&&(t--,t===0))return s+1}return y.length}P(Ne,"findMatchingBrace");async function de(y){try{let e=["00_CONFIG.yml","01_MAIN.rxm","01_MAIN.md","03_REFERENCES.bib"],t=["02_SUPPLEMENTARY_INFO.rxm","02_SUPPLEMENTARY_INFO.md"];return(await Promise.all(e.map(async s=>{try{return await A.promises.access(k.join(y,s)),!0}catch{return!1}}))).filter(Boolean).length>=2}catch(e){return console.error("Error checking rxiv-maker project:",e),!1}}P(de,"isRxivMakerProject");async function ie(){let y=r.window.activeTextEditor;if(!y)return{success:!1,error:"No active document. Please open a file in your manuscript folder."};let e=y.document.fileName,t=k.dirname(e),n=["00_CONFIG.yml","01_MAIN.md","01_MAIN.rxm","03_REFERENCES.bib"],i=await Promise.all(n.map(async d=>{try{return await A.promises.access(k.join(t,d)),!0}catch{return!1}})),s;if(i.some(d=>d))s=t;else{let d=r.workspace.workspaceFolders;if(!d)return{success:!1,error:"No workspace folder found. Please open the manuscript folder in VS Code."};let m=null;for(let u of d){let b=u.uri.fsPath;if((await Promise.all(n.map(async S=>{try{return await A.promises.access(k.join(b,S)),!0}catch{return!1}}))).some(S=>S)){m=b;break}}if(!m)return{success:!1,error:"No manuscript folder found. Please ensure your workspace contains a folder with rxiv-maker files (00_CONFIG.yml, 01_MAIN.md, etc.)"};s=m}let a=null,l=s;for(;l!==k.dirname(l);){try{await A.promises.access(k.join(l,"Makefile"));let d=await A.promises.readFile(k.join(l,"Makefile"),"utf8");if(d.includes("Rxiv-Maker")||d.includes("MANUSCRIPT_PATH")){a=l;break}}catch{}l=k.dirname(l)}return a?{success:!0,manuscriptPath:k.relative(a,s)||".",rxivMakerRoot:a}:{success:!1,error:"Could not find rxiv-maker root directory (no Makefile found). Please ensure you have the rxiv-maker repository cloned and accessible."}}P(ie,"findManuscriptFolder");function Le(){}P(Le,"deactivate");0&&(module.exports={activate,deactivate});
