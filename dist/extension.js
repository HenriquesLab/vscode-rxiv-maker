"use strict";var De=Object.create;var Y=Object.defineProperty;var Pe=Object.getOwnPropertyDescriptor;var Ce=Object.getOwnPropertyNames;var Ee=Object.getPrototypeOf,Se=Object.prototype.hasOwnProperty;var E=(y,e)=>Y(y,"name",{value:e,configurable:!0});var Re=(y,e)=>{for(var n in e)Y(y,n,{get:e[n],enumerable:!0})},se=(y,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of Ce(e))!Se.call(y,s)&&s!==n&&Y(y,s,{get:()=>e[s],enumerable:!(t=Pe(e,s))||t.enumerable});return y};var _=(y,e,n)=>(n=y!=null?De(Ee(y)):{},se(e||!y||!y.__esModule?Y(n,"default",{value:y,enumerable:!0}):n,y)),Ie=y=>se(Y({},"__esModule",{value:!0}),y);var _e={};Re(_e,{activate:()=>Te,deactivate:()=>Ae});module.exports=Ie(_e);var l=_(require("vscode")),Z=_(require("fs")),R=_(require("path")),ae=require("child_process");var q=_(require("vscode"));var F=_(require("vscode")),V=_(require("fs")),H=_(require("path"));var j=_(require("vscode"));var N=class{static{E(this,"ContentParser")}static parseDocument(e){let t=e.getText().split(`
`),s=[],i=[],o=[],a=[],r=new j.Position(0,0),d=!1,g=!1,p=null;for(let h=0;h<t.length;h++){let x=t[h],f=x.match(/^(\s*)\{\{tex:\s*(.*)$/),S=x.match(/^(\s*)\}\}\s*$/),C=x.match(/^(\s*)\{\{py:\s*(.*)$/),L=x.match(/^(\s*)\}\}\s*$/);if(f&&!d&&!g){d=!0;let B=f[1].length,T=new j.Position(h,B);if(r.isBefore(T)){let M={start:r,end:T,type:"markdown"};s.push(M),a.push(M)}p=T}else if(C&&!d&&!g){g=!0;let B=C[1].length,T=new j.Position(h,B);if(r.isBefore(T)){let M={start:r,end:T,type:"markdown"};s.push(M),a.push(M)}p=T}else if(S&&d&&p){d=!1;let B=S[1].length+2,T=new j.Position(h,B),M={start:p,end:T,type:"latex"};s.push(M),i.push(M),r=T,p=null}else if(L&&g&&p){g=!1;let B=L[1].length+2,T=new j.Position(h,B),M={start:p,end:T,type:"python"};s.push(M),o.push(M),r=T,p=null}}if(!d&&!g){let h=new j.Position(t.length,0);if(r.isBefore(h)){let x={start:r,end:h,type:"markdown"};s.push(x),a.push(x)}}return{regions:s,latexBlocks:i,pythonBlocks:o,markdownRegions:a}}static isPositionInLatexBlock(e,n){return n.latexBlocks.some(t=>this.isPositionInRegion(e,t))}static isPositionInPythonBlock(e,n){return n.pythonBlocks.some(t=>this.isPositionInRegion(e,t))}static isPositionInMarkdownRegion(e,n){return n.markdownRegions.some(t=>this.isPositionInRegion(e,t))}static rangeIntersectsLatexBlocks(e,n){return n.latexBlocks.some(t=>this.rangeIntersectsRegion(e,t))}static rangeIntersectsPythonBlocks(e,n){return n.pythonBlocks.some(t=>this.rangeIntersectsRegion(e,t))}static filterMarkdownContent(e,n,t){let s=e.split(`
`),i=[];for(let o=0;o<s.length;o++){let a=s[o],r=new j.Position(o,0),d=new j.Position(o,a.length),g=new j.Range(r,d);!this.rangeIntersectsLatexBlocks(g,t)&&!this.rangeIntersectsPythonBlocks(g,t)?i.push(a):i.push("")}return i.join(`
`)}static isPositionInRegion(e,n){return e.isAfterOrEqual(n.start)&&e.isBefore(n.end)}static rangeIntersectsRegion(e,n){return!(e.end.isBefore(n.start)||e.start.isAfterOrEqual(n.end))}};var K=class{static{E(this,"CitationValidator")}bibEntriesCache=new Map;CACHE_DURATION=5e3;async validate(e,n){let t=[],i=e.getText().split(`
`);try{let o=await this.getBibEntries(e),a=new Set(o.map(d=>d.key)),r=!1;for(let d=0;d<i.length;d++){let g=i[d];if(g.trim().startsWith("```")){r=!r;continue}if(r||n&&this.isLineInLatexBlock(d,n))continue;let p=g.matchAll(/(?<!\\)\[(@[^\]]+)\]/g);for(let x of p){if(this.isPositionInCodeSpan(g,x.index)||n&&this.isPositionInLatexBlock(d,x.index,n))continue;let f=x[1].match(/(?<!\\)@([a-zA-Z0-9_-]+)/g);if(f)for(let S of f){let C=S.substring(1),L=g.indexOf(S,x.index);this.validateCitationKey(C,d,g,L,a,t)}}let h=g.matchAll(/(?<!\\)@(?!fig:|eq:|table:|tbl:|sfig:|stable:|snote:)([a-zA-Z0-9_-]+)/g);for(let x of h){if(this.isPositionInCodeSpan(g,x.index)||n&&this.isPositionInLatexBlock(d,x.index,n))continue;let f=x[1];f&&this.isValidCitationKey(f)&&this.validateCitationKey(f,d,g,x.index,a,t)}}}catch{let a=new F.Diagnostic(new F.Range(0,0,0,0),"No bibliography file (03_REFERENCES.bib) found. Citation validation disabled.",F.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="missing-bibliography",t.push(a)}return t}validateCitationKey(e,n,t,s,i,o){if(!i.has(e)){let a=t.indexOf("@"+e,s),r=new F.Range(n,a,n,a+e.length+1),d=new F.Diagnostic(r,`Citation '@${e}' not found in bibliography`,F.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="unknown-citation",o.push(d)}}isValidCitationKey(e){return/^[a-zA-Z0-9_-]+$/.test(e)}isPositionInCodeSpan(e,n){let t=[],s=-1;for(let i=0;i<e.length;i++)e[i]==="`"&&(s===-1?s=i:(t.push({start:s,end:i}),s=-1));for(let i of t)if(n>=i.start&&n<=i.end)return!0;return!1}isLineInLatexBlock(e,n){let t=new F.Position(e,0);return N.isPositionInLatexBlock(t,n)}isPositionInLatexBlock(e,n,t){let s=new F.Position(e,n);return N.isPositionInLatexBlock(s,t)}async getBibEntries(e){let n=this.getBibliographySearchPaths(e),t=null;for(let o of n)try{await V.promises.access(o,V.constants.F_OK|V.constants.R_OK),t=o;break}catch{}if(!t)throw new Error("No bibliography file found");let s=this.bibEntriesCache.get(t),i=Date.now();if(s&&i-s.timestamp<this.CACHE_DURATION)return s.entries;try{let o=await V.promises.readFile(t,"utf8"),a=this.parseBibFile(o);return this.bibEntriesCache.set(t,{entries:a,timestamp:i}),a}catch(o){throw new Error(`Error reading bibliography file: ${o}`)}}getBibliographySearchPaths(e){let n=[],t=H.dirname(e.fileName);if(n.push(H.join(t,"03_REFERENCES.bib")),F.workspace.workspaceFolders)for(let s of F.workspace.workspaceFolders){let i=H.join(s.uri.fsPath,"03_REFERENCES.bib");n.includes(i)||n.push(i)}return n}parseBibFile(e){let n=[],t=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,s;for(;(s=t.exec(e))!==null;){let i=s[1],o=s[2],a=s.index,r=this.findMatchingBrace(e,a),d=e.substring(a,r),g=d.match(/title\s*=\s*[{"](.*?)["}]/),p=d.match(/author\s*=\s*[{"](.*?)["}]/),h=d.match(/year\s*=\s*[{"](.*?)["}]/);n.push({key:o,type:i,title:g?.[1],author:p?.[1],year:h?.[1]})}return n}findMatchingBrace(e,n){let t=0,s=!1,i="";for(let o=n;o<e.length;o++){let a=e[o];if(s)a===i&&e[o-1]!=="\\"&&(s=!1);else if(a==='"'||a==="'")s=!0,i=a;else if(a==="{")t++;else if(a==="}"&&(t--,t===0))return o+1}return e.length}};var O=_(require("vscode")),W=_(require("fs")),A=_(require("path"));var X=class{static{E(this,"CrossReferenceValidator")}labelsCache=new Map;CACHE_DURATION=5e3;async validate(e,n){let t=[],i=e.getText().split(`
`);try{let o=await this.getDefinedLabels(e),a=this.createLabelMap(o),r={fig:/(?<!\\)@fig:([a-zA-Z0-9_-]+)/g,sfig:/(?<!\\)@sfig:([a-zA-Z0-9_-]+)/g,table:/(?<!\\)@table:([a-zA-Z0-9_-]+)/g,stable:/(?<!\\)@stable:([a-zA-Z0-9_-]+)/g,eq:/(?<!\\)@eq:([a-zA-Z0-9_-]+)/g,snote:/(?<!\\)@snote:([a-zA-Z0-9_-]+)/g},d=!1;for(let p=0;p<i.length;p++){let h=i[p];if(h.trim().startsWith("```")){d=!d;continue}if(!d&&!(n&&this.isLineInLatexBlock(p,n)))for(let[x,f]of Object.entries(r)){let S=h.matchAll(f);for(let C of S){if(this.isPositionInCodeSpan(h,C.index)||n&&this.isPositionInLatexBlock(p,C.index,n))continue;let L=C[1],B=`${x}:${L}`;if(!a.has(B)){let T=new O.Range(p,C.index,p,C.index+C[0].length),M=new O.Diagnostic(T,`Reference '${C[0]}' not found. No matching label defined.`,O.DiagnosticSeverity.Error);M.source="rxiv-markdown",M.code="undefined-reference",t.push(M)}}}}let g=this.findDuplicateLabels(o);for(let p of g)if(p.file===e.fileName){let h=new O.Range(p.line,0,p.line,0),x=new O.Diagnostic(h,`Duplicate label '${p.type}:${p.label}' defined multiple times`,O.DiagnosticSeverity.Warning);x.source="rxiv-markdown",x.code="duplicate-label",t.push(x)}}catch(o){console.error("Error validating cross-references:",o)}return t}async getDefinedLabels(e){let n=await this.getManuscriptFiles(e),t=[];for(let s of n)try{let i=this.labelsCache.get(s),o=Date.now();if(i&&o-i.timestamp<this.CACHE_DURATION){t.push(...i.labels);continue}let a=await W.promises.readFile(s,"utf8"),r=this.extractLabelsFromContent(a,s);this.labelsCache.set(s,{labels:r,timestamp:o}),t.push(...r)}catch{continue}return t}extractLabelsFromContent(e,n){let t=[],s=e.split(`
`),i={fig:/\{#fig:([a-zA-Z0-9_:-]+)([^}]*)\}/g,sfig:/\{#sfig:([a-zA-Z0-9_:-]+)([^}]*)\}/g,table:/\{#table:([a-zA-Z0-9_:-]+)([^}]*)\}/g,stable:/\{#stable:([a-zA-Z0-9_:-]+)([^}]*)\}/g,eq:/\$\$.*?\$\$\s*\{[^}]*#eq:([a-zA-Z0-9_:-]+)[^}]*\}/g,snote:/\{#snote:([a-zA-Z0-9_:-]+)\}/g};for(let o=0;o<s.length;o++){let a=s[o];for(let[r,d]of Object.entries(i)){let g=a.matchAll(d);for(let p of g){let h=p[1];t.push({type:r,label:h,line:o,file:n})}}}return t}async getManuscriptFiles(e){let n=[],t=await this.findRxivMakerProjectRoot(e.fileName);if(t){let i=[A.join(t,"01_MAIN.md"),A.join(t,"02_SUPPLEMENTARY_INFO.md"),A.join(t,"01_MAIN.rxm"),A.join(t,"02_SUPPLEMENTARY_INFO.rxm")];for(let o of i)n.push(o)}else{let i=A.dirname(e.fileName);n.push(A.join(i,"01_MAIN.md")),n.push(A.join(i,"02_SUPPLEMENTARY_INFO.md")),n.push(A.join(i,"01_MAIN.rxm")),n.push(A.join(i,"02_SUPPLEMENTARY_INFO.rxm"))}let s=[];for(let i of n)try{await W.promises.access(i,W.constants.F_OK),s.push(i)}catch{}return s}async findRxivMakerProjectRoot(e){let n=A.dirname(e),t=A.parse(n).root;for(;n!==t;){let s=A.join(n,"00_CONFIG.yml"),i=await this.fileExists(A.join(n,"01_MAIN.md"))||await this.fileExists(A.join(n,"01_MAIN.rxm"));if(await this.fileExists(s)&&i)return n;let o=A.dirname(n);if(o===n)break;n=o}return null}async fileExists(e){try{return await W.promises.access(e,W.constants.F_OK),!0}catch{return!1}}createLabelMap(e){let n=new Map;for(let t of e){let s=`${t.type}:${t.label}`;n.set(s,t)}return n}findDuplicateLabels(e){let n=new Map,t=[];for(let s of e){let i=`${s.type}:${s.label}`;if(n.has(i)){t.push(s);let o=n.get(i);t.includes(o)||t.push(o)}else n.set(i,s)}return t}isPositionInCodeSpan(e,n){let t=[],s=-1;for(let i=0;i<e.length;i++)e[i]==="`"&&(s===-1?s=i:(t.push({start:s,end:i}),s=-1));for(let i of t)if(n>=i.start&&n<=i.end)return!0;return!1}isLineInLatexBlock(e,n){let t=new O.Position(e,0);return N.isPositionInLatexBlock(t,n)}isPositionInLatexBlock(e,n,t){let s=new O.Position(e,n);return N.isPositionInLatexBlock(s,t)}};var D=_(require("vscode"));var G=class{static{E(this,"PythonBlockValidator")}async validate(e,n){let t=[],i=e.getText().split(`
`),o=!1,a=-1,r="";for(let d=0;d<i.length;d++){let g=i[d],p=g.match(/^\s*\{\{py:\s*(.*)$/),h=g.match(/^\s*\}\}\s*$/),x=g.match(/\{py:\s*([^}]+)\}/g);if(p&&!o){o=!0,a=d,r=g.match(/^\s*/)?.[0]||"";let f=p[1].trim();f&&!f.endsWith("}}")&&this.validatePythonSyntax(f,d,p.index,t)}else if(h&&o)o=!1,a=-1;else if(o&&a!==-1){let f=g.replace(/^\s*/,"");f.trim()&&!f.includes("}}")&&this.validatePythonSyntax(f,d,0,t)}if(x)for(let f of x){let S=f.match(/\{py:\s*([^}]+)\}/);if(S){let C=S[1],L=g.indexOf(f);this.validateInlinePython(C,d,L,t)}}this.validatePythonVariableOperations(g,d,t)}if(o){let d=new D.Diagnostic(new D.Range(a,0,a,i[a].length),'Unclosed Python block - missing "}}"',D.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="unclosed-python-block",t.push(d)}return t}validatePythonSyntax(e,n,t,s){let i=e.trim();if(!i)return;let o=this.findBasicSyntaxIssues(i);for(let a of o){let r=new D.Diagnostic(new D.Range(n,t,n,t+e.length),a.message,a.severity);r.source="rxiv-markdown",r.code=a.code,s.push(r)}}validateInlinePython(e,n,t,s){let i=e.trim();if(i.includes(`
`)){let o=new D.Diagnostic(new D.Range(n,t,n,t+e.length+6),"Inline Python expressions cannot contain newlines",D.DiagnosticSeverity.Error);o.source="rxiv-markdown",o.code="multiline-inline-python",s.push(o)}this.validatePythonSyntax(i,n,t+4,s)}validatePythonVariableOperations(e,n,t){let s=[{pattern:/\{py:set\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(.+)\}/,type:"set"},{pattern:/\{py:get\s+([a-zA-Z_][a-zA-Z0-9_]*)\}/,type:"get"},{pattern:/\{py:global\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*=\s*(.+)\}/,type:"global"},{pattern:/\{py:format="([^"]+)"\s+(.+)\}/,type:"format"},{pattern:/\{py:context="([^"]+)"\s+(.+)\}/,type:"context"},{pattern:/\{py:if\s+(.+?):\s*"([^"]*?)"\s*else:\s*"([^"]*?)"\}/,type:"conditional"}];for(let a of s){let r=e.matchAll(new RegExp(a.pattern.source,"g"));for(let d of r)this.validatePythonOperation(d,a.type,n,t)}let i=e.matchAll(/\{py:import\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)\}/g);for(let a of i)this.validateImportStatement(a[1],n,a.index,t);let o=e.matchAll(/\{py:from\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\.[a-zA-Z_][a-zA-Z0-9_]*)*)\s+import\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\s*,\s*[a-zA-Z_][a-zA-Z0-9_]*)*)\}/g);for(let a of o)this.validateFromImportStatement(a[1],a[2],n,a.index,t)}findBasicSyntaxIssues(e){let n=[],t=(e.match(/\(/g)||[]).length,s=(e.match(/\)/g)||[]).length;t!==s&&n.push({message:"Unmatched parentheses in Python code",severity:D.DiagnosticSeverity.Error,code:"unmatched-parentheses"});let i=(e.match(/\[/g)||[]).length,o=(e.match(/\]/g)||[]).length;i!==o&&n.push({message:"Unmatched brackets in Python code",severity:D.DiagnosticSeverity.Error,code:"unmatched-brackets"});let a=(e.match(/\{/g)||[]).length,r=(e.match(/\}/g)||[]).length;return a!==r&&n.push({message:"Unmatched braces in Python code",severity:D.DiagnosticSeverity.Error,code:"unmatched-braces"}),e.includes("	")&&e.includes("    ")&&n.push({message:"Mixed tabs and spaces in Python code",severity:D.DiagnosticSeverity.Warning,code:"mixed-indentation"}),e.match(/^\s*def\s+/)&&!e.includes(":")&&n.push({message:"Function definition missing colon",severity:D.DiagnosticSeverity.Error,code:"missing-colon"}),e.match(/^\s*(if|elif|else|for|while|try|except|finally|with)\s+/)&&!e.includes(":")&&n.push({message:"Control structure missing colon",severity:D.DiagnosticSeverity.Error,code:"missing-colon"}),n}validatePythonOperation(e,n,t,s){let i=e[0],o=e.index;switch(n){case"set":case"global":let a=e[1],r=e[2];if(!this.isValidVariableName(a)){let p=new D.Diagnostic(new D.Range(t,o,t,o+i.length),`Invalid variable name '${a}'`,D.DiagnosticSeverity.Error);p.source="rxiv-markdown",p.code="invalid-variable-name",s.push(p)}break;case"get":let d=e[1];if(!this.isValidVariableName(d)){let p=new D.Diagnostic(new D.Range(t,o,t,o+i.length),`Invalid variable name '${d}'`,D.DiagnosticSeverity.Error);p.source="rxiv-markdown",p.code="invalid-variable-name",s.push(p)}break;case"format":if(!e[1].trim()){let p=new D.Diagnostic(new D.Range(t,o,t,o+i.length),"Empty format specification",D.DiagnosticSeverity.Warning);p.source="rxiv-markdown",p.code="empty-format-spec",s.push(p)}break}}validateImportStatement(e,n,t,s){if(!this.isValidModuleName(e)){let i=new D.Diagnostic(new D.Range(n,t,n,t+e.length+12),`Invalid module name '${e}'`,D.DiagnosticSeverity.Error);i.source="rxiv-markdown",i.code="invalid-module-name",s.push(i)}}validateFromImportStatement(e,n,t,s,i){if(!this.isValidModuleName(e)){let a=new D.Diagnostic(new D.Range(t,s,t,s+20),`Invalid module name '${e}'`,D.DiagnosticSeverity.Error);a.source="rxiv-markdown",a.code="invalid-module-name",i.push(a)}let o=n.split(",").map(a=>a.trim());for(let a of o)if(!this.isValidVariableName(a)){let r=new D.Diagnostic(new D.Range(t,s,t,s+20),`Invalid import name '${a}'`,D.DiagnosticSeverity.Error);r.source="rxiv-markdown",r.code="invalid-import-name",i.push(r)}}isValidVariableName(e){return/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(e)}isValidModuleName(e){return/^[a-zA-Z_][a-zA-Z0-9_]*(\.[a-zA-Z_][a-zA-Z0-9_]*)*$/.test(e)}};var P=_(require("vscode"));var Q=class{static{E(this,"LaTeXBlockValidator")}async validate(e,n){let t=[],i=e.getText().split(`
`),o=!1,a=-1,r="",d=[],g=[];for(let p=0;p<i.length;p++){let h=i[p],x=h.match(/^\s*\{\{tex:\s*(.*)$/),f=h.match(/^\s*\}\}\s*$/),S=h.match(/\{\{tex:\s*([^}]+)\}\}/g);if(x&&!o){o=!0,a=p,r="",d=[];let C=x[1].trim();C&&!C.endsWith("}}")&&(r+=C+`
`,d.push(C))}else if(f&&o)o=!1,r.trim()&&this.validateTexBlock(r,a,d,g,t),this.checkUnclosedenvironments(g,p,t),g=[],a=-1,r="",d=[];else if(o&&a!==-1){let C=h.trim();C&&!C.includes("}}")&&(r+=C+`
`,d.push(C))}if(S)for(let C of S){let L=C.match(/\{\{tex:\s*([^}]+)\}\}/);if(L){let B=L[1],T=h.indexOf(C),M=[];this.validateLaTeXSyntax(B,p,T,M,t)}}o||this.validateInlineLaTeXElements(h,p,t)}if(o){let p=new P.Diagnostic(new P.Range(a,0,a,i[a].length),'Unclosed TeX block - missing "}}"',P.DiagnosticSeverity.Error);p.source="rxiv-markdown",p.code="unclosed-tex-block",t.push(p)}return t}validateTexBlock(e,n,t,s,i){let o=this.findBraceIssues(e);for(let a of o){let r=new P.Diagnostic(new P.Range(n,0,n+t.length,0),a.message,a.severity);r.source="rxiv-markdown",r.code=a.code,i.push(r)}for(let a=0;a<t.length;a++){let r=t[a],d=n+a+(n===0?0:1);this.trackLaTeXEnvironments(r,d,s,i)}}findBraceIssues(e){let n=[],t=0,s=!1,i="";for(let o=0;o<e.length;o++){let a=e[o],r=o>0?e[o-1]:"";if(s){a===i&&r!=="\\"&&(s=!1);continue}if((a==='"'||a==="'")&&r!=="\\"){s=!0,i=a;continue}if(a==="{"&&r!=="\\"?t++:a==="}"&&r!=="\\"&&t--,t<0){n.push({message:"Unmatched closing brace in LaTeX code",severity:P.DiagnosticSeverity.Error,code:"unmatched-closing-brace"});break}}return t>0&&n.push({message:"Unmatched opening brace in LaTeX code",severity:P.DiagnosticSeverity.Error,code:"unmatched-opening-brace"}),n}validateLaTeXSyntax(e,n,t,s,i){if(!e.trim())return;this.trackLaTeXEnvironments(e,n,s,i);let o=this.findLaTeXSyntaxIssues(e);for(let a of o){let r=new P.Diagnostic(new P.Range(n,t+a.column,n,t+a.column+a.length),a.message,a.severity);r.source="rxiv-markdown",r.code=a.code,i.push(r)}}validateInlineLaTeXElements(e,n,t){let s=[...e.matchAll(/\$\$([^$]+)\$\$/g),...e.matchAll(/(?<!\$)\$([^$\n]+)\$(?!\$)/g)];for(let o of s){let a=o[1],r=o.index,d=this.findMathExpressionIssues(a);for(let g of d){let p=new P.Diagnostic(new P.Range(n,r,n,r+o[0].length),g.message,g.severity);p.source="rxiv-markdown",p.code=g.code,t.push(p)}}let i=e.matchAll(/\\([a-zA-Z]+)(\*?)\{([^}]*)\}/g);for(let o of i){let a=o[1],r=o[2],d=o[3],g=o.index;this.validateLaTeXCommand(a,r,d,n,g,t)}}trackLaTeXEnvironments(e,n,t,s){let i=[...e.matchAll(/\\begin\{([^}]+)\}/g)],o=[...e.matchAll(/\\end\{([^}]+)\}/g)],a=[...i.map(r=>({type:"begin",env:r[1],index:r.index})),...o.map(r=>({type:"end",env:r[1],index:r.index}))].sort((r,d)=>r.index-d.index);for(let r of a)if(r.type==="begin")t.push({name:r.env,line:n});else if(r.type==="end")if(t.length===0){let d=new P.Diagnostic(new P.Range(n,r.index,n,r.index+`\\end{${r.env}}`.length),`Unexpected \\end{${r.env}} - no matching \\begin`,P.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="unmatched-end-environment",s.push(d)}else{let d=t.pop();if(d.name!==r.env){let g=new P.Diagnostic(new P.Range(n,r.index,n,r.index+`\\end{${r.env}}`.length),`Environment mismatch: \\end{${r.env}} does not match \\begin{${d.name}} on line ${d.line+1}`,P.DiagnosticSeverity.Error);g.source="rxiv-markdown",g.code="mismatched-environment",s.push(g)}}}checkUnclosedenvironments(e,n,t){for(let s of e){let i=new P.Diagnostic(new P.Range(s.line,0,s.line,0),`Unclosed LaTeX environment '${s.name}' - missing \\end{${s.name}}`,P.DiagnosticSeverity.Error);i.source="rxiv-markdown",i.code="unclosed-environment",t.push(i)}}findLaTeXSyntaxIssues(e){let n=[];if(!e.includes(`
`)){let i=0,o=-1;for(let a=0;a<e.length;a++){let r=e[a];r==="{"&&(a===0||e[a-1]!=="\\")?(i++,i===1&&(o=a)):r==="}"&&(a===0||e[a-1]!=="\\")&&i--}i>0?n.push({message:"Unmatched opening brace in LaTeX code",severity:P.DiagnosticSeverity.Error,code:"unmatched-brace",column:o,length:1}):i<0&&n.push({message:"Unmatched closing brace in LaTeX code",severity:P.DiagnosticSeverity.Error,code:"unmatched-brace",column:0,length:e.length})}let s=e.match(/\\[0-9]/g);if(s)for(let i of s){let o=e.indexOf(i);n.push({message:`Invalid LaTeX command '${i}' - commands cannot start with numbers`,severity:P.DiagnosticSeverity.Error,code:"invalid-command",column:o,length:i.length})}return e.endsWith("\\")&&!e.endsWith("\\\\")&&n.push({message:"Incomplete LaTeX command at end of line",severity:P.DiagnosticSeverity.Error,code:"incomplete-command",column:e.length-1,length:1}),n}findMathExpressionIssues(e){let n=[];e.trim()||n.push({message:"Empty math expression",severity:P.DiagnosticSeverity.Warning,code:"empty-math"});let t=(e.match(/\\left[(\[\{|]/g)||[]).length,s=(e.match(/\\right[)\]\}|]/g)||[]).length;return t!==s&&n.push({message:"Unbalanced \\left and \\right delimiters in math expression",severity:P.DiagnosticSeverity.Error,code:"unbalanced-delimiters"}),n}validateLaTeXCommand(e,n,t,s,i,o){if(["textbf","textit","emph","caption","label"].includes(e)&&!t.trim()){let r=new P.Diagnostic(new P.Range(s,i,s,i+`\\${e}${n}{}`.length),`LaTeX command '\\${e}${n}' should not be empty`,P.DiagnosticSeverity.Warning);r.source="rxiv-markdown",r.code="empty-command-content",o.push(r)}if(e==="label"&&!t.match(/^(fig|table|eq|sfig|stable|snote):[a-zA-Z0-9_-]+$/)){let r=new P.Diagnostic(new P.Range(s,i,s,i+`\\label{${t}}`.length),`Invalid label format '${t}'. Expected format: type:name (e.g., fig:my-figure)`,P.DiagnosticSeverity.Warning);r.source="rxiv-markdown",r.code="invalid-label-format",o.push(r)}}};var b=_(require("vscode")),U=_(require("fs")),$=_(require("path"));var J=class{static{E(this,"StructureValidator")}async validate(e,n){let t=[],s=e.getText(),i=s.split(`
`);return await this.validateDocumentStructure(e,t),this.validateHeadingStructure(i,e,n,t),this.checkRequiredElements(s,e.fileName,n,t),await this.validateFigureFiles(i,e,t),await this.checkOrphanedElements(s,e,t),t}async validateDocumentStructure(e,n){let t=$.basename(e.fileName),s=$.dirname(e.fileName),i=[{name:"00_CONFIG.yml",description:"Configuration file"},{name:"03_REFERENCES.bib",description:"Bibliography file"}];for(let a of i){let r=$.join(s,a.name);try{await U.promises.access(r,U.constants.F_OK)}catch{if(t==="01_MAIN.md"||t==="01_MAIN.rxm"||t==="02_SUPPLEMENTARY_INFO.md"||t==="02_SUPPLEMENTARY_INFO.rxm"){let d=new b.Diagnostic(new b.Range(0,0,0,0),`Missing required file: ${a.name} (${a.description})`,b.DiagnosticSeverity.Warning);d.source="rxiv-markdown",d.code="missing-required-file",n.push(d)}}}let o=e.getText();if(o.includes("FIGURES/")||o.includes("![")){let a=$.join(s,"FIGURES");try{if(!(await U.promises.stat(a)).isDirectory()){let d=new b.Diagnostic(new b.Range(0,0,0,0),"FIGURES should be a directory, not a file",b.DiagnosticSeverity.Error);d.source="rxiv-markdown",d.code="invalid-figures-path",n.push(d)}}catch{let r=new b.Diagnostic(new b.Range(0,0,0,0),"FIGURES directory not found. Create it to store figure files.",b.DiagnosticSeverity.Information);r.source="rxiv-markdown",r.code="missing-figures-directory",n.push(r)}}}validateHeadingStructure(e,n,t,s){let i=0,o=!1;for(let d=0;d<e.length;d++){let g=e[d],p=g.match(/^(#{1,6})\s+(.+)$/);if(p){if(t&&this.isLineInCodeBlock(d,t))continue;let h=p[1].length,x=p[2].trim();if(!o&&h===1&&(o=!0),!x){let f=new b.Diagnostic(new b.Range(d,0,d,g.length),"Empty heading - headings should have descriptive text",b.DiagnosticSeverity.Warning);f.source="rxiv-markdown",f.code="empty-heading",s.push(f)}if(h>i+1&&i>0){let f=new b.Diagnostic(new b.Range(d,0,d,p[1].length),`Heading level skipped. Level ${h} follows level ${i}. Consider using level ${i+1} instead.`,b.DiagnosticSeverity.Information);f.source="rxiv-markdown",f.code="heading-level-skip",s.push(f)}if(i=h,x.endsWith(".")){let f=new b.Diagnostic(new b.Range(d,g.lastIndexOf("."),d,g.length),"Headings typically should not end with periods",b.DiagnosticSeverity.Information);f.source="rxiv-markdown",f.code="heading-period",s.push(f)}}}let a=$.basename(n.fileName);if(!o&&!(a==="02_SUPPLEMENTARY_INFO.md"||a==="02_SUPPLEMENTARY_INFO.rxm")){let d=new b.Diagnostic(new b.Range(0,0,0,0),"Document should start with a main title (# Title)",b.DiagnosticSeverity.Information);d.source="rxiv-markdown",d.code="missing-title",s.push(d)}}checkRequiredElements(e,n,t,s){let i=$.basename(n);if(i==="01_MAIN.md"||i==="01_MAIN.rxm"){let o=/!\[.*?\]\(.*?\)/.test(e)||/@fig:/.test(e),a=/@table:/.test(e)||e.includes("|")||e.includes("\\begin{table}");if(!o&&!a){let h=new b.Diagnostic(new b.Range(0,0,0,0),"Main manuscript typically should include figures or tables",b.DiagnosticSeverity.Information);h.source="rxiv-markdown",h.code="missing-figures-tables",s.push(h)}let r=t?N.filterMarkdownContent(e,{getText:E(()=>e,"getText"),fileName:n,languageId:"rxiv-markdown"},t):e,d=/\[@[a-zA-Z0-9_-]+(?:;@[a-zA-Z0-9_-]+)*\]/.test(r),g=/(?<![@\w])@[a-zA-Z0-9_-]+(?![:\w])/.test(r)&&!r.match(/(?<![@\w])@(fig|table|eq|sfig|stable|snote)(?![:\w])/);if(!(d||g)){let h=new b.Diagnostic(new b.Range(0,0,0,0),"Main manuscript should typically include citations",b.DiagnosticSeverity.Information);h.source="rxiv-markdown",h.code="missing-citations",s.push(h)}}if((i==="01_MAIN.md"||i==="01_MAIN.rxm")&&e.length>1e3&&!/^#+\s*(abstract|summary)/mi.test(e)){let a=new b.Diagnostic(new b.Range(0,0,0,0),"Consider adding an Abstract section to your manuscript",b.DiagnosticSeverity.Information);a.source="rxiv-markdown",a.code="missing-abstract",s.push(a)}}async validateFigureFiles(e,n,t){let s=$.dirname(n.fileName);for(let i=0;i<e.length;i++){let a=e[i].matchAll(/!\[([^\]]*)\]\(([^)]+)\)/g);for(let r of a){let d=r[1],g=r[2];if(g.startsWith("http://")||g.startsWith("https://"))continue;let p=$.resolve(s,g);try{await U.promises.access(p,U.constants.F_OK)}catch{let f=r.index+r[0].indexOf(g),S=new b.Diagnostic(new b.Range(i,f,i,f+g.length),`Figure file not found: ${g}`,b.DiagnosticSeverity.Error);S.source="rxiv-markdown",S.code="missing-figure-file",t.push(S)}let h=$.extname(g).toLowerCase(),x=[".png",".jpg",".jpeg",".pdf",".svg"];if(h&&!x.includes(h)){let f=r.index+r[0].indexOf(g),S=new b.Diagnostic(new b.Range(i,f,i,f+g.length),`Consider using recommended figure formats: ${x.join(", ")}`,b.DiagnosticSeverity.Information);S.source="rxiv-markdown",S.code="non-recommended-format",t.push(S)}}}}async checkOrphanedElements(e,n,t){let s=e.split(`
`),i=new Set,o=/\{#(s?(?:fig|table|eq|snote)):([a-zA-Z0-9_-]+)[^}]*\}/g,a;for(;(a=o.exec(e))!==null;){let d=a[1],g=a[2];i.add(`${d}:${g}`)}let r=await this.findAllReferencesInProject(n);for(let d of i)if(!r.has(d)){let g=e.match(new RegExp(`\\{#${d.replace(":",":")}[^}]*\\}`,"g"));if(g){let p=g[0],x=e.substring(0,e.indexOf(p)).split(`
`).length-1,f=new b.Diagnostic(new b.Range(x,0,x,s[x]?.length||0),`Label '${d}' is defined but never referenced in project`,b.DiagnosticSeverity.Information);f.source="rxiv-markdown",f.code="orphaned-label",t.push(f)}}this.checkUnusualPatterns(s,t)}async findAllReferencesInProject(e){let n=new Set,t=$.dirname(e.fileName),s=["01_MAIN.md","01_MAIN.rxm","02_SUPPLEMENTARY_INFO.md","02_SUPPLEMENTARY_INFO.rxm"],i=[];try{let o=await U.promises.readdir(t);for(let r of s)o.includes(r)&&i.push(r);let a=o.filter(r=>(r.endsWith(".rxm")||r.endsWith(".md"))&&!r.startsWith(".")&&!s.includes(r)&&r!=="README.md"&&r!=="CHANGELOG.md");i.push(...a);for(let r of i){let d=$.join(t,r);try{let g=await U.promises.readFile(d,"utf8"),p=/@(stable|sfig|fig|table|eq|snote):([a-zA-Z0-9_-]+)/g,h;for(;(h=p.exec(g))!==null;){let x=h[1],f=h[2];n.add(`${x}:${f}`)}}catch{continue}}}catch{let o=e.getText(),a=/@(stable|sfig|fig|table|eq|snote):([a-zA-Z0-9_-]+)/g,r;for(;(r=a.exec(o))!==null;){let d=r[1],g=r[2];n.add(`${d}:${g}`)}}return n}checkUnusualPatterns(e,n){for(let t=0;t<e.length;t++){let s=e[t];if(t<e.length-2){let i=!s.trim(),o=!e[t+1]?.trim(),a=!e[t+2]?.trim();if(i&&o&&a){let r=new b.Diagnostic(new b.Range(t,0,t+2,0),"Multiple consecutive empty lines - consider reducing for cleaner formatting",b.DiagnosticSeverity.Information);r.source="rxiv-markdown",r.code="multiple-empty-lines",n.push(r)}}if(s.match(/\s+$/)){let i=s.search(/\s+$/),o=new b.Diagnostic(new b.Range(t,i,t,s.length),"Trailing whitespace",b.DiagnosticSeverity.Information);o.source="rxiv-markdown",o.code="trailing-whitespace",n.push(o)}}}isLineInCodeBlock(e,n){let t=new b.Position(e,0);return N.isPositionInLatexBlock(t,n)||N.isPositionInPythonBlock(t,n)}};var ee=class{static{E(this,"RxivMarkdownDiagnosticsProvider")}diagnosticCollection;validators;disposables=[];constructor(){this.diagnosticCollection=q.languages.createDiagnosticCollection("rxiv-markdown"),this.validators=[new K,new X,new G,new Q,new J],this.setupEventHandlers()}setupEventHandlers(){let e=q.workspace.onDidChangeTextDocument(async i=>{this.isRxivMarkdownDocument(i.document)&&await this.validateDocument(i.document)}),n=q.workspace.onDidSaveTextDocument(async i=>{this.isRxivMarkdownDocument(i)&&await this.validateDocument(i)}),t=q.workspace.onDidOpenTextDocument(async i=>{this.isRxivMarkdownDocument(i)&&await this.validateDocument(i)}),s=q.workspace.onDidCloseTextDocument(i=>{this.isRxivMarkdownDocument(i)&&this.diagnosticCollection.delete(i.uri)});this.disposables.push(e,n,t,s)}isRxivMarkdownDocument(e){let n=e.fileName,t=n.endsWith(".rxm")||n.endsWith("01_MAIN.md")||n.endsWith("02_SUPPLEMENTARY_INFO.md");return e.languageId==="rxiv-markdown"||t}async validateDocument(e){if(this.isRxivMarkdownDocument(e))try{let n=[],t=N.parseDocument(e),s=await Promise.all(this.validators.map(i=>i.validate(e,t)));for(let i of s)n.push(...i);this.diagnosticCollection.set(e.uri,n)}catch(n){console.error("Error validating rxiv-markdown document:",n)}}async validateAllOpenDocuments(){let e=q.workspace.textDocuments.filter(n=>this.isRxivMarkdownDocument(n)).map(n=>this.validateDocument(n));await Promise.all(e)}clearAllDiagnostics(){this.diagnosticCollection.clear()}dispose(){this.diagnosticCollection.dispose(),this.disposables.forEach(e=>e.dispose()),this.disposables=[]}};function Te(y){console.log("Rxiv-Maker extension is now active!");let e=new ee;y.subscriptions.push(e);let n=new Map,t,s=E(()=>{t&&t.dispose(),l.workspace.getConfiguration("rxiv-maker").get("showStatusBarButton",!0)&&(t=l.window.createStatusBarItem(l.StatusBarAlignment.Left,100),t.command="rxiv-maker.makePdf",t.text="\u{1F4C4} rxiv PDF",t.tooltip="Build PDF with rxiv-maker",y.subscriptions.push(t))},"createStatusBarItem"),i=E(async c=>{if(!t)return;if(c||(c=l.window.activeTextEditor?.document),!c){t.hide();return}let u=R.basename(c.fileName);if(c.fileName.endsWith(".rxm")||u==="01_MAIN.md"||u==="02_SUPPLEMENTARY_INFO.md"||c.languageId==="rxiv-markdown"){let v=l.workspace.getWorkspaceFolder(c.uri);if(v){let m=v.uri.fsPath,k=n.get(m);k===void 0&&(k=await ie(m),n.set(m,k)),k?t.show():t.hide()}else t.hide()}else t.hide()},"updateStatusBarVisibility");s(),l.window.onDidChangeActiveTextEditor(c=>{i(c?.document)},null,y.subscriptions),l.workspace.onDidOpenTextDocument(i,null,y.subscriptions),l.workspace.onDidChangeConfiguration(c=>{c.affectsConfiguration("rxiv-maker.showStatusBarButton")&&(s(),i())},null,y.subscriptions);let o=l.workspace.onDidOpenTextDocument(async c=>{let u=R.basename(c.fileName);if(c.fileName.endsWith(".rxm")||u==="01_MAIN.md"||u==="02_SUPPLEMENTARY_INFO.md"){let v=l.workspace.getWorkspaceFolder(c.uri);if(v){let m=v.uri.fsPath,k=n.get(m);k===void 0&&(k=await ie(m),n.set(m,k)),k&&(await l.languages.setTextDocumentLanguage(c,"rxiv-markdown"),await e.validateDocument(c),await i(c))}}});setTimeout(async()=>{for(let c of l.workspace.textDocuments){let u=R.basename(c.fileName);if(c.fileName.endsWith(".rxm")||u==="01_MAIN.md"||u==="02_SUPPLEMENTARY_INFO.md"){let v=l.workspace.getWorkspaceFolder(c.uri);if(v){let m=v.uri.fsPath,k=n.get(m);k===void 0&&(k=await ie(m),n.set(m,k)),k&&(await l.languages.setTextDocumentLanguage(c,"rxiv-markdown"),await e.validateDocument(c),await i(c))}}}},500);let a=l.languages.registerCompletionItemProvider({language:"rxiv-markdown"},{async provideCompletionItems(c,u){return c.lineAt(u).text.substr(0,u.character).endsWith("@")?(await oe()).map(m=>{let k=new l.CompletionItem(m.key,l.CompletionItemKind.Reference);return k.detail=m.title||m.type,k.documentation=m.author||"",k.insertText=m.key,k}):[]}},"@"),r=l.languages.registerCompletionItemProvider({language:"rxiv-markdown"},{async provideCompletionItems(c,u){return c.lineAt(u).text.substr(0,u.character).endsWith("@")?(await te()).map(m=>{let k=m.supplementary?`s${m.type}:`:`${m.type}:`,I=new l.CompletionItem(`${k}${m.label}`,l.CompletionItemKind.Reference);return I.detail=`${m.type.toUpperCase()} reference`,I.documentation=`Line ${m.line+1}${m.supplementary?" (Supplementary)":""}`,I.insertText=`${k}${m.label}`,I}):[]}},"@"),d=l.commands.registerCommand("rxiv-maker.insertCitation",async()=>{let c=await oe();if(c.length===0){let v=[],m=l.window.activeTextEditor;if(m){let I=R.dirname(m.document.fileName);v.push(R.join(I,"03_REFERENCES.bib"))}if(l.workspace.workspaceFolders)for(let I of l.workspace.workspaceFolders){let z=R.join(I.uri.fsPath,"03_REFERENCES.bib");v.includes(z)||v.push(z)}let k=`No bibliography file (03_REFERENCES.bib) found.

Searched in:
${v.join(`
`)}

Please create 03_REFERENCES.bib in the same directory as your document.`;l.window.showWarningMessage(k);return}let u=c.map(v=>({label:v.key,description:v.title||v.type,detail:v.author||""})),w=await l.window.showQuickPick(u,{placeHolder:"Select citation to insert"});if(w){let v=l.window.activeTextEditor;if(v){let m=v.selection.active;await v.edit(k=>{k.insert(m,`@${w.label}`)})}}}),g=l.commands.registerCommand("rxiv-maker.insertFigureReference",async()=>{let u=(await te()).filter(m=>m.type==="fig");if(u.length===0){l.window.showWarningMessage("No figure labels found in the document");return}let w=u.map(m=>({label:m.label,description:m.supplementary?"Supplementary Figure":"Figure",detail:`Line ${m.line+1}`})),v=await l.window.showQuickPick(w,{placeHolder:"Select figure reference to insert"});if(v){let m=l.window.activeTextEditor;if(m){let k=m.selection.active,I=u.find(z=>z.label===v.label)?.supplementary?"@sfig:":"@fig:";await m.edit(z=>{z.insert(k,`${I}${v.label}`)})}}}),p=l.commands.registerCommand("rxiv-maker.insertTableReference",async()=>{let u=(await te()).filter(m=>m.type==="table");if(u.length===0){l.window.showWarningMessage("No table labels found in the document");return}let w=u.map(m=>({label:m.label,description:m.supplementary?"Supplementary Table":"Table",detail:`Line ${m.line+1}`})),v=await l.window.showQuickPick(w,{placeHolder:"Select table reference to insert"});if(v){let m=l.window.activeTextEditor;if(m){let k=m.selection.active,I=u.find(z=>z.label===v.label)?.supplementary?"@stable:":"@table:";await m.edit(z=>{z.insert(k,`${I}${v.label}`)})}}}),h=l.commands.registerCommand("rxiv-maker.insertEquationReference",async()=>{let u=(await te()).filter(m=>m.type==="eq");if(u.length===0){l.window.showWarningMessage("No equation labels found in the document");return}let w=u.map(m=>({label:m.label,description:"Equation",detail:`Line ${m.line+1}`})),v=await l.window.showQuickPick(w,{placeHolder:"Select equation reference to insert"});if(v){let m=l.window.activeTextEditor;if(m){let k=m.selection.active;await m.edit(I=>{I.insert(k,`@eq:${v.label}`)})}}}),x=new Map,f=E(c=>{let u=x.get(c);if(u&&u.exitStatus===void 0)return u;let w=`rxiv-maker: ${R.basename(c)||c}`,v=l.window.createTerminal({name:w,cwd:c});return x.set(c,v),l.window.onDidCloseTerminal(m=>{for(let[k,I]of x.entries())if(I===m){x.delete(k);break}}),v},"getRxivMakerTerminal"),S=l.commands.registerCommand("rxiv-maker.makeValidate",async()=>{let c=await ne();if(!c.success||!c.manuscriptPath){l.window.showErrorMessage(c.error||"Could not determine manuscript folder");return}let u=f(c.manuscriptPath);u.show(),u.sendText("rxiv validate .")}),C=l.commands.registerCommand("rxiv-maker.makePdf",async()=>{let c=await ne();if(!c.success||!c.manuscriptPath){l.window.showErrorMessage(c.error||"Could not determine manuscript folder");return}let u=f(c.manuscriptPath);u.show(),u.sendText("rxiv pdf .")}),L=l.commands.registerCommand("rxiv-maker.makeClean",async()=>{let c=await ne();if(!c.success||!c.manuscriptPath){l.window.showErrorMessage(c.error||"Could not determine manuscript folder");return}let u=f(c.manuscriptPath);u.show(),u.sendText("rxiv clean .")}),B=l.commands.registerCommand("rxiv-maker.installRxivMaker",async()=>{await l.window.withProgress({location:l.ProgressLocation.Notification,title:"Checking installation prerequisites...",cancellable:!1},async c=>{c.report({increment:50,message:"Checking pipx availability..."});let u=!1;try{await new Promise((m,k)=>{(0,ae.exec)("pipx --version",{timeout:5e3},(I,z,$e)=>{I||(u=!0),m()})})}catch{}if(!u){if(await l.window.showWarningMessage("pipx is required to install rxiv-maker. Would you like to see installation instructions?",{modal:!0},"Show Installation Instructions","Cancel")==="Show Installation Instructions"){let I=await l.workspace.openTextDocument({content:"# Install pipx (Python Package Manager)\n\n## macOS:\n```bash\nbrew install pipx\n```\n\n## Linux (Ubuntu/Debian):\n```bash\nsudo apt update\nsudo apt install pipx\n```\n\n## Linux (Other):\n```bash\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\n```\n\n## Windows:\n```powershell\npip install --user pipx\n```\n\nAfter installing pipx, restart VS Code and try again.",language:"markdown"});await l.window.showTextDocument(I)}return}if(await l.window.showInformationMessage("Install rxiv-maker using pipx? This will install rxiv-maker globally and make it available from any terminal.",{modal:!0},"Yes, install rxiv-maker","No, cancel")!=="Yes, install rxiv-maker")return;let v=l.window.createTerminal({name:"rxiv-maker-install"});v.show(),v.sendText('echo "Installing rxiv-maker with pipx..."'),v.sendText("pipx install rxiv-maker"),v.sendText('echo "Installation complete! You can now use rxiv commands."'),v.sendText("rxiv --version")})}),T=l.commands.registerCommand("rxiv-maker.makeAddBibliography",async()=>{let c=await ne();if(!c.success||!c.manuscriptPath){l.window.showErrorMessage(c.error||"Could not determine manuscript folder");return}let u=await l.window.showInputBox({prompt:"Enter DOI to add to bibliography",placeHolder:"e.g., 10.1000/example or https://doi.org/10.1000/example",validateInput:E(m=>{if(!m)return"DOI is required";if(!/^(https?:\/\/)?(dx\.)?doi\.org\/10\.|^10\./.test(m))return"Please enter a valid DOI (e.g., 10.1000/example)"},"validateInput")});if(!u)return;let w=u.replace(/^(https?:\/\/)?(dx\.)?doi\.org\//,""),v=f(c.manuscriptPath);v.show(),v.sendText(`rxiv bibliography add --manuscript-path . ${w}`)}),M=l.commands.registerCommand("rxiv-maker.insertBlindtext",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active;await c.edit(w=>{w.insert(u,"{{blindtext}}")})}}),re=l.commands.registerCommand("rxiv-maker.insertBlindtextParagraph",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active;await c.edit(w=>{w.insert(u,"{{Blindtext}}")})}}),ce=l.commands.registerCommand("rxiv-maker.insertPythonBlock",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active,w=c.selection;if(w.isEmpty){let v=new l.SnippetString(`{{py:
$1
}}`);await c.insertSnippet(v,u)}else{let v=c.document.getText(w);await c.edit(m=>{m.replace(w,`{{py:
${v}
}}`)})}}}),le=l.commands.registerCommand("rxiv-maker.insertPythonInline",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active,w=c.selection;if(w.isEmpty){let v=new l.SnippetString("{py: $1}");await c.insertSnippet(v,u)}else{let v=c.document.getText(w);await c.edit(m=>{m.replace(w,`{py: ${v}}`)})}}}),de=l.commands.registerCommand("rxiv-maker.insertPythonImport",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active,w=[{label:"datetime",detail:"Date and time operations"},{label:"math",detail:"Mathematical functions"},{label:"statistics",detail:"Statistical functions"},{label:"json",detail:"JSON encoder/decoder"},{label:"csv",detail:"CSV file reading/writing"},{label:"random",detail:"Generate random numbers"},{label:"collections",detail:"Specialized container datatypes"},{label:"itertools",detail:"Iterator building blocks"},{label:"functools",detail:"Higher-order functions and operations on functions"}],v=await l.window.showQuickPick(w,{placeHolder:"Select a module to import (or type a custom module name)"});if(v){let m=new l.SnippetString(`{py:import ${v.label}}`);await c.insertSnippet(m,u)}else{let m=await l.window.showInputBox({prompt:"Enter module name to import",placeHolder:"e.g., datetime"});if(m){let k=new l.SnippetString(`{py:import ${m}}`);await c.insertSnippet(k,u)}}}}),me=l.commands.registerCommand("rxiv-maker.insertPythonFromImport",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active,w=new l.SnippetString("{py:from ${1:module} import ${2:item}}");await c.insertSnippet(w,u)}}),pe=l.commands.registerCommand("rxiv-maker.insertPythonSet",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active,w=new l.SnippetString('{py:set ${1:variable_name} = ${2:"value"}}');await c.insertSnippet(w,u)}}),ge=l.commands.registerCommand("rxiv-maker.insertPythonGet",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active,w=new l.SnippetString("{py:get ${1:variable_name}}");await c.insertSnippet(w,u)}}),ue=l.commands.registerCommand("rxiv-maker.insertPythonContext",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active,w=new l.SnippetString('{py:context="${1:context_name}" ${2:code}}');await c.insertSnippet(w,u)}}),ve=l.commands.registerCommand("rxiv-maker.insertPythonFormat",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active,w=[{label:"number,2",detail:"Format number with 2 decimal places"},{label:"percentage,1",detail:"Format as percentage with 1 decimal place"},{label:"currency",detail:"Format as currency"},{label:"scientific,3",detail:"Format in scientific notation with 3 decimal places"},{label:"date,%Y-%m-%d",detail:"Format date as YYYY-MM-DD"},{label:"date,%B %d, %Y",detail:'Format date as "Month DD, YYYY"'},{label:"comma",detail:"Add thousand separators"}],v=await l.window.showQuickPick(w,{placeHolder:"Select a format specification"});if(v){let m=new l.SnippetString(`{py:format="${v.label}" \${1:expression}}`);await c.insertSnippet(m,u)}else{let m=new l.SnippetString('{py:format="${1:format_spec}" ${2:expression}}');await c.insertSnippet(m,u)}}}),he=l.commands.registerCommand("rxiv-maker.insertPythonGlobal",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active,w=new l.SnippetString('{py:global ${1:variable_name} = ${2:"value"}}');await c.insertSnippet(w,u)}}),fe=l.commands.registerCommand("rxiv-maker.insertPythonIf",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active,w=new l.SnippetString('{py:if ${1:condition}: "${2:true_value}" else: "${3:false_value}"}');await c.insertSnippet(w,u)}}),we=l.commands.registerCommand("rxiv-maker.insertTexBlock",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active,w=c.selection;if(w.isEmpty){let v=new l.SnippetString(`{{tex:
$1
}}`);await c.insertSnippet(v,u)}else{let v=c.document.getText(w);await c.edit(m=>{m.replace(w,`{{tex:
${v}
}}`)})}}}),xe=l.commands.registerCommand("rxiv-maker.insertTexInline",async()=>{let c=l.window.activeTextEditor;if(c){let u=c.selection.active,w=c.selection;if(w.isEmpty){let v=new l.SnippetString("{{tex: $1}}");await c.insertSnippet(v,u)}else{let v=c.document.getText(w);await c.edit(m=>{m.replace(w,`{{tex: ${v}}}`)})}}}),be=l.commands.registerCommand("rxiv-maker.validateDocument",async()=>{let c=l.window.activeTextEditor;c?(await e.validateDocument(c.document),l.window.showInformationMessage("Document validation completed")):l.window.showWarningMessage("No active document to validate")}),ye=l.commands.registerCommand("rxiv-maker.clearDiagnostics",()=>{e.clearAllDiagnostics(),l.window.showInformationMessage("All diagnostics cleared")}),ke=l.commands.registerCommand("rxiv-maker.validateAllDocuments",async()=>{await e.validateAllOpenDocuments(),l.window.showInformationMessage("All documents validated")});y.subscriptions.push(o,a,r,d,g,p,h,B,S,C,L,T,M,re,ce,le,de,me,pe,ge,ue,ve,he,fe,we,xe,be,ye,ke)}E(Te,"activate");async function oe(){let y=[],e=l.window.activeTextEditor;if(e){let t=R.dirname(e.document.fileName),s=R.join(t,"03_REFERENCES.bib");y.push(s),console.log("Rxiv-Maker: Searching for bibliography in current document directory:",s)}if(l.workspace.workspaceFolders)for(let t of l.workspace.workspaceFolders){let s=R.join(t.uri.fsPath,"03_REFERENCES.bib");y.includes(s)||(y.push(s),console.log("Rxiv-Maker: Searching for bibliography in workspace folder:",s))}let n=null;for(let t of y)try{await Z.promises.access(t,Z.constants.F_OK|Z.constants.R_OK),n=t,console.log("Rxiv-Maker: Found bibliography file at:",n);break}catch{console.log("Rxiv-Maker: Bibliography not found at:",t)}if(!n)return console.log("Rxiv-Maker: No bibliography file found in any search location"),[];try{let t=await Z.promises.readFile(n,"utf8"),s=[],i=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,o;for(;(o=i.exec(t))!==null;){let a=o[1],r=o[2],d=o.index,g=Me(t,d),p=t.substring(d,g),h=p.match(/title\s*=\s*[{"](.*?)["}]/),x=p.match(/author\s*=\s*[{"](.*?)["}]/),f=p.match(/year\s*=\s*[{"](.*?)["}]/);s.push({key:r,type:a,title:h?.[1],author:x?.[1],year:f?.[1]})}return s}catch(t){return t.code==="ENOENT"?[]:(console.error("Error parsing bibliography:",t),[])}}E(oe,"getBibEntries");async function te(){let y=[],e=[],n=l.window.activeTextEditor;if(n){let t=R.dirname(n.document.fileName);e.push(R.join(t,"01_MAIN.md")),e.push(R.join(t,"02_SUPPLEMENTARY_INFO.md"))}if(l.workspace.workspaceFolders)for(let t of l.workspace.workspaceFolders){let s=R.join(t.uri.fsPath,"01_MAIN.md"),i=R.join(t.uri.fsPath,"02_SUPPLEMENTARY_INFO.md");e.includes(s)||e.push(s),e.includes(i)||e.push(i)}for(let t of e)try{let i=(await Z.promises.readFile(t,"utf8")).split(`
`),o=t.includes("02_SUPPLEMENTARY_INFO");for(let a=0;a<i.length;a++){let r=i[a],d=/\{#(s?)((fig|table|eq|snote)):([a-zA-Z0-9_-]+)(?:\s[^}]*)?\}/g,g;for(;(g=d.exec(r))!==null;){let p=g[1]==="s"||o,h=g[2],x=g[4];y.push({type:h,label:x,line:a,supplementary:p})}}}catch{continue}return y}E(te,"getDocumentReferences");function Me(y,e){let n=0,t=!1,s="";for(let i=e;i<y.length;i++){let o=y[i];if(t)o===s&&y[i-1]!=="\\"&&(t=!1);else if(o==='"'||o==="'")t=!0,s=o;else if(o==="{")n++;else if(o==="}"&&(n--,n===0))return i+1}return y.length}E(Me,"findMatchingBrace");async function ie(y){try{let e=["00_CONFIG.yml","01_MAIN.rxm","01_MAIN.md","03_REFERENCES.bib"],n=["02_SUPPLEMENTARY_INFO.rxm","02_SUPPLEMENTARY_INFO.md"];return(await Promise.all(e.map(async i=>{try{return await Z.promises.access(R.join(y,i)),!0}catch{return!1}}))).filter(Boolean).length>=2}catch(e){return console.error("Error checking rxiv-maker project:",e),!1}}E(ie,"isRxivMakerProject");async function ne(){let y=l.window.activeTextEditor;if(!y)return{success:!1,error:"No active document. Please open a file in your manuscript folder."};let e=y.document.fileName,n=R.dirname(e),t=["00_CONFIG.yml","01_MAIN.md","01_MAIN.rxm","03_REFERENCES.bib"],s=await Promise.all(t.map(async o=>{try{return await Z.promises.access(R.join(n,o)),!0}catch{return!1}})),i;if(s.some(o=>o))i=n;else{let o=l.workspace.workspaceFolders;if(!o)return{success:!1,error:"No workspace folder found. Please open the manuscript folder in VS Code."};let a=null;for(let r of o){let d=r.uri.fsPath;if((await Promise.all(t.map(async p=>{try{return await Z.promises.access(R.join(d,p)),!0}catch{return!1}}))).some(p=>p)){a=d;break}}if(!a)return{success:!1,error:"No manuscript folder found. Please ensure your workspace contains a folder with rxiv-maker files (00_CONFIG.yml, 01_MAIN.md, etc.)"};i=a}return{success:!0,manuscriptPath:i}}E(ne,"findManuscriptFolder");function Ae(){}E(Ae,"deactivate");0&&(module.exports={activate,deactivate});
