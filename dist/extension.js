"use strict";var ae=Object.create;var N=Object.defineProperty;var re=Object.getOwnPropertyDescriptor;var ce=Object.getOwnPropertyNames;var le=Object.getPrototypeOf,de=Object.prototype.hasOwnProperty;var P=(r,a)=>N(r,"name",{value:a,configurable:!0});var me=(r,a)=>{for(var p in a)N(r,p,{get:a[p],enumerable:!0})},O=(r,a,p,c)=>{if(a&&typeof a=="object"||typeof a=="function")for(let m of ce(a))!de.call(r,m)&&m!==p&&N(r,m,{get:()=>a[m],enumerable:!(c=re(a,m))||c.enumerable});return r};var _=(r,a,p)=>(p=r!=null?ae(le(r)):{},O(a||!r||!r.__esModule?N(p,"default",{value:r,enumerable:!0}):p,r)),pe=r=>O(N({},"__esModule",{value:!0}),r);var we={};me(we,{activate:()=>ue,deactivate:()=>ve});module.exports=pe(we);var e=_(require("vscode")),k=_(require("fs")),l=_(require("path")),q=require("child_process"),C=_(require("os"));function ue(r){console.log("Rxiv-Maker extension is now active!");let a=new Map,p=e.workspace.onDidOpenTextDocument(async t=>{let o=l.basename(t.fileName);if(t.fileName.endsWith(".rxm")||o==="01_MAIN.md"||o==="02_SUPPLEMENTARY_INFO.md"){let i=e.workspace.getWorkspaceFolder(t.uri);if(i){let n=i.uri.fsPath,d=a.get(n);d===void 0&&(d=await H(n),a.set(n,d)),d&&await e.languages.setTextDocumentLanguage(t,"rxiv-markdown")}}});setTimeout(async()=>{for(let t of e.workspace.textDocuments){let o=l.basename(t.fileName);if(t.fileName.endsWith(".rxm")||o==="01_MAIN.md"||o==="02_SUPPLEMENTARY_INFO.md"){let i=e.workspace.getWorkspaceFolder(t.uri);if(i){let n=i.uri.fsPath,d=a.get(n);d===void 0&&(d=await H(n),a.set(n,d)),d&&await e.languages.setTextDocumentLanguage(t,"rxiv-markdown")}}}},500);let c=e.languages.registerCompletionItemProvider({language:"rxiv-markdown"},{async provideCompletionItems(t,o){return t.lineAt(o).text.substr(0,o.character).endsWith("@")?(await L()).map(n=>{let d=new e.CompletionItem(n.key,e.CompletionItemKind.Reference);return d.detail=n.title||n.type,d.documentation=n.author||"",d.insertText=n.key,d}):[]}},"@"),m=e.languages.registerCompletionItemProvider({language:"rxiv-markdown"},{async provideCompletionItems(t,o){return t.lineAt(o).text.substr(0,o.character).endsWith("@")?(await D()).map(n=>{let d=n.supplementary?`s${n.type}:`:`${n.type}:`,w=new e.CompletionItem(`${d}${n.label}`,e.CompletionItemKind.Reference);return w.detail=`${n.type.toUpperCase()} reference`,w.documentation=`Line ${n.line+1}${n.supplementary?" (Supplementary)":""}`,w.insertText=`${d}${n.label}`,w}):[]}},"@"),u=e.commands.registerCommand("rxiv-maker.insertCitation",async()=>{let t=await L();if(t.length===0){let i=[],n=e.window.activeTextEditor;if(n){let w=l.dirname(n.document.fileName);i.push(l.join(w,"03_REFERENCES.bib"))}if(e.workspace.workspaceFolders)for(let w of e.workspace.workspaceFolders){let x=l.join(w.uri.fsPath,"03_REFERENCES.bib");i.includes(x)||i.push(x)}let d=`No bibliography file (03_REFERENCES.bib) found.

Searched in:
${i.join(`
`)}

Please create 03_REFERENCES.bib in the same directory as your document.`;e.window.showWarningMessage(d);return}let o=t.map(i=>({label:i.key,description:i.title||i.type,detail:i.author||""})),s=await e.window.showQuickPick(o,{placeHolder:"Select citation to insert"});if(s){let i=e.window.activeTextEditor;if(i){let n=i.selection.active;await i.edit(d=>{d.insert(n,`@${s.label}`)})}}}),v=e.commands.registerCommand("rxiv-maker.insertFigureReference",async()=>{let o=(await D()).filter(n=>n.type==="fig");if(o.length===0){e.window.showWarningMessage("No figure labels found in the document");return}let s=o.map(n=>({label:n.label,description:n.supplementary?"Supplementary Figure":"Figure",detail:`Line ${n.line+1}`})),i=await e.window.showQuickPick(s,{placeHolder:"Select figure reference to insert"});if(i){let n=e.window.activeTextEditor;if(n){let d=n.selection.active,w=o.find(x=>x.label===i.label)?.supplementary?"@sfig:":"@fig:";await n.edit(x=>{x.insert(d,`${w}${i.label}`)})}}}),g=e.commands.registerCommand("rxiv-maker.insertTableReference",async()=>{let o=(await D()).filter(n=>n.type==="table");if(o.length===0){e.window.showWarningMessage("No table labels found in the document");return}let s=o.map(n=>({label:n.label,description:n.supplementary?"Supplementary Table":"Table",detail:`Line ${n.line+1}`})),i=await e.window.showQuickPick(s,{placeHolder:"Select table reference to insert"});if(i){let n=e.window.activeTextEditor;if(n){let d=n.selection.active,w=o.find(x=>x.label===i.label)?.supplementary?"@stable:":"@table:";await n.edit(x=>{x.insert(d,`${w}${i.label}`)})}}}),R=e.commands.registerCommand("rxiv-maker.insertEquationReference",async()=>{let o=(await D()).filter(n=>n.type==="eq");if(o.length===0){e.window.showWarningMessage("No equation labels found in the document");return}let s=o.map(n=>({label:n.label,description:"Equation",detail:`Line ${n.line+1}`})),i=await e.window.showQuickPick(s,{placeHolder:"Select equation reference to insert"});if(i){let n=e.window.activeTextEditor;if(n){let d=n.selection.active;await n.edit(w=>{w.insert(d,`@eq:${i.label}`)})}}}),f,y=P(t=>(f&&f.exitStatus===void 0||(f=e.window.createTerminal({name:"rxiv-maker",cwd:t}),e.window.onDidCloseTerminal(o=>{o===f&&(f=void 0)})),f),"getRxivMakerTerminal"),T=e.commands.registerCommand("rxiv-maker.makeValidate",async()=>{let t=await A();if(!t.success||!t.rxivMakerRoot){e.window.showErrorMessage(t.error||"Could not determine manuscript folder");return}let o=y(t.rxivMakerRoot);o.show(),o.sendText(`make validate MANUSCRIPT_PATH="${t.manuscriptPath}"`)}),E=e.commands.registerCommand("rxiv-maker.makePdf",async()=>{let t=await A();if(!t.success||!t.rxivMakerRoot){e.window.showErrorMessage(t.error||"Could not determine manuscript folder");return}let o=y(t.rxivMakerRoot);o.show(),o.sendText(`make pdf MANUSCRIPT_PATH="${t.manuscriptPath}"`)}),$=e.commands.registerCommand("rxiv-maker.makeClean",async()=>{let t=await A();if(!t.success||!t.rxivMakerRoot){e.window.showErrorMessage(t.error||"Could not determine manuscript folder");return}let o=y(t.rxivMakerRoot);o.show(),o.sendText(`make clean MANUSCRIPT_PATH="${t.manuscriptPath}"`)}),S=e.commands.registerCommand("rxiv-maker.installRxivMaker",async()=>{await e.window.withProgress({location:e.ProgressLocation.Notification,title:"Checking dependencies...",cancellable:!1},async t=>{let o=[{name:"git",command:"git --version"},{name:"make",command:"make --version"},{name:"python",command:C.platform()==="win32"?"python --version":"python3 --version"},{name:"latex",command:"pdflatex --version"}],s=[],i=0;for(let h of o){t.report({increment:25,message:`Checking ${h.name}...`});try{await new Promise((M,se)=>{(0,q.exec)(h.command,{timeout:5e3},(F,he,ge)=>{F&&s.push(h.name),M()})})}catch{s.push(h.name)}i++}if(s.length>0){let h={git:"Install Git from https://git-scm.com/",make:C.platform()==="win32"?"Install Visual Studio Build Tools or Git Bash":C.platform()==="darwin"?"Run: xcode-select --install":"Run: sudo apt install build-essential",python:"Install Python from https://python.org/",latex:C.platform()==="win32"?"Install MiKTeX from https://miktex.org/":C.platform()==="darwin"?"Install MacTeX from https://tug.org/mactex/":"Run: sudo apt install texlive-full"},M=`Missing dependencies: ${s.join(", ")}

Installation instructions:
${s.map(F=>`\u2022 ${F}: ${h[F]}`).join(`
`)}`;if(await e.window.showErrorMessage(`Cannot install rxiv-maker. Missing dependencies: ${s.join(", ")}`,"Show Instructions","Cancel")==="Show Instructions"){let F=await e.workspace.openTextDocument({content:M,language:"markdown"});await e.window.showTextDocument(F)}return}if(await e.window.showInformationMessage(`All required dependencies are installed. Would you like to clone the rxiv-maker repository and run setup?

Note: The setup process will automatically create a Python virtual environment (.venv) if needed.`,{modal:!0},"Yes, install rxiv-maker","No, cancel")!=="Yes, install rxiv-maker")return;let w=[];if(e.workspace.workspaceFolders)for(let h of e.workspace.workspaceFolders)w.push({label:`$(folder) ${l.basename(h.uri.fsPath)}`,description:h.uri.fsPath,detail:"Install in this workspace folder"});let x=C.homedir(),ie=[{path:l.join(x,"Documents","GitHub"),label:"Documents/GitHub"},{path:l.join(x,"Documents"),label:"Documents"},{path:l.join(x,"Desktop"),label:"Desktop"},{path:x,label:"Home directory"}];for(let h of ie)w.some(M=>M.description===h.path)||w.push({label:`$(home) ${h.label}`,description:h.path,detail:"Common installation location"});w.push({label:"$(edit) Custom path...",description:"custom",detail:"Enter a custom installation path"});let j=await e.window.showQuickPick(w,{placeHolder:"Select where to install rxiv-maker",matchOnDescription:!0});if(!j)return;let I;if(j.description==="custom"){let h=await e.window.showInputBox({prompt:"Enter custom directory where you want to install rxiv-maker",value:l.join(x,"Documents","GitHub"),validateInput:P(M=>{if(!M)return"Installation directory is required"},"validateInput")});if(!h)return;I=h}else I=j.description;if(!I)return;let B=I.startsWith("~")?l.join(C.homedir(),I.slice(1)):I;try{await k.promises.mkdir(B,{recursive:!0})}catch(h){e.window.showErrorMessage(`Failed to create installation directory: ${B}
${h}`);return}let b=e.window.createTerminal({name:"rxiv-maker-install",cwd:B});b.show(),C.platform()==="win32"?(b.sendText("echo Installing rxiv-maker..."),b.sendText("git clone https://github.com/HenriquesLab/rxiv-maker.git"),b.sendText("cd rxiv-maker"),b.sendText("make setup"),b.sendText("echo rxiv-maker installation complete!")):(b.sendText('echo "Installing rxiv-maker..."'),b.sendText("git clone https://github.com/HenriquesLab/rxiv-maker.git"),b.sendText("cd rxiv-maker"),b.sendText("make setup"),b.sendText('echo "rxiv-maker installation complete!"'),b.sendText('echo "You can now create manuscripts using the rxiv-maker framework."'))})}),Y=e.commands.registerCommand("rxiv-maker.makeAddBibliography",async()=>{let t=await A();if(!t.success||!t.rxivMakerRoot){e.window.showErrorMessage(t.error||"Could not determine manuscript folder");return}let o=await e.window.showInputBox({prompt:"Enter DOI to add to bibliography",placeHolder:"e.g., 10.1000/example or https://doi.org/10.1000/example",validateInput:P(n=>{if(!n)return"DOI is required";if(!/^(https?:\/\/)?(dx\.)?doi\.org\/10\.|^10\./.test(n))return"Please enter a valid DOI (e.g., 10.1000/example)"},"validateInput")});if(!o)return;let s=o.replace(/^(https?:\/\/)?(dx\.)?doi\.org\//,""),i=y(t.rxivMakerRoot);i.show(),i.sendText(`make add-bibliography ${s} MANUSCRIPT_PATH="${t.manuscriptPath}"`)}),U=e.commands.registerCommand("rxiv-maker.insertBlindtext",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active;await t.edit(s=>{s.insert(o,"{{blindtext}}")})}}),G=e.commands.registerCommand("rxiv-maker.insertBlindtextParagraph",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active;await t.edit(s=>{s.insert(o,"{{Blindtext}}")})}}),W=e.commands.registerCommand("rxiv-maker.insertPythonBlock",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active,s=t.selection;if(s.isEmpty){let i=new e.SnippetString(`{{py:
$1
}}`);await t.insertSnippet(i,o)}else{let i=t.document.getText(s);await t.edit(n=>{n.replace(s,`{{py:
${i}
}}`)})}}}),K=e.commands.registerCommand("rxiv-maker.insertPythonInline",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active,s=t.selection;if(s.isEmpty){let i=new e.SnippetString("{py: $1}");await t.insertSnippet(i,o)}else{let i=t.document.getText(s);await t.edit(n=>{n.replace(s,`{py: ${i}}`)})}}}),Q=e.commands.registerCommand("rxiv-maker.insertPythonImport",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active,s=[{label:"datetime",detail:"Date and time operations"},{label:"math",detail:"Mathematical functions"},{label:"statistics",detail:"Statistical functions"},{label:"json",detail:"JSON encoder/decoder"},{label:"csv",detail:"CSV file reading/writing"},{label:"random",detail:"Generate random numbers"},{label:"collections",detail:"Specialized container datatypes"},{label:"itertools",detail:"Iterator building blocks"},{label:"functools",detail:"Higher-order functions and operations on functions"}],i=await e.window.showQuickPick(s,{placeHolder:"Select a module to import (or type a custom module name)"});if(i){let n=new e.SnippetString(`{py:import ${i.label}}`);await t.insertSnippet(n,o)}else{let n=await e.window.showInputBox({prompt:"Enter module name to import",placeHolder:"e.g., datetime"});if(n){let d=new e.SnippetString(`{py:import ${n}}`);await t.insertSnippet(d,o)}}}}),V=e.commands.registerCommand("rxiv-maker.insertPythonFromImport",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active,s=new e.SnippetString("{py:from ${1:module} import ${2:item}}");await t.insertSnippet(s,o)}}),z=e.commands.registerCommand("rxiv-maker.insertPythonSet",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active,s=new e.SnippetString('{py:set ${1:variable_name} = ${2:"value"}}');await t.insertSnippet(s,o)}}),X=e.commands.registerCommand("rxiv-maker.insertPythonGet",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active,s=new e.SnippetString("{py:get ${1:variable_name}}");await t.insertSnippet(s,o)}}),J=e.commands.registerCommand("rxiv-maker.insertPythonContext",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active,s=new e.SnippetString('{py:context="${1:context_name}" ${2:code}}');await t.insertSnippet(s,o)}}),Z=e.commands.registerCommand("rxiv-maker.insertPythonFormat",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active,s=[{label:"number,2",detail:"Format number with 2 decimal places"},{label:"percentage,1",detail:"Format as percentage with 1 decimal place"},{label:"currency",detail:"Format as currency"},{label:"scientific,3",detail:"Format in scientific notation with 3 decimal places"},{label:"date,%Y-%m-%d",detail:"Format date as YYYY-MM-DD"},{label:"date,%B %d, %Y",detail:'Format date as "Month DD, YYYY"'},{label:"comma",detail:"Add thousand separators"}],i=await e.window.showQuickPick(s,{placeHolder:"Select a format specification"});if(i){let n=new e.SnippetString(`{py:format="${i.label}" \${1:expression}}`);await t.insertSnippet(n,o)}else{let n=new e.SnippetString('{py:format="${1:format_spec}" ${2:expression}}');await t.insertSnippet(n,o)}}}),ee=e.commands.registerCommand("rxiv-maker.insertPythonGlobal",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active,s=new e.SnippetString('{py:global ${1:variable_name} = ${2:"value"}}');await t.insertSnippet(s,o)}}),te=e.commands.registerCommand("rxiv-maker.insertPythonIf",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active,s=new e.SnippetString('{py:if ${1:condition}: "${2:true_value}" else: "${3:false_value}"}');await t.insertSnippet(s,o)}}),ne=e.commands.registerCommand("rxiv-maker.insertTexBlock",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active,s=t.selection;if(s.isEmpty){let i=new e.SnippetString(`{{tex:
$1
}}`);await t.insertSnippet(i,o)}else{let i=t.document.getText(s);await t.edit(n=>{n.replace(s,`{{tex:
${i}
}}`)})}}}),oe=e.commands.registerCommand("rxiv-maker.insertTexInline",async()=>{let t=e.window.activeTextEditor;if(t){let o=t.selection.active,s=t.selection;if(s.isEmpty){let i=new e.SnippetString("{{tex: $1}}");await t.insertSnippet(i,o)}else{let i=t.document.getText(s);await t.edit(n=>{n.replace(s,`{{tex: ${i}}}`)})}}});r.subscriptions.push(p,c,m,u,v,g,R,S,T,E,$,Y,U,G,W,K,Q,V,z,X,J,Z,ee,te,ne,oe)}P(ue,"activate");async function L(){let r=[],a=e.window.activeTextEditor;if(a){let c=l.dirname(a.document.fileName),m=l.join(c,"03_REFERENCES.bib");r.push(m),console.log("Rxiv-Maker: Searching for bibliography in current document directory:",m)}if(e.workspace.workspaceFolders)for(let c of e.workspace.workspaceFolders){let m=l.join(c.uri.fsPath,"03_REFERENCES.bib");r.includes(m)||(r.push(m),console.log("Rxiv-Maker: Searching for bibliography in workspace folder:",m))}let p=null;for(let c of r)try{await k.promises.access(c,k.constants.F_OK|k.constants.R_OK),p=c,console.log("Rxiv-Maker: Found bibliography file at:",p);break}catch{console.log("Rxiv-Maker: Bibliography not found at:",c)}if(!p)return console.log("Rxiv-Maker: No bibliography file found in any search location"),[];try{let c=await k.promises.readFile(p,"utf8"),m=[],u=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,v;for(;(v=u.exec(c))!==null;){let g=v[1],R=v[2],f=v.index,y=fe(c,f),T=c.substring(f,y),E=T.match(/title\s*=\s*[{"](.*?)["}]/),$=T.match(/author\s*=\s*[{"](.*?)["}]/),S=T.match(/year\s*=\s*[{"](.*?)["}]/);m.push({key:R,type:g,title:E?.[1],author:$?.[1],year:S?.[1]})}return m}catch(c){return c.code==="ENOENT"?[]:(console.error("Error parsing bibliography:",c),[])}}P(L,"getBibEntries");async function D(){let r=[],a=[],p=e.window.activeTextEditor;if(p){let c=l.dirname(p.document.fileName);a.push(l.join(c,"01_MAIN.md")),a.push(l.join(c,"02_SUPPLEMENTARY_INFO.md"))}if(e.workspace.workspaceFolders)for(let c of e.workspace.workspaceFolders){let m=l.join(c.uri.fsPath,"01_MAIN.md"),u=l.join(c.uri.fsPath,"02_SUPPLEMENTARY_INFO.md");a.includes(m)||a.push(m),a.includes(u)||a.push(u)}for(let c of a)try{let u=(await k.promises.readFile(c,"utf8")).split(`
`),v=c.includes("02_SUPPLEMENTARY_INFO");for(let g=0;g<u.length;g++){let R=u[g],f=/\{#(s?)((fig|table|eq|snote)):([a-zA-Z0-9_-]+)(?:\s[^}]*)?\}/g,y;for(;(y=f.exec(R))!==null;){let T=y[1]==="s"||v,E=y[2],$=y[4];r.push({type:E,label:$,line:g,supplementary:T})}}}catch{continue}return r}P(D,"getDocumentReferences");function fe(r,a){let p=0,c=!1,m="";for(let u=a;u<r.length;u++){let v=r[u];if(c)v===m&&r[u-1]!=="\\"&&(c=!1);else if(v==='"'||v==="'")c=!0,m=v;else if(v==="{")p++;else if(v==="}"&&(p--,p===0))return u+1}return r.length}P(fe,"findMatchingBrace");async function H(r){try{let a=["00_CONFIG.yml","01_MAIN.rxm","01_MAIN.md","03_REFERENCES.bib"],p=["02_SUPPLEMENTARY_INFO.rxm","02_SUPPLEMENTARY_INFO.md"];return(await Promise.all(a.map(async u=>{try{return await k.promises.access(l.join(r,u)),!0}catch{return!1}}))).filter(Boolean).length>=2}catch(a){return console.error("Error checking rxiv-maker project:",a),!1}}P(H,"isRxivMakerProject");async function A(){let r=e.window.activeTextEditor;if(!r)return{success:!1,error:"No active document. Please open a file in your manuscript folder."};let a=r.document.fileName,p=l.dirname(a),c=["00_CONFIG.yml","01_MAIN.md","01_MAIN.rxm","03_REFERENCES.bib"],m=await Promise.all(c.map(async f=>{try{return await k.promises.access(l.join(p,f)),!0}catch{return!1}})),u;if(m.some(f=>f))u=p;else{let f=e.workspace.workspaceFolders;if(!f)return{success:!1,error:"No workspace folder found. Please open the manuscript folder in VS Code."};let y=null;for(let T of f){let E=T.uri.fsPath;if((await Promise.all(c.map(async S=>{try{return await k.promises.access(l.join(E,S)),!0}catch{return!1}}))).some(S=>S)){y=E;break}}if(!y)return{success:!1,error:"No manuscript folder found. Please ensure your workspace contains a folder with rxiv-maker files (00_CONFIG.yml, 01_MAIN.md, etc.)"};u=y}let v=null,g=u;for(;g!==l.dirname(g);){try{await k.promises.access(l.join(g,"Makefile"));let f=await k.promises.readFile(l.join(g,"Makefile"),"utf8");if(f.includes("Rxiv-Maker")||f.includes("MANUSCRIPT_PATH")){v=g;break}}catch{}g=l.dirname(g)}return v?{success:!0,manuscriptPath:l.relative(v,u)||".",rxivMakerRoot:v}:{success:!1,error:"Could not find rxiv-maker root directory (no Makefile found). Please ensure you have the rxiv-maker repository cloned and accessible."}}P(A,"findManuscriptFolder");function ve(){}P(ve,"deactivate");0&&(module.exports={activate,deactivate});
