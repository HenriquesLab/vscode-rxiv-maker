"use strict";var ce=Object.create;var A=Object.defineProperty;var le=Object.getOwnPropertyDescriptor;var de=Object.getOwnPropertyNames;var me=Object.getPrototypeOf,pe=Object.prototype.hasOwnProperty;var T=(r,a)=>A(r,"name",{value:a,configurable:!0});var ue=(r,a)=>{for(var c in a)A(r,c,{get:a[c],enumerable:!0})},G=(r,a,c,l)=>{if(a&&typeof a=="object"||typeof a=="function")for(let m of de(a))!pe.call(r,m)&&m!==c&&A(r,m,{get:()=>a[m],enumerable:!(l=le(a,m))||l.enumerable});return r};var j=(r,a,c)=>(c=r!=null?ce(me(r)):{},G(a||!r||!r.__esModule?A(c,"default",{value:r,enumerable:!0}):c,r)),fe=r=>G(A({},"__esModule",{value:!0}),r);var ge={};ue(ge,{activate:()=>we,deactivate:()=>he});module.exports=fe(ge);var e=j(require("vscode")),E=j(require("fs")),d=j(require("path")),Q=require("child_process"),I=j(require("os"));function we(r){console.log("Rxiv-Maker extension is now active!");let a=new Map,c=e.workspace.onDidOpenTextDocument(async t=>{let n=d.basename(t.fileName);if(t.fileName.endsWith(".rxm")||n==="01_MAIN.md"||n==="02_SUPPLEMENTARY_INFO.md"){let i=e.workspace.getWorkspaceFolder(t.uri);if(i){let o=i.uri.fsPath,v=a.get(o);v===void 0&&(v=await W(o),a.set(o,v)),v&&await e.languages.setTextDocumentLanguage(t,"rxiv-markdown")}}});setTimeout(async()=>{for(let t of e.workspace.textDocuments){let n=d.basename(t.fileName);if(t.fileName.endsWith(".rxm")||n==="01_MAIN.md"||n==="02_SUPPLEMENTARY_INFO.md"){let i=e.workspace.getWorkspaceFolder(t.uri);if(i){let o=i.uri.fsPath,v=a.get(o);v===void 0&&(v=await W(o),a.set(o,v)),v&&await e.languages.setTextDocumentLanguage(t,"rxiv-markdown")}}}},500);let l=e.languages.registerCompletionItemProvider({language:"rxiv-markdown"},new Y,"@"),m=e.languages.registerCompletionItemProvider({language:"rxiv-markdown"},new U,"@"),f=e.commands.registerCommand("rxiv-maker.insertCitation",async()=>{let t=await K();if(t.length===0){let i=[],o=e.window.activeTextEditor;if(o){let C=d.dirname(o.document.fileName);i.push(d.join(C,"03_REFERENCES.bib"))}if(e.workspace.workspaceFolders)for(let C of e.workspace.workspaceFolders){let P=d.join(C.uri.fsPath,"03_REFERENCES.bib");i.includes(P)||i.push(P)}let v=`No bibliography file (03_REFERENCES.bib) found.

Searched in:
${i.join(`
`)}

Please create 03_REFERENCES.bib in the same directory as your document.`;e.window.showWarningMessage(v);return}let n=t.map(i=>({label:i.key,description:i.title||i.type,detail:i.author||""})),s=await e.window.showQuickPick(n,{placeHolder:"Select citation to insert"});if(s){let i=e.window.activeTextEditor;if(i){let o=i.selection.active;await i.edit(v=>{v.insert(o,`@${s.label}`)})}}}),u=e.commands.registerCommand("rxiv-maker.insertFigureReference",async()=>{let n=(await O()).filter(o=>o.type==="fig");if(n.length===0){e.window.showWarningMessage("No figure labels found in the document");return}let s=n.map(o=>({label:o.label,description:o.supplementary?"Supplementary Figure":"Figure",detail:`Line ${o.line+1}`})),i=await e.window.showQuickPick(s,{placeHolder:"Select figure reference to insert"});if(i){let o=e.window.activeTextEditor;if(o){let v=o.selection.active,C=n.find(P=>P.label===i.label)?.supplementary?"@sfig:":"@fig:";await o.edit(P=>{P.insert(v,`${C}${i.label}`)})}}}),w=e.commands.registerCommand("rxiv-maker.insertTableReference",async()=>{let n=(await O()).filter(o=>o.type==="table");if(n.length===0){e.window.showWarningMessage("No table labels found in the document");return}let s=n.map(o=>({label:o.label,description:o.supplementary?"Supplementary Table":"Table",detail:`Line ${o.line+1}`})),i=await e.window.showQuickPick(s,{placeHolder:"Select table reference to insert"});if(i){let o=e.window.activeTextEditor;if(o){let v=o.selection.active,C=n.find(P=>P.label===i.label)?.supplementary?"@stable:":"@table:";await o.edit(P=>{P.insert(v,`${C}${i.label}`)})}}}),g=e.commands.registerCommand("rxiv-maker.insertEquationReference",async()=>{let n=(await O()).filter(o=>o.type==="eq");if(n.length===0){e.window.showWarningMessage("No equation labels found in the document");return}let s=n.map(o=>({label:o.label,description:"Equation",detail:`Line ${o.line+1}`})),i=await e.window.showQuickPick(s,{placeHolder:"Select equation reference to insert"});if(i){let o=e.window.activeTextEditor;if(o){let v=o.selection.active;await o.edit(C=>{C.insert(v,`@eq:${i.label}`)})}}}),p,x=T(t=>(p&&p.exitStatus===void 0||(p=e.window.createTerminal({name:"rxiv-maker",cwd:t}),e.window.onDidCloseTerminal(n=>{n===p&&(p=void 0)})),p),"getRxivMakerTerminal"),b=e.commands.registerCommand("rxiv-maker.makeValidate",async()=>{let t=await B();if(!t.success||!t.rxivMakerRoot){e.window.showErrorMessage(t.error||"Could not determine manuscript folder");return}let n=x(t.rxivMakerRoot);n.show(),n.sendText(`make validate MANUSCRIPT_PATH="${t.manuscriptPath}"`)}),S=e.commands.registerCommand("rxiv-maker.makePdf",async()=>{let t=await B();if(!t.success||!t.rxivMakerRoot){e.window.showErrorMessage(t.error||"Could not determine manuscript folder");return}let n=x(t.rxivMakerRoot);n.show(),n.sendText(`make pdf MANUSCRIPT_PATH="${t.manuscriptPath}"`)}),$=e.commands.registerCommand("rxiv-maker.makeClean",async()=>{let t=await B();if(!t.success||!t.rxivMakerRoot){e.window.showErrorMessage(t.error||"Could not determine manuscript folder");return}let n=x(t.rxivMakerRoot);n.show(),n.sendText(`make clean MANUSCRIPT_PATH="${t.manuscriptPath}"`)}),M=e.commands.registerCommand("rxiv-maker.installRxivMaker",async()=>{await e.window.withProgress({location:e.ProgressLocation.Notification,title:"Checking dependencies...",cancellable:!1},async t=>{let n=[{name:"git",command:"git --version"},{name:"make",command:"make --version"},{name:"python",command:I.platform()==="win32"?"python --version":"python3 --version"},{name:"latex",command:"pdflatex --version"}],s=[],i=0;for(let k of n){t.report({increment:25,message:`Checking ${k.name}...`});try{await new Promise((N,re)=>{(0,Q.exec)(k.command,{timeout:5e3},(D,xe,ye)=>{D&&s.push(k.name),N()})})}catch{s.push(k.name)}i++}if(s.length>0){let k={git:"Install Git from https://git-scm.com/",make:I.platform()==="win32"?"Install Visual Studio Build Tools or Git Bash":I.platform()==="darwin"?"Run: xcode-select --install":"Run: sudo apt install build-essential",python:"Install Python from https://python.org/",latex:I.platform()==="win32"?"Install MiKTeX from https://miktex.org/":I.platform()==="darwin"?"Install MacTeX from https://tug.org/mactex/":"Run: sudo apt install texlive-full"},N=`Missing dependencies: ${s.join(", ")}

Installation instructions:
${s.map(D=>`\u2022 ${D}: ${k[D]}`).join(`
`)}`;if(await e.window.showErrorMessage(`Cannot install rxiv-maker. Missing dependencies: ${s.join(", ")}`,"Show Instructions","Cancel")==="Show Instructions"){let D=await e.workspace.openTextDocument({content:N,language:"markdown"});await e.window.showTextDocument(D)}return}if(await e.window.showInformationMessage(`All required dependencies are installed. Would you like to clone the rxiv-maker repository and run setup?

Note: The setup process will automatically create a Python virtual environment (.venv) if needed.`,{modal:!0},"Yes, install rxiv-maker","No, cancel")!=="Yes, install rxiv-maker")return;let C=[];if(e.workspace.workspaceFolders)for(let k of e.workspace.workspaceFolders)C.push({label:`$(folder) ${d.basename(k.uri.fsPath)}`,description:k.uri.fsPath,detail:"Install in this workspace folder"});let P=I.homedir(),ae=[{path:d.join(P,"Documents","GitHub"),label:"Documents/GitHub"},{path:d.join(P,"Documents"),label:"Documents"},{path:d.join(P,"Desktop"),label:"Desktop"},{path:P,label:"Home directory"}];for(let k of ae)C.some(N=>N.description===k.path)||C.push({label:`$(home) ${k.label}`,description:k.path,detail:"Common installation location"});C.push({label:"$(edit) Custom path...",description:"custom",detail:"Enter a custom installation path"});let L=await e.window.showQuickPick(C,{placeHolder:"Select where to install rxiv-maker",matchOnDescription:!0});if(!L)return;let _;if(L.description==="custom"){let k=await e.window.showInputBox({prompt:"Enter custom directory where you want to install rxiv-maker",value:d.join(P,"Documents","GitHub"),validateInput:T(N=>{if(!N)return"Installation directory is required"},"validateInput")});if(!k)return;_=k}else _=L.description;if(!_)return;let q=_.startsWith("~")?d.join(I.homedir(),_.slice(1)):_;try{await E.promises.mkdir(q,{recursive:!0})}catch(k){e.window.showErrorMessage(`Failed to create installation directory: ${q}
${k}`);return}let R=e.window.createTerminal({name:"rxiv-maker-install",cwd:q});R.show(),I.platform()==="win32"?(R.sendText("echo Installing rxiv-maker..."),R.sendText("git clone https://github.com/HenriquesLab/rxiv-maker.git"),R.sendText("cd rxiv-maker"),R.sendText("make setup"),R.sendText("echo rxiv-maker installation complete!")):(R.sendText('echo "Installing rxiv-maker..."'),R.sendText("git clone https://github.com/HenriquesLab/rxiv-maker.git"),R.sendText("cd rxiv-maker"),R.sendText("make setup"),R.sendText('echo "rxiv-maker installation complete!"'),R.sendText('echo "You can now create manuscripts using the rxiv-maker framework."'))})}),F=e.commands.registerCommand("rxiv-maker.makeAddBibliography",async()=>{let t=await B();if(!t.success||!t.rxivMakerRoot){e.window.showErrorMessage(t.error||"Could not determine manuscript folder");return}let n=await e.window.showInputBox({prompt:"Enter DOI to add to bibliography",placeHolder:"e.g., 10.1000/example or https://doi.org/10.1000/example",validateInput:T(o=>{if(!o)return"DOI is required";if(!/^(https?:\/\/)?(dx\.)?doi\.org\/10\.|^10\./.test(o))return"Please enter a valid DOI (e.g., 10.1000/example)"},"validateInput")});if(!n)return;let s=n.replace(/^(https?:\/\/)?(dx\.)?doi\.org\//,""),i=x(t.rxivMakerRoot);i.show(),i.sendText(`make add-bibliography ${s} MANUSCRIPT_PATH="${t.manuscriptPath}"`)}),h=e.commands.registerCommand("rxiv-maker.insertBlindtext",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active;await t.edit(s=>{s.insert(n,"{{blindtext}}")})}}),y=e.commands.registerCommand("rxiv-maker.insertBlindtextParagraph",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active;await t.edit(s=>{s.insert(n,"{{Blindtext}}")})}}),H=e.commands.registerCommand("rxiv-maker.insertPythonBlock",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active,s=t.selection;if(s.isEmpty){let i=new e.SnippetString(`{{py:
$1
}}`);await t.insertSnippet(i,n)}else{let i=t.document.getText(s);await t.edit(o=>{o.replace(s,`{{py:
${i}
}}`)})}}}),V=e.commands.registerCommand("rxiv-maker.insertPythonInline",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active,s=t.selection;if(s.isEmpty){let i=new e.SnippetString("{py: $1}");await t.insertSnippet(i,n)}else{let i=t.document.getText(s);await t.edit(o=>{o.replace(s,`{py: ${i}}`)})}}}),z=e.commands.registerCommand("rxiv-maker.insertPythonImport",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active,s=[{label:"datetime",detail:"Date and time operations"},{label:"math",detail:"Mathematical functions"},{label:"statistics",detail:"Statistical functions"},{label:"json",detail:"JSON encoder/decoder"},{label:"csv",detail:"CSV file reading/writing"},{label:"random",detail:"Generate random numbers"},{label:"collections",detail:"Specialized container datatypes"},{label:"itertools",detail:"Iterator building blocks"},{label:"functools",detail:"Higher-order functions and operations on functions"}],i=await e.window.showQuickPick(s,{placeHolder:"Select a module to import (or type a custom module name)"});if(i){let o=new e.SnippetString(`{py:import ${i.label}}`);await t.insertSnippet(o,n)}else{let o=await e.window.showInputBox({prompt:"Enter module name to import",placeHolder:"e.g., datetime"});if(o){let v=new e.SnippetString(`{py:import ${o}}`);await t.insertSnippet(v,n)}}}}),X=e.commands.registerCommand("rxiv-maker.insertPythonFromImport",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active,s=new e.SnippetString("{py:from ${1:module} import ${2:item}}");await t.insertSnippet(s,n)}}),J=e.commands.registerCommand("rxiv-maker.insertPythonSet",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active,s=new e.SnippetString('{py:set ${1:variable_name} = ${2:"value"}}');await t.insertSnippet(s,n)}}),Z=e.commands.registerCommand("rxiv-maker.insertPythonGet",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active,s=new e.SnippetString("{py:get ${1:variable_name}}");await t.insertSnippet(s,n)}}),ee=e.commands.registerCommand("rxiv-maker.insertPythonContext",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active,s=new e.SnippetString('{py:context="${1:context_name}" ${2:code}}');await t.insertSnippet(s,n)}}),te=e.commands.registerCommand("rxiv-maker.insertPythonFormat",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active,s=[{label:"number,2",detail:"Format number with 2 decimal places"},{label:"percentage,1",detail:"Format as percentage with 1 decimal place"},{label:"currency",detail:"Format as currency"},{label:"scientific,3",detail:"Format in scientific notation with 3 decimal places"},{label:"date,%Y-%m-%d",detail:"Format date as YYYY-MM-DD"},{label:"date,%B %d, %Y",detail:'Format date as "Month DD, YYYY"'},{label:"comma",detail:"Add thousand separators"}],i=await e.window.showQuickPick(s,{placeHolder:"Select a format specification"});if(i){let o=new e.SnippetString(`{py:format="${i.label}" \${1:expression}}`);await t.insertSnippet(o,n)}else{let o=new e.SnippetString('{py:format="${1:format_spec}" ${2:expression}}');await t.insertSnippet(o,n)}}}),ne=e.commands.registerCommand("rxiv-maker.insertPythonGlobal",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active,s=new e.SnippetString('{py:global ${1:variable_name} = ${2:"value"}}');await t.insertSnippet(s,n)}}),oe=e.commands.registerCommand("rxiv-maker.insertPythonIf",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active,s=new e.SnippetString('{py:if ${1:condition}: "${2:true_value}" else: "${3:false_value}"}');await t.insertSnippet(s,n)}}),ie=e.commands.registerCommand("rxiv-maker.insertTexBlock",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active,s=t.selection;if(s.isEmpty){let i=new e.SnippetString(`{{tex:
$1
}}`);await t.insertSnippet(i,n)}else{let i=t.document.getText(s);await t.edit(o=>{o.replace(s,`{{tex:
${i}
}}`)})}}}),se=e.commands.registerCommand("rxiv-maker.insertTexInline",async()=>{let t=e.window.activeTextEditor;if(t){let n=t.selection.active,s=t.selection;if(s.isEmpty){let i=new e.SnippetString("{{tex: $1}}");await t.insertSnippet(i,n)}else{let i=t.document.getText(s);await t.edit(o=>{o.replace(s,`{{tex: ${i}}}`)})}}});r.subscriptions.push(c,l,m,f,u,w,g,M,b,S,$,F,h,y,H,V,z,X,J,Z,ee,te,ne,oe,ie,se)}T(we,"activate");var Y=class{static{T(this,"CitationCompletionProvider")}async provideCompletionItems(a,c,l,m){let u=a.lineAt(c).text.substring(0,c.character);return!u.endsWith("@")&&!u.match(/\[@$/)?[]:(await K()).map(g=>{let p=new e.CompletionItem(g.key,e.CompletionItemKind.Reference);return p.detail=g.title||g.type,p.documentation=new e.MarkdownString(`**${g.type}**

${g.author||""}

${g.year||""}`),p.insertText=g.key,p})}},U=class{static{T(this,"ReferenceCompletionProvider")}async provideCompletionItems(a,c,l,m){let u=a.lineAt(c).text.substring(0,c.character),w=u.match(/@(s?)(fig|table|eq|snote)(:?)(.*)$/),g=u.match(/@(s?)(f|t|e|sn)$/);if(!w&&!g)return[];let p=await O(),x=[];if(w){let b=w[1]==="s",S=w[2],$=w[3]===":",M=w[4];x=p.filter(h=>h.type===S&&(b?h.supplementary:!h.supplementary)&&(M===""||h.label.toLowerCase().includes(M.toLowerCase()))).map(h=>{let y=new e.CompletionItem(h.label,e.CompletionItemKind.Reference);if(y.detail=`${h.supplementary?"Supplementary ":""}${h.type.charAt(0).toUpperCase()+h.type.slice(1)}`,y.documentation=new e.MarkdownString(`Line ${h.line+1}`),$)y.insertText=h.label;else{let H=h.supplementary?`@s${h.type}:`:`@${h.type}:`;y.insertText=`${H}${h.label}`,y.range=new e.Range(c.with(c.line,u.lastIndexOf("@")),c)}return y})}else if(g){let b=g[1]==="s",S=g[2],M={f:["fig"],t:["table"],e:["eq"],sn:["snote"]}[S]||[];for(let F of M){let h=p.filter(y=>y.type===F&&(b?y.supplementary:!y.supplementary));if(h.length>0){let y=new e.CompletionItem(`${b?"s":""}${F}:`,e.CompletionItemKind.Keyword);y.detail=`${b?"Supplementary ":""}${F.charAt(0).toUpperCase()+F.slice(1)} reference`,y.documentation=new e.MarkdownString(`Found ${h.length} ${b?"supplementary ":""}${F} reference(s)`),y.insertText=`${b?"s":""}${F}:`,y.range=new e.Range(c.with(c.line,u.lastIndexOf("@")+1),c),y.sortText="0",x.push(y)}}}return x}};async function K(){let r=[],a=e.window.activeTextEditor;if(a){let l=d.dirname(a.document.fileName),m=d.join(l,"03_REFERENCES.bib");r.push(m),console.log("Rxiv-Maker: Searching for bibliography in current document directory:",m)}if(e.workspace.workspaceFolders)for(let l of e.workspace.workspaceFolders){let m=d.join(l.uri.fsPath,"03_REFERENCES.bib");r.includes(m)||(r.push(m),console.log("Rxiv-Maker: Searching for bibliography in workspace folder:",m))}let c=null;for(let l of r)try{await E.promises.access(l,E.constants.F_OK|E.constants.R_OK),c=l,console.log("Rxiv-Maker: Found bibliography file at:",c);break}catch{console.log("Rxiv-Maker: Bibliography not found at:",l)}if(!c)return console.log("Rxiv-Maker: No bibliography file found in any search location"),[];try{let l=await E.promises.readFile(c,"utf8"),m=[],f=/@(\w+)\s*\{\s*([^,\s]+)\s*,/g,u;for(;(u=f.exec(l))!==null;){let w=u[1],g=u[2],p=u.index,x=ve(l,p),b=l.substring(p,x),S=b.match(/title\s*=\s*[{"](.*?)["}]/),$=b.match(/author\s*=\s*[{"](.*?)["}]/),M=b.match(/year\s*=\s*[{"](.*?)["}]/);m.push({key:g,type:w,title:S?.[1],author:$?.[1],year:M?.[1]})}return m}catch(l){return l.code==="ENOENT"?[]:(console.error("Error parsing bibliography:",l),[])}}T(K,"getBibEntries");async function O(){let r=[],a=[],c=e.window.activeTextEditor;if(c){let l=d.dirname(c.document.fileName);a.push(d.join(l,"01_MAIN.md")),a.push(d.join(l,"02_SUPPLEMENTARY_INFO.md"))}if(e.workspace.workspaceFolders)for(let l of e.workspace.workspaceFolders){let m=d.join(l.uri.fsPath,"01_MAIN.md"),f=d.join(l.uri.fsPath,"02_SUPPLEMENTARY_INFO.md");a.includes(m)||a.push(m),a.includes(f)||a.push(f)}for(let l of a)try{let f=(await E.promises.readFile(l,"utf8")).split(`
`),u=l.includes("02_SUPPLEMENTARY_INFO");for(let w=0;w<f.length;w++){let g=f[w],p=/\{#(s?)((fig|table|eq|snote)):([a-zA-Z0-9_-]+)(?:\s[^}]*)?\}/g,x;for(;(x=p.exec(g))!==null;){let b=x[1]==="s"||u,S=x[2],$=x[4];r.push({type:S,label:$,line:w,supplementary:b})}}}catch{continue}return r}T(O,"getDocumentReferences");function ve(r,a){let c=0,l=!1,m="";for(let f=a;f<r.length;f++){let u=r[f];if(l)u===m&&r[f-1]!=="\\"&&(l=!1);else if(u==='"'||u==="'")l=!0,m=u;else if(u==="{")c++;else if(u==="}"&&(c--,c===0))return f+1}return r.length}T(ve,"findMatchingBrace");async function W(r){try{let a=["00_CONFIG.yml","01_MAIN.rxm","01_MAIN.md","03_REFERENCES.bib"],c=["02_SUPPLEMENTARY_INFO.rxm","02_SUPPLEMENTARY_INFO.md"];return(await Promise.all(a.map(async f=>{try{return await E.promises.access(d.join(r,f)),!0}catch{return!1}}))).filter(Boolean).length>=2}catch(a){return console.error("Error checking rxiv-maker project:",a),!1}}T(W,"isRxivMakerProject");async function B(){let r=e.window.activeTextEditor;if(!r)return{success:!1,error:"No active document. Please open a file in your manuscript folder."};let a=r.document.fileName,c=d.dirname(a),l=["00_CONFIG.yml","01_MAIN.md","01_MAIN.rxm","03_REFERENCES.bib"],m=await Promise.all(l.map(async p=>{try{return await E.promises.access(d.join(c,p)),!0}catch{return!1}})),f;if(m.some(p=>p))f=c;else{let p=e.workspace.workspaceFolders;if(!p)return{success:!1,error:"No workspace folder found. Please open the manuscript folder in VS Code."};let x=null;for(let b of p){let S=b.uri.fsPath;if((await Promise.all(l.map(async M=>{try{return await E.promises.access(d.join(S,M)),!0}catch{return!1}}))).some(M=>M)){x=S;break}}if(!x)return{success:!1,error:"No manuscript folder found. Please ensure your workspace contains a folder with rxiv-maker files (00_CONFIG.yml, 01_MAIN.md, etc.)"};f=x}let u=null,w=f;for(;w!==d.dirname(w);){try{await E.promises.access(d.join(w,"Makefile"));let p=await E.promises.readFile(d.join(w,"Makefile"),"utf8");if(p.includes("Rxiv-Maker")||p.includes("MANUSCRIPT_PATH")){u=w;break}}catch{}w=d.dirname(w)}return u?{success:!0,manuscriptPath:d.relative(u,f)||".",rxivMakerRoot:u}:{success:!1,error:"Could not find rxiv-maker root directory (no Makefile found). Please ensure you have the rxiv-maker repository cloned and accessible."}}T(B,"findManuscriptFolder");function he(){}T(he,"deactivate");0&&(module.exports={activate,deactivate});
